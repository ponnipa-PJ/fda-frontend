{"remainingRequest":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/producttoken.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/producttoken.vue","mtime":1699258015679},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/babel-loader/lib/index.js","mtime":1687492401655},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1687492401267},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js","mtime":1687492401738}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["producttoken.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"producttoken.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div>\n        <div class=\"form-group mt-5\">\n          <label for=\"exampleFormControlTextarea1\">URL</label>\n          <textarea\n            v-model=\"data.url\"\n            class=\"form-control\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n          ></textarea>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlTextarea1\">Content</label>\n          <textarea\n            v-model=\"data.content\"\n            class=\"form-control\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"7\"\n          ></textarea>\n        </div>\n        <button @click=\"search()\" type=\"submit\" class=\"mb-3 btn btn-success\">\n          ค้นหา</button\n        >&nbsp;\n        <button @click=\"clear()\" type=\"submit\" class=\"mb-3 btn btn-danger\">\n          ล้างข้อมูล\n        </button>\n      </div>\n      <table class=\"table table-bordered\" v-if=\"status\">\n        <thead>\n          <tr>\n            <th\n              scope=\"col\"\n              style=\"\n                text-align: center;\n                vertical-align: middle;\n                background-color: #ffb454;\n              \"\n            >\n              เงื่อนไขการตรวจสอบข้อที่ 1\n            </th>\n            <th\n              scope=\"col\"\n              style=\"\n                text-align: center;\n                vertical-align: middle;\n                background-color: #ffb454;\n              \"\n            >\n              ข้อมูลจากฐานข้อมูลอย.\n            </th>\n            <th\n              scope=\"col\"\n              style=\"\n                text-align: center;\n                vertical-align: middle;\n                background-color: #ffb454;\n              \"\n            >\n              ข้อมูลจากเว็บไซต์\n            </th>\n            <th\n              scope=\"col\"\n              style=\"\n                text-align: center;\n                vertical-align: middle;\n                background-color: #ffb454;\n              \"\n            >\n              ผลการตรวจสอบ\n            </th>\n            <th\n              scope=\"col\"\n              style=\"\n                text-align: center;\n                vertical-align: middle;\n                background-color: #ffb454;\n              \"\n            >\n              ข้อสรุป\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td :style=\"colorfda\">เลขที่อนุญาต</td>\n            <td :style=\"colorfda\">{{ procheck.mapfda }}</td>\n            <td :style=\"colorfda\">{{ procheck.fda }}</td>\n            <td :style=\"colorfda\">{{ procheck.cncnm }}</td>\n            <td\n              v-if=\"\n                procheck.cat_status &&\n                procheck.name_status &&\n                procheck.fda_status == 1\n              \"\n              rowspan=\"3\"\n              style=\"\n                text-align: center;\n                vertical-align: middle;\n                background-color: #a3e9a4;\n              \"\n            >\n              <span>ผ่าน</span>\n            </td>\n            <td\n              v-else\n              rowspan=\"3\"\n              style=\"\n                text-align: center;\n                vertical-align: middle;\n                background-color: #f9bdbb;\n              \"\n            >\n              <span>ไม่ผ่าน</span>\n            </td>\n          </tr>\n          <tr>\n            <td :style=\"colorcat\">ประเภทผลิตภัณฑ์</td>\n            <td :style=\"colorcat\">{{ procheck.typepro }}</td>\n            <td :style=\"colorcat\">\n              <span v-if=\"procheck.typepro\">{{ procheck.type }}</span\n              ><span v-else>-</span>\n            </td>\n            <td :style=\"colorcat\">\n              <span v-if=\"procheck.cat_status\">ผ่าน</span\n              ><span v-else>ไม่ผ่าน</span>\n            </td>\n          </tr>\n          <tr>\n            <td :style=\"colorname\">ชื่อผลิตภัณฑ์</td>\n            <td :style=\"colorname\">\n              {{ procheck.productha }}<br />{{ procheck.produceng }}\n            </td>\n            <td :style=\"colorname\"><span v-html=\"procheck.name\"></span></td>\n            <td :style=\"colorname\">\n              <span v-if=\"procheck.name_status\">ผ่าน</span\n              ><span v-else>ไม่ผ่าน</span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <table class=\"table table-bordered mt-3 mb-5\" v-if=\"status\">\n        <tbody>\n          <tr>\n            <th style=\"background-color: #ffb454; vertical-align: middle\">\n              เงื่อนไขการตรวจสอบข้อที่ 2\n            </th>\n            <th style=\"background-color: #ffb454; vertical-align: middle\">\n              ข้อความโฆษณา\n            </th>\n            <th style=\"background-color: #ffb454; vertical-align: middle\">\n              ข้อความโฆษณาเกินจริง\n            </th>\n          </tr>\n          <tr>\n            <td :style=\"colorkey\">รายละเอียดสินค้า</td>\n            <td :style=\"colorkey\" style=\"width: 40%\">\n              <span v-html=\"list.sentence_keyword\"></span>\n            </td>\n            <!-- <th :style=\"colorkey\">ข้อความโฆษณา</th> -->\n            <td :style=\"colorkey\" v-if=\"list.keyword != 0\">\n              <tr v-for=\"(k, i) in list.keyword\" :key=\"i\">\n                <td>\n                  <span v-html=\"k.sentence_rulebase\"></span><br /><br />\n                  <span v-for=\"(s, idx) in k.rule_based_name\" :key=\"idx\">{{\n                    s\n                  }}</span>\n                  <br /><br />\n                  <span v-if=\"k.count_rulebased\"\n                    >เกินจริง {{ getpercentage(k) }}%</span\n                  ><br /><br />\n                  <div style=\"text-align: left\">\n                    <button\n                      data-bs-toggle=\"modal\"\n                      data-bs-target=\"#AddScopusToken\"\n                      type=\"submit\"\n                      class=\"mb-3 btn btn-success\"\n                    >\n                      <i class=\"fa fa-plus\" aria-hidden=\"true\">\n                        เพิ่ม keyword</i\n                      >\n                    </button>\n                  </div>\n                </td>\n                <td>\n                  <span v-if=\"k.answer == 1\">เกินจริง</span\n                  ><span v-if=\"k.answer == 9\">ไม่เกินจริง</span\n                  ><span v-if=\"k.answer == 0\"></span>\n                </td>\n\n                <td>\n                  <button\n                    @click=\"savetorule_based(k, 1)\"\n                    type=\"submit\"\n                    class=\"mb-3 btn btn-success\"\n                  >\n                    <i class=\"fa fa-check\"></i></button\n                  >&nbsp;\n                  <button\n                    @click=\"savetorule_based(k, 9)\"\n                    type=\"submit\"\n                    class=\"mb-3 btn btn-danger\"\n                  >\n                    <i class=\"fa fa-times\"></i>\n                  </button>\n                </td>\n              </tr>\n            </td>\n            <td :style=\"colorkey\" v-else>\n              <tr>\n                ไม่พบข้อความโฆษณาเกินจริง\n              </tr>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <table class=\"table mt-3\" v-if=\"status\">\n        <thead>\n          <tr>\n            <th scope=\"col\">สินค้า</th>\n            <th scope=\"col\">ข้อมูล</th>\n            <th scope=\"col\">FDA</th>\n            <th scope=\"col\">ตัดคำ</th>\n            <th scope=\"col\">ข้อมูลจากฐานข้อมูลอย.</th>\n            <!-- <th scope=\"col\"></th> -->\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(l, i) in product\" :key=\"i\">\n            <td :style=\"l.bg\">{{ l.name }}</td>\n            <td :style=\"l.bg\">{{ l.detail }}</td>\n            <!-- <td :style=\"l.bg\">\n              <div class=\"row\">\n          <div class=\"col-md-2\" v-for=\"(im ,i) in imagelists\" :key=\"i\">\n            <img :src=\"im\" width=\"100%\"/>\n          </div>\n        </div>\n            </td> -->\n            <td :style=\"l.bg\" style=\"width: 300px\">\n              <div>\n                เลขที่อนุญาต : {{ l.fda }}<br />\n                <!-- ชื่อผลิตภัณฑ์: <span v-html=\"matchname\"></span> -->\n                <!-- ชื่อผลิตภัณฑ์: {{l.productha}} -->\n              </div>\n            </td>\n            <td :style=\"l.bg\">{{ cut(l.token) }}</td>\n            <td\n              style=\"background-color: #bdedff\"\n              v-if=\"l.status == 1 || l.status == 3\"\n            >\n              <p class=\"card-text\">สถานะ : {{ l.cncnm || \"\" }}</p>\n              <p class=\"card-text\">\n                ประเภทผลิตภัณฑ์ :<span> {{ l.typepro }}</span>\n              </p>\n              <p class=\"card-text\">\n                ใบสำคัญ/เลขที่อนุญาต : <span> {{ l.lcnno }}</span>\n              </p>\n              <p class=\"card-text\">\n                ชื่อผลิตภัณฑ์ (TH) : <span> {{ l.productha }}</span>\n              </p>\n              <p class=\"card-text\">\n                ชื่อผลิตภัณฑ์ (EN) : <span> {{ l.produceng }}</span>\n              </p>\n              <p class=\"card-text\">ชื่อผู้รับอนุญาต : {{ l.licen }}</p>\n              <p class=\"card-text\">สถานที่ผลิต : {{ l.Addr }}</p>\n              <p class=\"card-text\">Newcode : {{ l.Newcode }}</p>\n            </td>\n            <td :style=\"l.bg\" v-else>ไม่พบข้อมูล</td>\n            <!-- <td :style=\"l.bg\">\n            <i class=\"fa fa-circle\" :style=\"l.icon\" aria-hidden=\"true\"></i>\n          </td> -->\n          </tr>\n        </tbody>\n      </table>\n      <!-- Modal -->\n      <div\n        class=\"modal fade\"\n        id=\"AddScopusToken\"\n        tabindex=\"-1\"\n        aria-labelledby=\"exampleModalLabel\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"exampleModalLabel\">{{ title }}</h5>\n            </div>\n            <div class=\"modal-body\">\n              <form>\n                <div class=\"card-body mt-3\">\n                  <div class=\"form-group mt-3\">\n                    <label>ข้อความ</label>\n                    <input\n                      v-model=\"key.name\"\n                      type=\"text\"\n                      min=\"1\"\n                      class=\"form-control form-control-sm\"\n                    />\n                  </div>\n                </div>\n              </form>\n            </div>\n            <div class=\"modal-footer mt-3\">\n              <button type=\"button\" class=\"btn btn-success\" @click=\"save()\">\n                บันทึก\n              </button>\n              <button\n                id=\"closedcategory\"\n                type=\"button\"\n                class=\"btn btn-secondary\"\n                data-bs-dismiss=\"modal\"\n              >\n                ปิด\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n// import ProductsService from '../services/ProductsService.js'\nimport DictService from \"../services/DictService\";\nimport RuleBasedService from \"../services/RuleBasedService\";\nimport MapRuleBasedService from \"../services/MapRuleBasedService\";\nimport LinkService from \"../services/LinkService\";\nimport AdvertiseService from \"../services/AdvertiseService\";\nimport KeywordService from \"../services/KeywordService\";\n\nexport default {\n  name: \"App\",\n  components: {},\n  data() {\n    return {\n      list: [],\n      url: \"\",\n      file: \"\",\n      status: false,\n      urlPath: \"\",\n      imagelists: \"\",\n      tokenize: \"\",\n      matchname: \"\",\n      matchcategory: \"\",\n      type: \"\",\n      matchnamesum: \"\",\n      statusname: 0,\n      statuscat: 0,\n      statusfda: 0,\n      colorname: \"background-color:#f9bdbb\",\n      colorfda: \"background-color:#f9bdbb\",\n      colorcat: \"background-color:#f9bdbb\",\n      id: \"\",\n      keyword: [],\n      colorkey: \"background-color:#f9bdbb\",\n      desc: \"\",\n      arrList: [],\n      alldata: 0,\n      back: 0,\n      next: 0,\n      data: {},\n      product_token: 0,\n      title: \"เพิ่ม keyword\",\n      key: {},\n      fda: \"\",\n      product: [],\n      procheck: [],\n    };\n  },\n  computed: {\n    currentUser() {\n      return this.$store.state.auth.user;\n    },\n  },\n  methods: {\n    clear() {\n      this.data = {};\n      this.product = [];\n      this.procheck = {};\n      this.status = false;\n    },\n    cut(data) {\n      data = data.filter((letter) => letter !== \" \");\n      var mapname = data.toString();\n\n      mapname = mapname.replaceAll(\",\", \" | \");\n      return mapname;\n    },\n    save() {\n      //console.log(this.key);\n      if (this.key.name == null || this.key.name == \"\") {\n        alert(\"กรุณากรอกข้อความ\");\n      } else {\n        var prodata = {\n          name: this.key.name,\n          status: 1,\n        };\n        //console.log(prodata);\n        KeywordService.createkeyword(prodata).then((res) => {\n          //console.log(res.data);\n          if (res.data.err == 1062) {\n            alert(\"มีคำนี้ในระบบแล้ว\");\n          } else {\n            DictService.createdict(prodata).then(() => {\n              //console.log(res.data );\n              // RuleBasedService.createdcolumnrule_based(res.data.id).then(() => {\n\n              document.getElementById(\"closedcategory\").click();\n              alert(\"บันทึกสำเร็จ\");\n              // })\n            });\n          }\n        });\n      }\n    },\n    getpercentage(data) {\n      // var dict = JSON.parse(data.dict_id)\n      // var rule_based_id = JSON.parse(data.rule_based_id)\n      // var re = (100 * data.count_rulebased)/ (rule_based_id.length)\n      return data.count_rulebased;\n    },\n    savetorule(sen, answer) {\n      // console.log(answer);\n      var iddata = [];\n\n      for (let d = 0; d < sen.length; d++) {\n        // console.log(datasplit[d]);\n        DictService.getdicts(\"\", sen[d]).then(async (res) => {\n          if (res.data.length > 0) {\n            // console.log(res.data[0].id);\n            iddata.push(res.data[0].id);\n          }\n          // console.log(d+1 , sen.length);\n          // console.log(iddata);\n          if (d + 1 == sen.length) {\n            var sql = `SELECT r.* FROM map_rule_based m join rule_based r on m.rule_based_id = r.id WHERE m.status = 1 and dict_id = '[${iddata}]'`;\n            // console.log(sql);\n\n            await RuleBasedService.getbydict(sql).then((res) => {\n              if (res.data.length == 0) {\n                let text = \"\";\n                text += \"{\";\n                for (let i = 0; i < iddata.length; i++) {\n                  // console.log(iddata[i]);\n                  text += '\"dict' + iddata[i] + '\"' + \":\" + 1 + \",\";\n                }\n                text += '\"answer' + '\"' + \":\" + answer + \",\";\n                text = text.slice(0, -1);\n                text += \"}\";\n                // console.log(text);\n                let jsonData = JSON.parse(text);\n                // console.log(jsonData);\n                RuleBasedService.createrule_based(jsonData).then((res) => {\n                  var maprule = {\n                    rule_based_id: res.data.id,\n                    dict_id: iddata,\n                    status: 1,\n                  };\n                  MapRuleBasedService.createmap_rule_based(maprule).then(() => {\n                    // console.log(res.data);\n                    // var pro = {\n                    //   map_rule_based:res.data.id\n                    // }\n                    // ProductsService.map_rule_based(id,pro).then(() => {\n                    alert(\"บันทึกสำเร็จ\");\n\n                    this.getdata();\n                    //               setTimeout(function () {\n                    //   location.reload();\n                    // }, 500);\n                    // });\n                  });\n                });\n              } else {\n                // console.log(res.data);\n                var updatemaprule = {\n                  answer: answer,\n                };\n                RuleBasedService.updaterule_based(\n                  res.data[0].id,\n                  updatemaprule\n                ).then(() => {\n                  alert(\"บันทึกสำเร็จ\");\n\n                  this.getdata();\n                });\n              }\n            });\n          }\n        });\n      }\n    },\n    savetorule_based(data, answer) {\n      // console.log(sen.length);\n      // console.log('answer',answer);\n      console.log(data);\n\n      var maprule = {\n        keyword_id: 1,\n        advertise_id: this.product_token,\n        status: 1,\n        answer: answer,\n        user: this.currentUser.id,\n        map_dict: JSON.parse(data.dict_id),\n      };\n      if (!data.mapId) {\n        MapRuleBasedService.checkintb(data.dict_id).then((check) => {\n          if (check.count == 1) {\n            alert(\"มีรูปประโยคนี้อยู่ใน rule based แล้ว\");\n          } else {\n            MapRuleBasedService.createmap_rule_based(maprule).then(\n              async (res) => {\n                // console.log(res.data);\n                var map_id = res.data.id;\n                var sendata = JSON.parse(data.dict_id);\n                // console.log(sendata);\n                // console.log(dict_name);\n                for (let d = 0; d < sendata.length; d++) {\n                  // console.log(sendata[d]);\n                  await DictService.getdict(sendata[d]).then(async (sen) => {\n                    // console.log(sen.data);\n                    var rule = {\n                      map_rule_based_id: map_id,\n                      dict_id: sendata[d],\n                      dict_name: sen.data.name,\n                      no: d + 1,\n                    };\n                    // console.log(rule);\n                    await RuleBasedService.createrule_based(rule).then(() => {\n                      if (d + 1 == sendata.length) {\n                        this.getdetail();\n\n                        alert(\"บันทึกสำเร็จ\");\n                      }\n                    });\n                  });\n                }\n              }\n            );\n          }\n        });\n      } else {\n        MapRuleBasedService.deletemap_rule_based(data.mapId, maprule).then(\n          async () => {\n            // console.log(res.data);\n            this.getdetail();\n            alert(\"บันทึกสำเร็จ\");\n          }\n        );\n      }\n    },\n    checkkeyword(name) {\n      // console.log(name);\n      //   axios.get('http://localhost:8081/api/keyword_dicts?name=1').then((res) => {\n      //     console.log(res.data);\n      // for (let r = 0; r < res.data.length; r++) {\n      // name = name.replaceAll(/([\\uE000-\\uF8FF]|\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDDFF])/g, '')\n      //       name = name.replaceAll(/(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|\\ud83c[\\ude32-\\ude3a]|\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])/g, '');\n      //       name = name.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"\");\n      //       name = name.replaceAll(\"_\", \"\");\n      //       name = name.replaceAll(\"!\", \"\");\n      //       name = name.replaceAll(\"*\", \"\");\n      // name = name.replaceAll(`_/l\\_`, \"\");// eslint-disable-line\n      // console.log('http://127.0.0.1:5000/checkkeyword?text=' + name);\n      var desc = this.finddescription(name);\n      // console.log('http://127.0.0.1:5000/worktokendesc?text='+desc);\n      axios\n        .get(LinkService.getpythonlink() + \"/worktokendesc?text=\" + desc)\n        .then((res) => {\n          // console.log(res.data);\n          this.desc = res.data;\n        });\n      // name = 'ข้อมูลจำเพาะของสินค้า หมวดหมู่ Shopee กลุ่มผลิตภัณฑ์เพื่อสุขภาพ อาหารเสริมเพื่อความงาม ผิว ยี่ห้อ Bluebird(บลูเบิร์ด) Storage Condition Normal ประเภทสารอาหาร สารต้านอนุมูลอิสระ, วิตามินซี ประเทศต้นกำเนิดสินค้า ไทย หน้าที่ของอาหารเสริมสำหรับความงาม ดูแลสิว, ป้องกันริ้วรอย ประเภทการห่อ ห่อรวมกัน เพศ ทั้งสองเพศ อายุการเก็บรักษา 12 เดือน ประเภทของผลิตภัณฑ์ยา แคปซูล หมายเลขใบอนุญาต/อย. 30-1-26764-5-0051 จำนวนสินค้า 17901 ส่งจาก จังหวัดนครราชสีมา รายละเอียดสินค้า วิตามินซี พลัส ตรา บลูเบิร์ด ตรา บลูเบิร์ด ขนาด 1000 มิลลิกรัม 60 แคปซูล เรทขายส่ง ช่วงราคาที่ 1 สั่งซื้อตั้งแต่ 5 กระปุกขึ้นไป ถึง 20 กระปุก ราคากระปุกละ 93 บาท ช่วงราคาที่ 2 สั่งซื้อตั้งแต่ 21 กระปุกขึ้นไป ถึง 50 กระปุก ราคากระปุกละ 90 บาท ช่วงราคาที่ 3 สั่งซื้อตั้งแต่ 51 กระปุกขึ้นไป ถึง 100 กระปุก ราคากระปุกละ 87 บาท ช่วงราคาที่ 4 สั่งซื้อตั้งแต่ 100 กระปุกขึ้นไป ..................... ราคากระปุกละ 85 บาท Vitamin C Plus Dietary Supplement Product Bluebird Brand ผลิตภัณฑ์เสริมอาหารวิตามินซี พลัส ตรา บลูเบิร์ด ส่วนประกอบทั้งหมดใน 1 แคปซูล ส่วนประกอบที่สำคัญ (Active Ingredient) VITAMIN C (100%) - 60 มิลลิกรัม CITRUS BIOFLAVONOID POWDER - 630 มิลลิกรัม BARBADOSCHERRY POWDER/ACEROLA CHERRY POWDER (ผงบาร์เบโดสเชอร์รี/ผงอะเซโรลาเชอร์รี) (MALPIGHIA GLABRA L.) ผล - 60 มิลลิกรัม ROSEHIP POWDER (ผงโรสฮิปส์) (ROSA CANINA L.) ผล - 60 มิลลิกรัม Rutin - 30 มิลลิกรัม INDIAN GOOSEBERRY POWDER (ผงมะขามป้อม) (PHYLLANTHUS EMBLICA L. ) ผล - 60 มิลลิกรัม ส่วนประกอบที่ไม่สำคัญ (Inactive Ingredient) EDIBLE GELATIN 428 - 98.5 มิลลิกรัม TITANIUM DIOXIDE 171 -1.95 มิลลิกรัม วิธีรับประทาน ครั้งละ 1-2 แคปซูล หลังอาหารเช้า เลขที่ อ.ย. 30-1-26764-5-0051 คำเตือน ควรเก็บให้พ้นแสงแดงและความชื้น เด็ก สตรีมีครรภ์ และสตรีให้นมบุตรไม่ควรรับประทาน ควรกินอาหารหลากหลายให้ครบ 5 หมู่ ในสัดส่วนที่เหมาะสมเป็นประจำ ไม่มีผลในการป้องกันหรือรักษาโรค สรรพคุณ ประโยชน์ของการกินวิตามินซี ️ทำให้หน้าไม่โทรม หน้าตาสดใส ️ช่วยฟื้นฟูผิวหน้า สิว ฝ้า กระ ริ้วรอย ดูจางลง ️ผิวพรรณนุ่มเรียบเนียบ ชุ่มชื่น ️หน้าตาดูเด็กและเด้งขึ้น ️ผิวหน้าขาวอมชมพู สินค้าตัดรอบทุกวันเวลา ตัดรอบเวลา 12.00 น ของทุกวัน แจ้งโอนเกินเวลา ส่งรอบวันถัดไปนะจ๊ะ ส่งพัสดุทุกวัน เว้นวันอาทิตย์ และวันหยุดนักขัตฤกษ์ ขอบพระคุณลูกค้าทุกท่าน ที่ไว้วางใจผลิตภัณฑ์ของเราเสมอมา_/l\\_'\n      // console.log('http://127.0.0.1:5000/checkkeyword?text=' + desc);\n      var con = {\n        content: desc,\n      };\n      axios\n        .post(LinkService.getpythonlink() + \"/checkkeyword?text=\", con)\n        .then((res) => {\n          // console.log(res.data);\n          if (res.data.length > 0) {\n            // this.keyword.push(res.data)\n            this.keyword = res.data;\n          }\n        });\n      //     }\n\n      // });\n      //       var listkeywords = []\n      //       var namesplit = name.split(\" \")\n      //       // console.log(namesplit);\n      //       axios.get('http://localhost:8081/api/keyword_dicts?name=1').then((res) => {\n      //         console.log(res.data);\n      //         var keylist = []\n      //         for (let r = 0; r < res.data.length; r++) {\n      //           res.data[r].name = res.data[r].name.replaceAll(\".\",\"\")\n      //           var kk = res.data[r].name.split(\" \")\n      //           for (let k = 0; k < kk.length; k++) {\n      //             keylist.push(kk[k])\n      //           }\n      //         }\n      //         for (let key = 0; key < keylist.length; key++) {\n      //           for (let n = 0; n < namesplit.length; n++) {\n      //             if (namesplit[n] == keylist[key] && keylist[key] != '' && isNaN(keylist[key])) {\n      //               listkeywords.push(keylist[key])\n      //             }\n\n      //           }\n      //         }\n      //         // console.log(keylist);\n      //         // console.log(listkeywords);\n\n      //       console.log(listkeywords.length);\n      //         if (listkeywords.length == 0) {\n\n      //           this.colorkey = \"background-color:#a3e9a4\"\n      //         }\n      //         var result = [];\n      //         listkeywords.forEach(function(item) {\n      //      if(result.indexOf(item) < 0) {\n      //          result.push(item);\n      //      }\n      // });\n      // console.log(result);\n      // listkeywords = result\n      //         for (let l = 0; l < listkeywords.length; l++) {\n      //           // console.log('http://127.0.0.1:5000/checkkeyword?name=' + name+'&&name_real=');\n      //           axios.get('http://127.0.0.1:5000/checkkeyword?name=' + name+'&&name_real=' + listkeywords[l]).then((res) => {\n      //             // console.log(res.data);\n      //         this.keyword.push(res.data)\n      //       });\n\n      //         }\n      //       });\n    },\n    finddescription(data) {\n      // console.log(data);\n      var text = [\"รายละเอียด\"];\n      var findfda = data;\n      for (let t = 0; t < text.length; t++) {\n        if (findfda.indexOf(text[t]) != -1) {\n          findfda = findfda.substring(findfda.indexOf(text[t]));\n        }\n      }\n      // if (findfda == 'อาหาร') {\n      //   findfda = findfda+ findfda+'เสริม'\n      // }\n      // console.log(findfda);\n      return findfda;\n    },\n    loaddict() {\n      axios.get(LinkService.getpythonlink() + \"/loaddict\").then(async () => {});\n    },\n    getdetail() {\n      // var url = this.data.url.split(\"-i.\");\n      var url = this.data.url.split(\"-i.\");\n      this.data.url = url[0];\n      var selectpro = {\n        url: this.data.url,\n        id: this.currentUser.id,\n      };\n      MapRuleBasedService.getproduct_token(selectpro).then(async (res) => {\n        console.log(res.data);\n        // var best = this.getMax(res.data.keyword,'count_rulebased')\n        //console.log(best);\n        this.list = res.data;\n        this.status = true;\n        var data = {\n          advertise_id: res.data.keyword[0].product_token_id,\n        };\n        MapRuleBasedService.updateweight(\n          res.data.keyword[0].map_rule_based_id,\n          data\n        ).then(() => {});\n        // this.list.keyword = [best]\n        // this.status = true\n      });\n    },\n    async search() {\n      var url = this.data.url.replaceAll(\".\",'');\n      url = url.split(\"-i\");\n      this.data.url = url[0];\n      console.log(this.data.url);\n      this.procheck = {};\n      this.product = [];\n      this.product_token = 0;\n      var con = {};\n      await this.loaddict();\n      this.status = false;\n      if (this.data.url == null || this.data.url == \"\") {\n        alert(\"กรุณากรอก URL\");\n      } else if (this.data.content == null || this.data.content == \"\") {\n        alert(\"กรุณากรอกข้อความโฆษณา\");\n      } else {\n        var content = \"\";\n        content = this.data.content.replaceAll(\n          /([\\uE000-\\uF8FF]|\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDDFF])/g,\n          \"\"\n        );\n        content = content.replaceAll(\n          /(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|\\ud83c[\\ude32-\\ude3a]|\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])/g,\n          \" \"\n        );\n\n        content = content.replaceAll(/\\ud83d[\\ude00-\\ude4f]/g, \" \");\n        content = content.replaceAll(/(\\r\\n|\\n|\\r)/gm, \" \");\n        content = content.replaceAll(\"_\", \"\");\n        content = content.replaceAll(\"!\", \"\");\n        content = content.replaceAll(\"*\", \"\");\n        content = content.replaceAll(\"&\", \"\");\n        content = content.replaceAll(\"#\", \"\");\n        content = content.replaceAll(\"•\", \"\");\n        content = content.replaceAll(\"+\", \"\");\n        content = content.replaceAll(`_/l\\_`, \"\"); // eslint-disable-line\n        content = content.replaceAll(\n          /([\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF])/g,\n          \" \"\n        );\n\n        this.fda = await this.findfda(content);\n        console.log(this.fda);\n        var selectpro = {\n          url: this.data.url,\n          id: this.currentUser.id,\n        };\n        await MapRuleBasedService.getproduct_token(selectpro).then(async (res) => {\n          // console.log(res.data);\n          // console.log(content);\n          if (res.data.id) {\n            this.product_token = res.data.id;\n          }\n          // console.log(this.product_token);\n          // console.log(LinkService.getpythonlink()+'/worktokendesc?text=' + content);\n          con = {\n            content: content,\n          };\n          await axios\n            .post(LinkService.getpythonlink() + \"/wordtokendesc\", con)\n            .then(async (res) => {\n              // var sentence = res.data.sentent.replaceAll(\"<spanstyle\", \"<span style\");\n              var des = {\n                url: this.data.url,\n                sentence: content,\n                sentence_keyword: res.data.sentent,\n                keyword_id: res.data.keywordId,\n                status: 1,\n              };\n              console.log(des);\n              if (this.product_token == 0) {\n                await MapRuleBasedService.createproduct_token(des).then(\n                  async (producttoken) => {\n                    console.log(producttoken);\n                    this.product_token = producttoken.data.id;\n                    await this.checkfda(content, this.product_token);\n                    // console.log(producttoken);\n                    this.product_token = producttoken.data.id;\n                    con = {\n                      content: content,\n                    };\n                    //console.log(con);\n                    await axios\n                      .post(LinkService.getpythonlink() + \"/checkkeyword\", con)\n                      .then(async (res) => {\n                        //console.log(res.data);\n                        if (res.data.length > 0) {\n                          for (let r = 0; r < res.data.length; r++) {\n                            var sentencetoken = res.data[r].sentent.replaceAll(\n                              '\"',\n                              \"\"\n                            ); // eslint-disable-line\n                            sentencetoken = sentencetoken.replaceAll(\n                              \"<spanstyle\",\n                              \"<span style\"\n                            );\n\n                            // sentencetoken = sentencetoken.replaceAll('\"color:red\\\"','\"color:red\"')\n                            var advertise = {\n                              product_token_id: this.product_token,\n                              keyword_dict_id: res.data[r].keyword_dict_id,\n                              dict_id: res.data[r].dict_id,\n                              dict_name: res.data[r].dict_name,\n                              sentent: sentencetoken,\n                              sen: res.data[r].sen,\n                            };\n                            // console.log(this.product_token);\n                            await AdvertiseService.createadvertise(advertise).then(\n                              async () => {\n                                if (r + 1 == res.data.length) {\n                                  var getprotoken = {\n                                    url: this.product_token,\n                                  };\n                                  await MapRuleBasedService.getproductkeyword(\n                                    getprotoken\n                                  ).then((pro) => {\n                                    // console.log(pro.data);\n                                    this.tokendata(pro.data);\n                                  });\n                                }\n                              }\n                            );\n                          }\n                        } else {\n                          this.getdetail();\n                        }\n                      });\n                  }\n                );\n              } else {\n                await AdvertiseService.deleteadvertise(this.product_token).then(\n                  async () => {\n                    await MapRuleBasedService.updatproduct_token(\n                      this.product_token,\n                      des\n                    ).then(async () => {\n                      // await AdvertiseService.deleteadvertise(this.product_token).then(async ()=>{\n                      // console.log(del);\n                      await this.checkfda(content, this.product_token);\n                      con = {\n                        content: content,\n                      };\n                      //console.log(con);\n                      axios\n                        .post(\n                          LinkService.getpythonlink() + \"/checkkeyword\",\n                          con\n                        )\n                        .then(async (res) => {\n                          //console.log(res.data);\n                          if (res.data.length > 0) {\n                            for (let r = 0; r < res.data.length; r++) {\n                              var sentencetoken = res.data[\n                                r\n                              ].sentent.replaceAll('\"', \"\"); // eslint-disable-line\n                              sentencetoken = sentencetoken.replaceAll(\n                                \"<spanstyle\",\n                                \"<span style\"\n                              );\n\n                              // sentencetoken = sentencetoken.replaceAll('\"color:red\\\"','\"color:red\"')\n                              var advertise = {\n                                product_token_id: this.product_token,\n                                keyword_dict_id: res.data[r].keyword_dict_id,\n                                dict_id: res.data[r].dict_id,\n                                dict_name: res.data[r].dict_name,\n                                sentent: sentencetoken,\n                                sen: res.data[r].sen,\n                                status: 1,\n                              };\n                              // console.log(this.product_token);\n                              AdvertiseService.createadvertise(advertise).then(\n                                () => {\n                                  if (r + 1 == res.data.length) {\n                                    var getprotoken = {\n                                      url: this.product_token,\n                                    };\n                                    MapRuleBasedService.getproductkeyword(\n                                      getprotoken\n                                    ).then((pro) => {\n                                      // console.log(pro.data);\n                                      this.tokendata(pro.data);\n                                    });\n                                  }\n                                }\n                              );\n                            }\n                          }\n                        });\n                    });\n                  }\n                );\n              }\n            });\n        });\n      }\n    },\n    getMax(arr, prop) {\n      var max;\n      for (var i = 0; i < arr.length; i++) {\n        if (max == null || parseInt(arr[i][prop]) > parseInt(max[prop]))\n          max = arr[i];\n      }\n      return max;\n    },\n    getMaxlength(arr, prop) {\n      var max;\n      for (var i = 0; i < arr.length; i++) {\n        if (max == null || parseInt(arr[i][prop]) > parseInt(max[prop]))\n          max = arr[i];\n      }\n      return max;\n    },\n    getAllMaxArray(arr, value) {\n      var array = [];\n      arr.map(function (num, idx) {\n        if (num.allcount == value) {\n          array.push(arr[idx]);\n        }\n      });\n      return array;\n    },\n    async tokendata(list) {\n      //console.log(list);\n      if (list.keyword.length > 0) {\n        for (let l = 0; l < list.keyword.length; l++) {\n          //console.log(list.keyword[l].keyword_dict_id);\n          if (list.keyword[l].keyword_dict_id) {\n            var map = {\n              id: list.keyword[l].id,\n              url: list.keyword[l].keyword_dict_id,\n              keyword_id: list.keyword[l].dict_id,\n            };\n            // console.log(map);\n            await MapRuleBasedService.getmapproduct(map).then(async (res) => {\n              // console.log(res.data);\n              var maxvalue = this.getMax(res.data, \"allcount\");\n              // console.log(maxvalue.allcount);\n              var i = this.getAllMaxArray(res.data, maxvalue.allcount);\n              // console.log(i);\n              var bestdata = this.getMax(i, \"length\");\n              // console.log(bestdata);\n              // getAllIndexes\n              // console.log(bestdata);\n              var best = {\n                id: list.keyword[l].id,\n                sentence: bestdata,\n              };\n              console.log(best);\n              var rule_based_name = bestdata.name.toString();\n              rule_based_name = rule_based_name.replaceAll(\",\", \"\");\n              console.log(rule_based_name);\n              await axios\n                .get(\n                  LinkService.getpythonlink() +\n                    \"/loaddict?word=\" +\n                    rule_based_name\n                )\n                .then(async () => {\n                  await MapRuleBasedService.getbestrulebased(best).then(\n                    async (res) => {\n                      console.log(res.data);\n\n                      var rulebased = {\n                        count_rulebased: res.data.count,\n                        sentence_rulebase: res.data.sentence,\n                        rule_based_id: res.data.rule_based_id,\n                        rule_based_name: res.data.rule_based_name,\n                        map_rule_based_id: res.data.map_id,\n                      };\n                      console.log(rulebased);\n                      // console.log(list.keyword[l].id);\n                      await MapRuleBasedService.updaterulebased(\n                        list.keyword[l].id,\n                        rulebased\n                      ).then(() => {\n                        if (l + 1 == list.keyword.length) {\n                          this.getdetail();\n                        }\n                      });\n                    }\n                  );\n                });\n              // list.keyword[l].rulebase = res.data;\n              // if (l + 1 == list.keyword.length) {\n              //   this.compare(list);\n              // }\n            });\n          }\n\n          // }\n        }\n      } else {\n        this.getdetail();\n      }\n    },\n    compare(list) {\n      for (let k = 0; k < list.keyword.length; k++) {\n        // console.log(list.keyword[k]);\n        var dict_id = JSON.parse(list.keyword[k].dict_id);\n        // var rulebased = JSON.parse(list.keyword[k].rulebase)\n        // console.log(list.keyword[k].rulebased);\n        if (list.keyword[k].rulebase) {\n          let uniqueCharsrule = list.keyword[k].rulebase.filter((c, index) => {\n            return list.keyword[k].rulebase.indexOf(c) === index;\n          });\n          var filteredArray = dict_id.filter(function (n) {\n            return uniqueCharsrule.indexOf(n) !== -1;\n          });\n          // console.log(filteredArray);\n          // console.log('filteredArray',filteredArray);\n          // console.log('dict_id',dict_id.length);\n          // console.log(sumdictId.length);\n          var percentage =\n            (100 * parseInt(filteredArray.length)) / parseInt(dict_id.length);\n          // console.log(percentage);\n          list.keyword[k].percentage = percentage;\n        } else {\n          list.keyword[k].percentage = 0;\n        }\n        if (k + 1 == list.keyword.length) {\n          this.list = list;\n          // this.status = true;\n        }\n      }\n    },\n    getAllIndexes(arr, val) {\n      var indexes = [],\n        i = -1;\n      while ((i = arr.indexOf(val, i + 1)) != -1) {\n        indexes.push(i);\n      }\n      return indexes;\n    },\n    findfda(data) {\n      var text = [\"หมายเลขใบอนุญาต/อย.\"];\n      // var end = ['']\n      var findfda = data;\n      for (let t = 0; t < text.length; t++) {\n        findfda = findfda.substring(findfda.indexOf(text[t]), data.length);\n        var endindex = this.getAllIndexes(findfda, \" \");\n        findfda = findfda.substring(findfda.indexOf(text[t]), endindex[1]);\n      }\n      // console.log(findfda);\n\n      findfda = findfda.replaceAll(\"หมายเลขใบอนุญาต/อย.\", \"\");\n      findfda = findfda.replaceAll(\"-\", \"\");\n      findfda = findfda.replaceAll(\"–\", \"\");\n      findfda = findfda.replaceAll(\" \", \"\");\n      // console.log(findfda);\n      // var regex = /\\d+/g;\n      // var matches = findfda.match(regex);  // creates array from matches\n      // console.log(matches[0]);\n      return findfda;\n    },\n    checkfda(content, id) {\n      console.log(this.fda);\n      if (this.fda) {\n        var fda = this.fda;\n        var product_status = 0;\n        const url = \"https://tawaiforhealth.org/api/oryor/check-product\";\n        const data = { number_src: fda };\n        // console.log(data);\n        const options = {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json;charset=UTF-8\",\n          },\n          body: JSON.stringify(data),\n        };\n\n        fetch(url, options)\n          .then((response) => response.json())\n          .then((data) => {\n            if (data.message) {\n              this.product.push({\n                name: \"-\",\n                detail: content,\n                fda: this.fda,\n                cncnm: \"-\",\n                typepro: \"-\",\n                lcnno: \"-\",\n                productha: \"-\",\n                produceng: \"-\",\n                licen: \"-\",\n                Addr: \"-\",\n                Newcode: \"-\",\n                status: \"-\",\n                token: \"\",\n              });\n              this.procheck = {\n                fda: this.fda,\n                mapfda: \"-\",\n                cncnm: \"-\",\n                productha: \"-\",\n                produceng: \"-\",\n                name: \"-\",\n                product_status: 0,\n                cat_status: 0,\n                fda_status: 0,\n                name_status: 0,\n                typepro: \"-\",\n                type: \"-\",\n              };\n\n              // this.status = true\n            } else {\n              // console.log(data);\n              // console.log(data.cncnm.includes(\"คงอยู่\"))\n              if (data.cncnm.includes(\"คงอยู่\")) {\n                product_status = 1;\n                this.colorfda = \"background-color:#a3e9a4\";\n              } else {\n                product_status = 3;\n              }\n              // console.log(product_status);\n              var con = {\n                fda: fda,\n                productha: data.productha,\n                produceng: data.produceng,\n                typepro: data.typepro,\n                content: content,\n              };\n              axios\n                .post(LinkService.getpythonlink() + \"/checkfda\", con)\n                .then(async (res) => {\n                  // console.log(res.data);\n                  var pro = {\n                    name: res.data.name,\n                    fda: fda,\n                    product_status: product_status,\n                    cat_status: res.data.mapcatstatus,\n                    fda_status: product_status,\n                    name_status: res.data.mapnamestatus,\n                  };\n                  // console.log(pro);\n                  MapRuleBasedService.updatemap(id, pro).then(() => {\n                    // console.log(res.data);\n                    this.product.push({\n                      name: data.productha + \" \" + data.produceng,\n                      detail: content,\n                      fda: fda,\n                      cncnm: data.cncnm,\n                      typepro: data.typepro,\n                      lcnno: data.lcnno,\n                      productha: data.productha,\n                      produceng: data.produceng,\n                      licen: data.licen,\n                      Addr: data.Addr,\n                      Newcode: data.Newcode,\n                      status: product_status,\n                      token: res.data.token,\n                    });\n                    this.procheck = {\n                      fda: fda,\n                      mapfda: data.lcnno,\n                      cncnm: data.cncnm,\n                      productha: data.productha,\n                      produceng: data.produceng,\n                      name: res.data.name,\n                      product_status: product_status,\n                      cat_status: res.data.mapcatstatus,\n                      fda_status: product_status,\n                      name_status: res.data.mapnamestatus,\n                      typepro: data.typepro,\n                      type: res.data.category,\n                    };\n                    this.colorcat = res.data.colorcat;\n                    this.colorname = res.data.colorname;\n                    // console.log(this.product);\n                    // console.log(this.procheck);\n                    // console.log(this.fda);\n                  });\n                });\n\n              // this.status = true\n            }\n          });\n      } else {\n        this.product.push({\n          name: \"-\",\n          detail: content,\n          fda: this.fda,\n          cncnm: \"-\",\n          typepro: \"-\",\n          lcnno: \"-\",\n          productha: \"-\",\n          produceng: \"-\",\n          licen: \"-\",\n          Addr: \"-\",\n          Newcode: \"-\",\n          status: \"-\",\n          token: \"\",\n        });\n        this.procheck = {\n          fda: this.fda,\n          mapfda: \"-\",\n          cncnm: \"-\",\n          productha: \"-\",\n          produceng: \"-\",\n          name: \"-\",\n          product_status: 0,\n          cat_status: 0,\n          fda_status: 0,\n          name_status: 0,\n          typepro: \"-\",\n          type: \"-\",\n        };\n\n        // this.status = true\n      }\n    },\n  },\n  mounted() {\n//     var best = {\n//     \"id\": 67,\n//     \"sentence\": {\n//         \"length\": 2,\n//         \"allcount\": 100,\n//         \"rule\": [\n//             8899,\n//             57\n//         ],\n//         \"name\": [\n//             \"ควบคุม\",\n//             \"น้ำหนัก\"\n//         ],\n//         \"map_id\": 75\n//     }\n// }\n//                   MapRuleBasedService.getbestrulebased(best).then(\n//                      (res) => {\n//                       console.log(res.data);\n//                     });\n    // var text = 'หมายเลขใบอนุญาต/อย. 13-1-13465-5-0052 จำนวนสินค้า 415 ส่งจาก'\n    // console.log(this.findfda(text));\n    // this.data.url =\n    //   \"https://shopee.co.th/%E2%99%A6%EF%B8%8F%E0%B9%82%E0%B8%89%E0%B8%A1%E0%B9%83%E0%B8%AB%E0%B8%A1%E0%B9%88-%E0%B8%82%E0%B8%AD%E0%B8%87%E0%B9%81%E0%B8%97%E0%B9%89%E2%99%A6%EF%B8%8F-%E0%B8%82%E0%B8%B2%E0%B8%A2%E0%B8%94%E0%B8%B5%E0%B8%A1%E0%B8%B2%E0%B8%81-%E0%B8%81%E0%B8%B2%E0%B9%81%E0%B8%9F-%E0%B8%A5%E0%B8%B4%E0%B9%82%E0%B8%8B%E0%B9%88-%E0%B8%9E%E0%B8%A5%E0%B8%B1%E0%B8%AA-%E2%80%8B-coffee-lishou-%E0%B8%81%E0%B8%B2%E0%B9%81%E0%B8%9F%E0%B8%84%E0%B8%A7%E0%B8%9A%E0%B8%84%E0%B8%B8%E0%B8%A1%E0%B8%99%E0%B9%89%E0%B8%B3%E0%B8%AB%E0%B8%99%E0%B8%B1%E0%B8%81-%E0%B8%81%E0%B8%B2%E0%B9%81%E0%B8%9F%E0%B8%84%E0%B8%B8%E0%B8%A1%E0%B8%AB%E0%B8%B4%E0%B8%A7-%E0%B8%81%E0%B8%B2%E0%B9%81%E0%B8%9F%E0%B8%A5%E0%B8%94%E0%B8%99%E0%B9%89%E0%B8%B3%E0%B8%AB%E0%B8%99%E0%B8%B1%E0%B8%81-%E0%B8%81%E0%B8%B2%E0%B9%81%E0%B8%9F%E0%B8%A5%E0%B8%94%E0%B8%84%E0%B8%A7%E0%B8%B2%E0%B8%A1%E0%B8%AD%E0%B9%89%E0%B8%A7%E0%B8%99\";\n    // this.data.content =\n    //   \"️ถ้าเป็นลูกค้าพิมแล้ว ดูแลจนน้ำหนักลดเลยค่ะ สั่งซื้อสินค้าแล้ว ทักแชทมาคุยกันได้เลยค่ะ\";\n    // // var url = this.data.url.split('-i.')\n    // var content = this.data.content.replaceAll(\n    //   /([\\uE000-\\uF8FF]|\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDDFF])/g,\n    //   \"\"\n    // );\n    // content = content.replaceAll(\n    //   /(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|\\ud83c[\\ude32-\\ude3a]|\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])/g,\n    //   \"\"\n    // );\n    // content = content.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"\");\n    // content = content.replaceAll(\"_\", \"\");\n    // content = content.replaceAll(\"!\", \"\");\n    // content = content.replaceAll(\"*\", \"\");\n    // content = content.replaceAll(\"&\", \"\");\n    // content = content.replaceAll(\"#\", \"\");\n    // content = content.replaceAll(`_/l\\_`, \"\"); // eslint-disable-line\n    // // console.log(LinkService.getpythonlink()+'/wordtokendesc?text=' + content);\n    // // axios.get(LinkService.getpythonlink()+'/wordtokendesc?text='+content).then(async (res) => {\n    // //   console.log(res.data);\n    // // })\n    // console.log(LinkService.getpythonlink() + \"/checkkeyword?text=\" + content);\n    // var con = {\n    //   content: content,\n    // };\n    // axios\n    //   .post(LinkService.getpythonlink() + \"/checkkeyword?text=\" + content, con)\n    //   .then(async (res) => {\n    //     console.log(res.data);\n    //     //       for (let r = 0; r < res.data.length; r++) {\n    //     //         var advertise = {\n    //     //           product_token_id:1,\n    //     //           keyword_dict_id:res.data[r].keyword_dict_id,\n    //     //           dict_id:res.data[r].dict_id,\n    //     //           dict_name:res.data[r].dict_name,\n    //     //           sen:res.data[r].sen,\n    //     //           sentent:res.data[r].sentent,\n    //     //         }\n    //     //         AdvertiseService.createadvertise(advertise).then((res)=>{\n    //     //           console.log(res.data);\n    //     //         })\n    //     //       }\n    //   });\n    // //  console.log(url);\n    // //     var selectpro = {\n    // //       url:url[0]\n    // //      }\n    // //      MapRuleBasedService.getproduct_token(selectpro).then((res)=>{\n    // //       console.log(res.data);\n    // // var list = res.data\n    // // this.tokendata(list)\n    // // for (let l = 0; l < list.keyword.length; l++) {\n    // //   // console.log(this.list.keyword[l].map);\n    // //   // for (let m = 0; m < this.list.keyword[l].length; m++) {\n    // //     if (list.keyword[l].map) {\n    // //       var map = {\n    // //     url:JSON.stringify(list.keyword[l].map)\n    // //      }\n    // //     //  console.log(map);\n    // //      MapRuleBasedService.getmapproduct(map).then((res)=>{\n    // //       list.keyword[l].rulebase = res.data\n    // //       if (l+1 == list.keyword.length) {\n    // //         this.compare(list)\n    // //       }\n    // //      });\n    // //     }\n    // //   }\n    // // }\n    // // console.log(this.list);\n    // this.status = true;\n    // //  })\n  },\n};\n</script>\n\n<style>\nhtml,\nbody {\n  height: 100%;\n  margin: 0px;\n}\n</style>\n"]}]}