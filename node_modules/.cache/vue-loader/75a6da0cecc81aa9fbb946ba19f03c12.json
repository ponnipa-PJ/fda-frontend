{"remainingRequest":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/ReportTax.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/ReportTax.vue","mtime":1678265048654},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/babel-loader/lib/index.js","mtime":1687492401655},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1687492401267},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js","mtime":1687492401738}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBNZXJnZUxpcXVvclJlcG9ydFNlcnZpY2UgZnJvbSAiLi4vc2VydmljZXMvTWVyZ2VMaXF1b3JSZXBvcnRTZXJ2aWNlLmpzIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiSGVsbG9Xb3JsZCIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHN1bW51bWJlcjogMCwKICAgICAgc3Vtdm9sdW1lOiAwLAogICAgICBzdW10YXg6IDAsCiAgICAgIGxpc3Q6IFtdLAogICAgICBpdGVtUHJldmlld0ltYWdlOiAiIiwKICAgICAgaWQ6ICIiLAogICAgICBpdGVtOiBbXSwKICAgICAgaW1nOiAiIiwKICAgICAgaW1hZ2U6ICIiLAogICAgICBuZXRfdGF4OiBbXSwKICAgICAgc3RhcnRkYXRlOiAiIiwKICAgICAgZW5kZGF0ZTogIiIsCiAgICAgIGZhY3RvcnlfY29kZTogIiIsCiAgICAgIG1vbnRoY3VycmVudDogIiIsCiAgICAgIHllYXJjdXJyZW50OiAiIiwKICAgICAgc3VtcGVyZWFjaDogMCwKICAgICAgc3VtbmV0dGF4OiAwLAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7fSwKICBtb3VudGVkKCkgewogICAgY29uc3QgZCA9IG5ldyBEYXRlKCk7CiAgICB0aGlzLm1vbnRoY3VycmVudCA9IHBhcnNlSW50KGQuZ2V0TW9udGgoKSk7CiAgICB0aGlzLnllYXJjdXJyZW50ID0gcGFyc2VJbnQoZC5nZXRGdWxsWWVhcigpICsgNTQzKTsKICAgIHBpY2tlcl9kYXRlKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzdGFydF9kYXRlIiksIHsgeWVhcl9yYW5nZTogIi0xMjorMTAiIH0pOwogICAgcGlja2VyX2RhdGUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImVuZF9kYXRlIiksIHsgeWVhcl9yYW5nZTogIi0xMjorMTAiIH0pOwogICAgLy8gY29uc29sZS5sb2codGhpcy4kcm91dGUucGFyYW1zLmlkKTsKICAgIHRoaXMuZmFjdG9yeV9jb2RlID0gdGhpcy4kcm91dGUucGFyYW1zLmlkOwogICAgdGhpcy5sb2FkZGF0YSgpOwogICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTsKICAgIGNvbnN0IGxhc3REYXkgPSBuZXcgRGF0ZShub3cuZ2V0RnVsbFllYXIoKSwgbm93LmdldE1vbnRoKCkgKyAxLCAwKTsKCiAgICB0aGlzLnN0YXJ0ZGF0ZSA9IHRoaXMueWVhcmN1cnJlbnQtMSArICItMTAtMDEiOwogICAgaWYgKCh0aGlzLm1vbnRoY3VycmVudCArIDEpLnRvU3RyaW5nKCkubGVuZ3RoID09IDEpIHsKICAgICAgdGhpcy5lbmRkYXRlID0KICAgICAgICB0aGlzLnllYXJjdXJyZW50ICsKICAgICAgICAiLTAiICsKICAgICAgICBwYXJzZUludCh0aGlzLm1vbnRoY3VycmVudCArIDEpICsKICAgICAgICAiLSIgKwogICAgICAgIGxhc3REYXkuZ2V0RGF0ZSgpOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy5lbmRkYXRlID0KICAgICAgICB0aGlzLnllYXJjdXJyZW50ICsKICAgICAgICAiLSIgKwogICAgICAgIHBhcnNlSW50KHRoaXMubW9udGhjdXJyZW50ICsgMSkgKwogICAgICAgICItIiArCiAgICAgICAgbGFzdERheS5nZXREYXRlKCk7CiAgICB9CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzdGFydF9kYXRlIikudmFsdWUgPSB0aGlzLmdldGRhdGUodGhpcy5zdGFydGRhdGUpCiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJlbmRfZGF0ZSIpLnZhbHVlID0gdGhpcy5nZXRkYXRlKHRoaXMuZW5kZGF0ZSkKCiAgfSwKICBtZXRob2RzOiB7CiAgICAgZ2V0ZGF0ZSh2YWx1ZSkgeyAgICAgIAogICAgdmFyIGRhdGUgPSBuZXcgRGF0ZSh2YWx1ZSk7CiAgICAvLyBjb25zb2xlLmxvZyhkYXRlKTsKICAgIHZhciBkYXkgPSBkYXRlLmdldERhdGUoKTsKICAgIHZhciBtb250aCA9IGRhdGUuZ2V0TW9udGgoKSArIDE7CiAgICB2YXIgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKTsKICAgIC8vIGNvbnNvbGUubG9nKGRheSxtb250aCx5ZWFyKTsKICAgIGlmIChkYXkudG9TdHJpbmcoKS5sZW5ndGggPT0gMSkgewogICAgICBkYXkgPSAiMCIgKyBkYXk7CiAgICB9CiAgICBpZiAobW9udGgudG9TdHJpbmcoKS5sZW5ndGggPT0gMSkgewogICAgICBtb250aCA9ICIwIiArIG1vbnRoOwogICAgfQogICAgcmV0dXJuICBkYXkrICIvIittb250aCArICIvIiArIHllYXI7CiAgfSwKICAgIGNoYW5nZXllYXJlbmQoKSB7CiAgICAgIHZhciBtID0gdGhpcy5lbmRkYXRlLnN1YnN0cmluZygwLCAyKTsKICAgICAgaWYgKG0gPT0gMjApIHsKICAgICAgICB2YXIgZW5kID0gbmV3IERhdGUodGhpcy5lbmRkYXRlKTsKICAgICAgICB2YXIgeWVhciA9IHRoaXMuZW5kZGF0ZS5zdWJzdHJpbmcoMCwgNCk7CiAgICAgICAgdmFyIGRheSA9IGVuZC5nZXREYXRlKCk7CiAgICAgICAgdmFyIG1vbnRoID0gZW5kLmdldE1vbnRoKCkgKyAxOwogICAgICAgIGlmIChkYXkudG9TdHJpbmcoKS5sZW5ndGggPT0gMSkgewogICAgICAgICAgZGF5ID0gIjAiICsgZGF5OwogICAgICAgIH0KICAgICAgICBpZiAobW9udGgudG9TdHJpbmcoKS5sZW5ndGggPT0gMSkgewogICAgICAgICAgbW9udGggPSAiMCIgKyBtb250aDsKICAgICAgICB9CiAgICAgICAgdmFyIGMgPSBwYXJzZUludCh5ZWFyKSArIDU0MyArICItIiArIG1vbnRoICsgIi0iICsgZGF5OwogICAgICAgIC8vIGNvbnNvbGUubG9nKGMpOwogICAgICAgIHRoaXMuZW5kZGF0ZSA9IGM7CiAgICAgIH0KICAgIH0sCiAgICBjaGFuZ2V5ZWFyc3RhcnQoKSB7CiAgICAgIHZhciBtID0gdGhpcy5zdGFydGRhdGUuc3Vic3RyaW5nKDAsIDIpOwogICAgICBpZiAobSA9PSAyMCkgewogICAgICAgIHZhciBzdGFydCA9IG5ldyBEYXRlKHRoaXMuc3RhcnRkYXRlKTsKICAgICAgICB2YXIgeWVhcnMgPSB0aGlzLnN0YXJ0ZGF0ZS5zdWJzdHJpbmcoMCwgNCk7CiAgICAgICAgdmFyIGRheXMgPSBzdGFydC5nZXREYXRlKCk7CiAgICAgICAgdmFyIG1vbnRocyA9IHN0YXJ0LmdldE1vbnRoKCkgKyAxOwogICAgICAgIGlmIChkYXlzLnRvU3RyaW5nKCkubGVuZ3RoID09IDEpIHsKICAgICAgICAgIGRheXMgPSAiMCIgKyBkYXlzOwogICAgICAgIH0KICAgICAgICBpZiAobW9udGhzLnRvU3RyaW5nKCkubGVuZ3RoID09IDEpIHsKICAgICAgICAgIG1vbnRocyA9ICIwIiArIG1vbnRoczsKICAgICAgICB9CiAgICAgICAgdmFyIGN1ID0gcGFyc2VJbnQoeWVhcnMpICsgNTQzICsgIi0iICsgbW9udGhzICsgIi0iICsgZGF5czsKICAgICAgICB0aGlzLnN0YXJ0ZGF0ZSA9IGN1OwogICAgICB9CiAgICB9LAogICAgY3JlYXRlZGRhdGUodmFsdWUpIHsgICAKICB2YXIgc3RyZWV0YWRkcmVzcyA9IFN0cmluZyh2YWx1ZSk7CiAgICB2YXIgZCA9IHN0cmVldGFkZHJlc3Muc3Vic3RyaW5nKDAsIHN0cmVldGFkZHJlc3MuaW5kZXhPZigiLyIpKTsKICAgIHZhciBtID0gc3RyZWV0YWRkcmVzcy5zdWJzdHJpbmcoNSwgc3RyZWV0YWRkcmVzcy5pbmRleE9mKCIvIikpOwogICAgbSA9IG0uc3Vic3RyaW5nKDEsIDMpOwogICAgdmFyIHkgPSBzdHJlZXRhZGRyZXNzLnN1YnN0cmluZyg1KTsKICAgIHZhciBmdWxsID0gbSArICIvIiArIGQgKyB5OwogICAgLy8gY29uc29sZS5sb2coZnVsbCk7CiAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKGZ1bGwpOwogICAgLy8gY29uc29sZS5sb2coZGF0ZSk7CiAgICB2YXIgZGF5ID0gZGF0ZS5nZXREYXRlKCk7CiAgICB2YXIgbW9udGggPSBkYXRlLmdldE1vbnRoKCkrMTsKICAgIHZhciB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpOwogICAgaWYgKGRheS50b1N0cmluZygpLmxlbmd0aCA9PSAxKSB7CiAgICAgIGRheSA9ICIwIiArIGRheTsKICAgIH0KICAgIGlmIChtb250aC50b1N0cmluZygpLmxlbmd0aCA9PSAxKSB7CiAgICAgIG1vbnRoID0gIjAiICsgbW9udGg7CiAgICB9CiAgICByZXR1cm4gIHllYXIgKyAiLSIgKyBtb250aCArICItIiArIGRheTsKICB9LAogICAgc2VhcmNoKCkgewogICAgICB0aGlzLnN0YXJ0ZGF0ZSA9IHRoaXMuY3JlYXRlZGRhdGUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInN0YXJ0X2RhdGUiKS52YWx1ZSk7CiAgICAgIHRoaXMuZW5kZGF0ZSA9IHRoaXMuY3JlYXRlZGRhdGUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImVuZF9kYXRlIikudmFsdWUpOwogICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLmVuZGRhdGUpOwogICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLnN0YXJ0ZGF0ZSk7CiAgICAgIC8vIHZhciBzdGFydGRhdGUgPSB0aGlzLmNvbnZlcnRkYXRlc29ydCh0aGlzLnN0YXJ0ZGF0ZSk7CiAgICAgIC8vIHZhciBlbmRkYXRlID0gdGhpcy5jb252ZXJ0ZGF0ZXNvcnQodGhpcy5lbmRkYXRlKTsKICAgICAgTWVyZ2VMaXF1b3JSZXBvcnRTZXJ2aWNlLmdldE1lcmdlTGlxdW9yUmVwb3J0QnlDb2RlKAogICAgICAgIHRoaXMuZmFjdG9yeV9jb2RlLAogICAgICAgIHRoaXMuc3RhcnRkYXRlLAogICAgICAgIHRoaXMuZW5kZGF0ZQogICAgICApLnRoZW4oKHJlcykgPT4gewogICAgICAgIHRoaXMubGlzdCA9IFtdOwogICAgICAgIC8vIGNvbnNvbGUubG9nKHJlcy5kYXRhKTsKICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJlcy5kYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAvLyBpZiAocmVzLmRhdGFbaV0uZmFjdG9yeV9jb2RlID09IHJlcy5kYXRhW2kgLSAxXS5mYWN0b3J5X2NvZGUpIHsKICAgICAgICAgIC8vIHN1bV9uZXRfdGF4ID0gcmVzLmRhdGFbaV0ubmV0ICsgcmVzLmRhdGFbaSAtIDFdLm5ldDsKICAgICAgICAgIC8vIH0KICAgICAgICAgIHRoaXMubGlzdC5wdXNoKHsKICAgICAgICAgICAgdGF4X3BheW1lbnRfZGF0ZTogdGhpcy5jb252ZXJ0ZGF0ZXRvdGhhaSgKICAgICAgICAgICAgICByZXMuZGF0YVtpXS50YXhfcGF5bWVudF9kYXRlCiAgICAgICAgICAgICksCiAgICAgICAgICAgIG5vOiByZXMuZGF0YVtpXS5ubywKICAgICAgICAgICAgZmFjdG9yeV9jb2RlOiByZXMuZGF0YVtpXS5mYWN0b3J5X2NvZGUsCiAgICAgICAgICAgIGJyYW5kX25hbWU6IHJlcy5kYXRhW2ldLmJyYW5kX25hbWUgKyAnLScrcmVzLmRhdGFbaV0uZGVncmVlKyAnLScrcmVzLmRhdGFbaV0uc2l6ZSwKICAgICAgICAgICAgbnVtYmVyOiByZXMuZGF0YVtpXS5udW1iZXIsCiAgICAgICAgICAgIGRlZ3JlZTogcmVzLmRhdGFbaV0uZGVncmVlLAogICAgICAgICAgICBzaXplOiByZXMuZGF0YVtpXS5zaXplLAogICAgICAgICAgICBwZXJfZWFjaDogcmVzLmRhdGFbaV0ucGVyX2VhY2gsCiAgICAgICAgICAgIHZvbHVtZV9saXF1b3I6IHJlcy5kYXRhW2ldLnZvbHVtZV9saXF1b3IsCiAgICAgICAgICAgIG5ldDogdGhpcy5jYWwoCiAgICAgICAgICAgICAgcmVzLmRhdGFbaV0uZmFjdG9yeV9jb2RlLAogICAgICAgICAgICAgIHJlcy5kYXRhW2ldLm51bWJlciwKICAgICAgICAgICAgICByZXMuZGF0YVtpXS5wZXJfZWFjaCwKICAgICAgICAgICAgICByZXMuZGF0YVtpXS5kZWdyZWUsCiAgICAgICAgICAgICAgcmVzLmRhdGFbaV0uc2l6ZQogICAgICAgICAgICApLAogICAgICAgICAgICBuZXRfdGF4OiByZXMuZGF0YVtpXS5uZXRfdGF4LAogICAgICAgICAgICBjb2xvdXI6ICJ0YWJsZS1zdWNjZXNzIiwKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgICB0aGlzLmNhbF9uZXRfdGF4KCk7CiAgICAgIH0pOwogICAgfSwKICAgIGNvbnZlcnRkYXRlc29ydChkYXRlKSB7CiAgICAgIHZhciBzdHJlZXRhZGRyZXNzID0gU3RyaW5nKGRhdGUpOwogICAgICAvLyBjb25zb2xlLmxvZyhzdHJlZXRhZGRyZXNzKTsKICAgICAgdmFyIHkgPSBzdHJlZXRhZGRyZXNzLnN1YnN0cmluZygwLCBzdHJlZXRhZGRyZXNzLmluZGV4T2YoIi0iKSk7CiAgICAgIHZhciBtID0gc3RyZWV0YWRkcmVzcy5zdWJzdHJpbmcoNywgc3RyZWV0YWRkcmVzcy5pbmRleE9mKCItIikpOwogICAgICBtID0gbS5zdWJzdHJpbmcoMSwgMyk7CiAgICAgIHZhciBkID0gc3RyZWV0YWRkcmVzcy5zdWJzdHJpbmcoOCwgMTApOwogICAgICB5ID0gcGFyc2VJbnQoeSkgKyA1NDM7CiAgICAgIHZhciBmdWxsID0geSArICItIiArIG0gKyAiLSIgKyBkOwogICAgICAvLyBjb25zb2xlLmxvZyhkKQogICAgICAvLyBjb25zb2xlLmxvZyhtKQogICAgICAvLyBjb25zb2xlLmxvZyh5KTsKICAgICAgLy8gY29uc29sZS5sb2coZnVsbCk7CiAgICAgIC8vIHZhciB0aW1lc3RhbXAgPSBEYXRlLnBhcnNlKGZ1bGwpOwogICAgICAvLyB2YXIgZGF0ZU9iamVjdCA9IG5ldyBEYXRlKHRpbWVzdGFtcCk7CiAgICAgIC8vIGRhdGVPYmplY3Quc2V0RGF0ZShkYXRlT2JqZWN0LmdldERhdGUoKSArIDEpOwogICAgICAvLyBjb25zb2xlLmxvZyhkYXRlT2JqZWN0KTsKICAgICAgLy8gY29uc3QgcmVzdWx0ID0gZGF0ZU9iamVjdC50b0xvY2FsZURhdGVTdHJpbmcoImVuLUVOIik7CiAgICAgIC8vIGNvbnNvbGUubG9nKHJlc3VsdCk7CiAgICAgIHJldHVybiBmdWxsOwogICAgfSwKICAgIGxvYWRkYXRhKCkgewogICAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpOwogICAgICBjb25zdCBsYXN0RGF5ID0gbmV3IERhdGUobm93LmdldEZ1bGxZZWFyKCksIG5vdy5nZXRNb250aCgpICsgMSwgMCk7CiAgICAgIE1lcmdlTGlxdW9yUmVwb3J0U2VydmljZS5nZXRNZXJnZUxpcXVvclJlcG9ydEJ5Q29kZSgKICAgICAgICB0aGlzLmZhY3RvcnlfY29kZSwKICAgICAgICBTdHJpbmcodGhpcy55ZWFyY3VycmVudC0xICsgIi0xMC0wMSIpLAogICAgICAgIFN0cmluZygKICAgICAgICAgIHRoaXMueWVhcmN1cnJlbnQgKwogICAgICAgICAgICAiLSIgKwogICAgICAgICAgICBwYXJzZUludCh0aGlzLm1vbnRoY3VycmVudCArIDEpICsKICAgICAgICAgICAgIi0iICsKICAgICAgICAgICAgbGFzdERheS5nZXREYXRlKCkKICAgICAgICApCiAgICAgICkKICAgICAgICAudGhlbigocmVzKSA9PiB7CiAgICAgICAgICAvLyBjb25zb2xlLmxvZyhyZXMuZGF0YSk7CiAgICAgICAgICAvLyB0aGlzLmxpc3QgPSByZXMuZGF0YTsKICAgICAgICAgIC8vIHZhciBzdW1fbmV0X3RheCA9IDA7CiAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJlcy5kYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIC8vIGlmIChyZXMuZGF0YVtpXS5mYWN0b3J5X2NvZGUgPT0gcmVzLmRhdGFbaSAtIDFdLmZhY3RvcnlfY29kZSkgewogICAgICAgICAgICAvLyBzdW1fbmV0X3RheCA9IHJlcy5kYXRhW2ldLm5ldCArIHJlcy5kYXRhW2kgLSAxXS5uZXQ7CiAgICAgICAgICAgIC8vIH0KICAgICAgICAgICAgdGhpcy5saXN0LnB1c2goewogICAgICAgICAgICAgIHRheF9wYXltZW50X2RhdGU6IHRoaXMuY29udmVydGRhdGV0b3RoYWkoCiAgICAgICAgICAgICAgICByZXMuZGF0YVtpXS50YXhfcGF5bWVudF9kYXRlCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBubzogcmVzLmRhdGFbaV0ubm8sCiAgICAgICAgICAgICAgZmFjdG9yeV9jb2RlOiByZXMuZGF0YVtpXS5mYWN0b3J5X2NvZGUsCiAgICAgICAgICAgICAgYnJhbmRfbmFtZTogcmVzLmRhdGFbaV0uYnJhbmRfbmFtZSArICctJytyZXMuZGF0YVtpXS5kZWdyZWUrICctJytyZXMuZGF0YVtpXS5zaXplLAogICAgICAgICAgICAgIG51bWJlcjogcmVzLmRhdGFbaV0ubnVtYmVyLAogICAgICAgICAgICAgIGRlZ3JlZTogcmVzLmRhdGFbaV0uZGVncmVlLAogICAgICAgICAgICAgIHNpemU6IHJlcy5kYXRhW2ldLnNpemUsCiAgICAgICAgICAgICAgcGVyX2VhY2g6IHJlcy5kYXRhW2ldLnBlcl9lYWNoLAogICAgICAgICAgICAgIHZvbHVtZV9saXF1b3I6IHJlcy5kYXRhW2ldLnZvbHVtZV9saXF1b3IsCiAgICAgICAgICAgICAgbmV0OiB0aGlzLmNhbCgKICAgICAgICAgICAgICAgIHJlcy5kYXRhW2ldLmZhY3RvcnlfY29kZSwKICAgICAgICAgICAgICAgIHJlcy5kYXRhW2ldLm51bWJlciwKICAgICAgICAgICAgICAgIHJlcy5kYXRhW2ldLnBlcl9lYWNoLAogICAgICAgICAgICAgICAgcmVzLmRhdGFbaV0uZGVncmVlLAogICAgICAgICAgICAgICAgcmVzLmRhdGFbaV0uc2l6ZQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgbmV0X3RheDogcmVzLmRhdGFbaV0ubmV0X3RheCwKICAgICAgICAgICAgICBjb2xvdXI6ICJ0YWJsZS1zdWNjZXNzIiwKICAgICAgICAgICAgICB0eXBlOiByZXMuZGF0YVtpXS50eXBlLAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICAgIHRoaXMuY2FsX25ldF90YXgoKTsKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoZSkgPT4gewogICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgfSk7CiAgICB9LAogICAgY2FsX25ldF90YXgoKSB7CiAgICAgIC8vIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5saXN0Lmxlbmd0aDsgaSsrKSB7CiAgICAgIC8vICAgaWYgKGkgIT0gMCkgewogICAgICAvLyAgICAgaWYgKAogICAgICAvLyAgICAgICB0aGlzLmxpc3RbaV0udGF4X3BheW1lbnRfZGF0ZSA9PSB0aGlzLmxpc3RbaSAtIDFdLnRheF9wYXltZW50X2RhdGUKICAgICAgLy8gICAgICkgewogICAgICAvLyAgICAgICAvLyBjb25zb2xlLmxvZygiaSIsIHRoaXMubGlzdFtpXS5uZXQpOwogICAgICAvLyAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLmxpc3RbaSAtMV0ubmV0KTsKICAgICAgLy8gICAgICAgdGhpcy5saXN0W2kgLSAxXS5uZXRfdGF4ID0gTWF0aC5mbG9vcigKICAgICAgLy8gICAgICAgICBwYXJzZUZsb2F0KHRoaXMubGlzdFtpXS5uZXQpICsgcGFyc2VGbG9hdCh0aGlzLmxpc3RbaSAtIDFdLm5ldCkKICAgICAgLy8gICAgICAgKS50b0ZpeGVkKDIpOwogICAgICAvLyAgICAgfSBlbHNlIHsKICAgICAgLy8gICAgICAgdGhpcy5saXN0W2ldLm5ldF90YXggPSBNYXRoLmZsb29yKAogICAgICAvLyAgICAgICAgIHBhcnNlRmxvYXQodGhpcy5saXN0W2ldLm5ldCkKICAgICAgLy8gICAgICAgKS50b0ZpeGVkKDIpOwogICAgICAvLyAgICAgfQogICAgICAvLyAgIH0gZWxzZSB7CiAgICAgIC8vICAgICB0aGlzLmxpc3RbaV0ubmV0X3RheCA9IE1hdGguZmxvb3IoCiAgICAgIC8vICAgICAgIHBhcnNlRmxvYXQodGhpcy5saXN0W2ldLm5ldCkKICAgICAgLy8gICAgICkudG9GaXhlZCgyKTsKICAgICAgLy8gICB9CiAgICAgIC8vIH0KCiAgICAgIHRoaXMudG90YWwoKTsKICAgIH0sCiAgICBjYWwoZmFjdG9yeV9jb2RlLCBudW1iZXIsIHBlcl9lYWNoLCBkZWdyZWUsIHNpemUpIHsKICAgICAgdmFyIHgxID0gMDsKICAgICAgdmFyIHgyID0gMDsKICAgICAgdmFyIHgzID0gMDsKICAgICAgdmFyIHg0ID0gMDsKICAgICAgaWYgKGZhY3RvcnlfY29kZSA9PSA1NDAwMDIpIHsKICAgICAgICB4MSA9ICgoMTAgKiBudW1iZXIpIC8gMTAwKSAqIHBlcl9lYWNoOwogICAgICAgIC8vIGNvbnNvbGUubG9nKHgxKTsKICAgICAgICAvLyB2YXIgeDIgPSAoKDE1NSozMCkvMTAwKSowLjYzKjE1MDA7CiAgICAgICAgeDIgPSAoKDE1MCAqIGRlZ3JlZSkgLyAxMDApICogc2l6ZSAqIG51bWJlcjsKICAgICAgICAvLyBjb25zb2xlLmxvZyh4Mik7CiAgICAgICAgcmV0dXJuICh4MSArIHgyKS50b0ZpeGVkKDIpOwogICAgICB9IGVsc2UgewogICAgICAgIHgzID0gKCgyICogbnVtYmVyKSAvIDEwMCkgKiBwZXJfZWFjaDsKICAgICAgICAvLyBjb25zb2xlLmxvZyh4MSk7CiAgICAgICAgLy8gdmFyIHgyID0gKCgxNTUqMzApLzEwMCkqMC42MyoxNTAwOwogICAgICAgIHg0ID0gKCgxNTUgKiBkZWdyZWUpIC8gMTAwKSAqIHNpemUgKiBudW1iZXI7CiAgICAgICAgLy8gY29uc29sZS5sb2coeDIpOwogICAgICAgIHJldHVybiAoeDMgKyB4NCkudG9GaXhlZCgyKTsKICAgICAgfQogICAgfSwKICAgIGNvbnZlcnRkYXRldG90aGFpKGRhdGV0aW1lcykgewogICAgICBpZiAoZGF0ZXRpbWVzKSB7CiAgICAgICAgdmFyIGQgPSBuZXcgRGF0ZShkYXRldGltZXMpOwogICAgICAgIHZhciBtbSA9IGQuZ2V0TW9udGgoKSArIDE7CiAgICAgICAgdmFyIGRkID0gZC5nZXREYXRlKCk7CiAgICAgICAgdmFyIHl5ID0gZC5nZXRGdWxsWWVhcigpOwoKICAgICAgICB2YXIgbXlEYXRlU3RyaW5nID0gZGQgKyAiLyIgKyBtbSArICIvIiArIHl5OyAvLyhVUykKICAgICAgICAvLyBjb25zb2xlLmxvZyhteURhdGVTdHJpbmcpOwogICAgICAgIHJldHVybiBteURhdGVTdHJpbmc7CiAgICAgIH0KICAgIH0sCiAgICBudW1iZXJXaXRoQ29tbWFzKHgpIHsKICAgICAgdmFyIHIgPSAwOwogICAgICB4ID0gcGFyc2VJbnQoeCk7CiAgICAgIGlmIChpc05hTih4KSkgewogICAgICAgIHIgPSAiIjsKICAgICAgfSBlbHNlIHsKICAgICAgICByID0geC50b1N0cmluZygpLnJlcGxhY2UoL1xCKD89KFxkezN9KSsoPyFcZCkpL2csICIsIik7CiAgICAgIH0KICAgICAgcmV0dXJuIHI7CiAgICB9LAogICAgZ3JvdXBCeShhcnJheSwga2V5KSB7CiAgICAgIGNvbnN0IHJlc3VsdCA9IHt9OwogICAgICBhcnJheS5mb3JFYWNoKChpdGVtKSA9PiB7CiAgICAgICAgaWYgKCFyZXN1bHRbaXRlbVtrZXldXSkgewogICAgICAgICAgcmVzdWx0W2l0ZW1ba2V5XV0gPSBbXTsKICAgICAgICB9CiAgICAgICAgcmVzdWx0W2l0ZW1ba2V5XV0ucHVzaChpdGVtKTsKICAgICAgfSk7CiAgICAgIHJldHVybiByZXN1bHQ7CiAgICB9LAogICAgdG90YWwoKSB7CiAgICAgIAogICAgICB0aGlzLnN1bW51bWJlciA9IDAKdGhpcy5zdW12b2x1bWUgPSAwCnRoaXMuc3VtcGVyZWFjaCA9IDAKdGhpcy5zdW10YXggPSAwCnRoaXMuc3VtbmV0dGF4ID0gMAogICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLmxpc3QpOwogICAgICBmb3IgKGxldCBsID0gMDsgbCA8IHRoaXMubGlzdC5sZW5ndGg7IGwrKykgewogICAgICAgIHRoaXMuc3VtbnVtYmVyID0gdGhpcy5zdW1udW1iZXIgKyB0aGlzLmxpc3RbbF0ubnVtYmVyOwogICAgICAgIHRoaXMuc3Vtdm9sdW1lID0gdGhpcy5zdW12b2x1bWUgKyB0aGlzLmxpc3RbbF0udm9sdW1lX2xpcXVvcjsKICAgICAgICB0aGlzLnN1bXBlcmVhY2ggPSB0aGlzLnN1bXZvbHVtZSArIHRoaXMubGlzdFtsXS5wZXJfZWFjaDsKICAgICAgICB0aGlzLnN1bXRheCA9IHRoaXMuc3VtdGF4ICsgcGFyc2VJbnQodGhpcy5saXN0W2xdLm5ldCk7CiAgICAgICAgaWYgKHRoaXMubGlzdFtsXS5uZXRfdGF4KSB7CiAgICAgICAgICB0aGlzLnN1bW5ldHRheCA9IHRoaXMuc3VtbmV0dGF4ICsgcGFyc2VGbG9hdCh0aGlzLmxpc3RbbF0ubmV0X3RheCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["ReportTax.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+OA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ReportTax.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"hello mt-5\">\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <label for=\"exampleInputEmail1\" class=\"form-label\">วันเริ่มต้น</label>\n        <input id=\"start_date\" class=\"form-control\" />\n        <!-- <input\n          @change=\"changeyearstart\"\n          v-model=\"startdate\"\n          type=\"date\"\n          class=\"form-control\"\n          id=\"exampleInputEmail1\"\n          aria-describedby=\"emailHelp\"\n        /> -->\n      </div>\n      <div class=\"col-6\">\n        <label for=\"exampleInputEmail1\" class=\"form-label\">วันสิ้นสุด</label>\n        <input id=\"end_date\" class=\"form-control\" />\n        <!-- <input\n          @change=\"changeyearend\"\n          v-model=\"enddate\"\n          type=\"date\"\n          class=\"form-control\"\n          id=\"exampleInputEmail1\"\n          aria-describedby=\"emailHelp\"\n        /> -->\n      </div>\n      <div class=\"col-12 mb-3\" align=\"center\">\n        <button\n          @click=\"search()\"\n          type=\"submit\"\n          class=\"btn btn-success\"\n          style=\"margin-top: 10px; text-align: right\"\n        >\n          ค้นหา\n        </button>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <table class=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th\n                scope=\"col\"\n                style=\"\n                  font-weight: bold;\n                  text-align: center;\n                  background-color: #deebf7;\n                \"\n              >\n                วันที่\n              </th>\n              <th\n                scope=\"col\"\n                style=\"\n                  font-weight: bold;\n                  text-align: center;\n                  background-color: #deebf7;\n                \"\n              >\n                รายการสินค้า\n              </th>\n              <th\n                scope=\"col\"\n                style=\"\n                  font-weight: bold;\n                  text-align: center;\n                  background-color: #deebf7;\n                \"\n              >\n                ดีกรี\n              </th>\n              <th\n                scope=\"col\"\n                style=\"\n                  font-weight: bold;\n                  text-align: center;\n                  background-color: #deebf7;\n                \"\n              >\n                ขนาดบรรจุ (ลิตร)\n              </th>\n              <th\n                scope=\"col\"\n                style=\"\n                  font-weight: bold;\n                  text-align: center;\n                  background-color: #deebf7;\n                \"\n              >\n                จำนวน (ดวง)\n              </th>\n              <th\n                scope=\"col\"\n                style=\"\n                  font-weight: bold;\n                  text-align: center;\n                  background-color: #deebf7;\n                \"\n              >\n                ปริมาณน้ำสุรา (ลิตร)\n              </th>\n              <th\n                scope=\"col\"\n                style=\"\n                  font-weight: bold;\n                  text-align: center;\n                  background-color: #deebf7;\n                \"\n              >\n                ราคาขายปลีกแนะนำ\n              </th>\n              <th\n                scope=\"col\"\n                style=\"\n                  font-weight: bold;\n                  text-align: center;\n                  background-color: #deebf7;\n                \"\n              >\n                ภาษีสุรา (บาท)\n              </th>\n              <th\n                scope=\"col\"\n                style=\"\n                  font-weight: bold;\n                  text-align: center;\n                  background-color: #deebf7;\n                \"\n              >\n                ภาษีสุทธิ (บาท)\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(l, i) in list\" :key=\"i\">\n              <td style=\"text-align: center; background-color: #eaeef7\">\n                {{ l.tax_payment_date }}\n              </td>\n              <td style=\"text-align: center; background-color: #eaeef7\">\n                {{ l.brand_name }}\n              </td>\n              <td style=\"text-align: right; background-color: #eaeef7\">\n                {{ l.degree }}\n              </td>\n              <td style=\"text-align: right; background-color: #eaeef7\">\n                {{ l.size }}\n              </td>\n              <td style=\"text-align: right; background-color: #eaeef7\">\n                {{ l.number }}\n              </td>\n              <td style=\"text-align: right; background-color: #eaeef7\">\n                {{ l.volume_liquor }}\n              </td>\n              <td style=\"text-align: right; background-color: #eaeef7\">\n                {{ l.per_each }}\n              </td>\n              <td style=\"text-align: right; background-color: #eaeef7\">\n                {{ numberWithCommas(l.net) + \".00\" }}\n              </td>\n              <td\n                v-if=\"l.net_tax\"\n                style=\"text-align: right; background-color: #eaeef7\"\n              >\n                {{ numberWithCommas(l.net_tax) + \".00\" }}\n              </td>\n              <td\n                v-if=\"!l.net_tax\"\n                style=\"text-align: right; background-color: #eaeef7\"\n              ></td>\n            </tr>\n            <tr>\n              <td\n                colspan=\"4\"\n                style=\"\n                  font-weight: bold;\n                  text-align: center;\n                  background-color: #eaeef7;\n                \"\n              >\n                รวมทั้งสิ้น\n              </td>\n              <td\n                style=\"\n                  font-weight: bold;\n                  text-align: right;\n                  background-color: #eaeef7;\n                \"\n              >\n                {{ numberWithCommas(sumnumber) }}\n              </td>\n              <td\n                style=\"\n                  font-weight: bold;\n                  text-align: right;\n                  background-color: #eaeef7;\n                \"\n              >\n                {{ numberWithCommas(sumvolume) }}\n              </td>\n              <td\n                style=\"\n                  font-weight: bold;\n                  text-align: right;\n                  background-color: #eaeef7;\n                \"\n              >\n                <!-- {{ numberWithCommas(sumpereach) }} -->\n              </td>\n              <td\n                style=\"\n                  font-weight: bold;\n                  text-align: right;\n                  background-color: #eaeef7;\n                \"\n              >\n                {{ numberWithCommas(sumtax) }}\n              </td>\n              <td\n                style=\"\n                  font-weight: bold;\n                  text-align: right;\n                  background-color: #eaeef7;\n                \"\n              >\n                {{ numberWithCommas(sumnettax) + \".00\" }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n\n  <script src=\"https://api-sbpacdb.ponnipa.in.th/picker_date.js\"></script>\n\n<script>\nimport MergeLiquorReportService from \"../services/MergeLiquorReportService.js\";\n\nexport default {\n  name: \"HelloWorld\",\n  data() {\n    return {\n      sumnumber: 0,\n      sumvolume: 0,\n      sumtax: 0,\n      list: [],\n      itemPreviewImage: \"\",\n      id: \"\",\n      item: [],\n      img: \"\",\n      image: \"\",\n      net_tax: [],\n      startdate: \"\",\n      enddate: \"\",\n      factory_code: \"\",\n      monthcurrent: \"\",\n      yearcurrent: \"\",\n      sumpereach: 0,\n      sumnettax: 0,\n    };\n  },\n  computed: {},\n  mounted() {\n    const d = new Date();\n    this.monthcurrent = parseInt(d.getMonth());\n    this.yearcurrent = parseInt(d.getFullYear() + 543);\n    picker_date(document.getElementById(\"start_date\"), { year_range: \"-12:+10\" });\n    picker_date(document.getElementById(\"end_date\"), { year_range: \"-12:+10\" });\n    // console.log(this.$route.params.id);\n    this.factory_code = this.$route.params.id;\n    this.loaddata();\n    const now = new Date();\n    const lastDay = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n\n    this.startdate = this.yearcurrent-1 + \"-10-01\";\n    if ((this.monthcurrent + 1).toString().length == 1) {\n      this.enddate =\n        this.yearcurrent +\n        \"-0\" +\n        parseInt(this.monthcurrent + 1) +\n        \"-\" +\n        lastDay.getDate();\n    } else {\n      this.enddate =\n        this.yearcurrent +\n        \"-\" +\n        parseInt(this.monthcurrent + 1) +\n        \"-\" +\n        lastDay.getDate();\n    }\n      document.getElementById(\"start_date\").value = this.getdate(this.startdate)\n      document.getElementById(\"end_date\").value = this.getdate(this.enddate)\n\n  },\n  methods: {\n     getdate(value) {      \n    var date = new Date(value);\n    // console.log(date);\n    var day = date.getDate();\n    var month = date.getMonth() + 1;\n    var year = date.getFullYear();\n    // console.log(day,month,year);\n    if (day.toString().length == 1) {\n      day = \"0\" + day;\n    }\n    if (month.toString().length == 1) {\n      month = \"0\" + month;\n    }\n    return  day+ \"/\"+month + \"/\" + year;\n  },\n    changeyearend() {\n      var m = this.enddate.substring(0, 2);\n      if (m == 20) {\n        var end = new Date(this.enddate);\n        var year = this.enddate.substring(0, 4);\n        var day = end.getDate();\n        var month = end.getMonth() + 1;\n        if (day.toString().length == 1) {\n          day = \"0\" + day;\n        }\n        if (month.toString().length == 1) {\n          month = \"0\" + month;\n        }\n        var c = parseInt(year) + 543 + \"-\" + month + \"-\" + day;\n        // console.log(c);\n        this.enddate = c;\n      }\n    },\n    changeyearstart() {\n      var m = this.startdate.substring(0, 2);\n      if (m == 20) {\n        var start = new Date(this.startdate);\n        var years = this.startdate.substring(0, 4);\n        var days = start.getDate();\n        var months = start.getMonth() + 1;\n        if (days.toString().length == 1) {\n          days = \"0\" + days;\n        }\n        if (months.toString().length == 1) {\n          months = \"0\" + months;\n        }\n        var cu = parseInt(years) + 543 + \"-\" + months + \"-\" + days;\n        this.startdate = cu;\n      }\n    },\n    createddate(value) {   \n  var streetaddress = String(value);\n    var d = streetaddress.substring(0, streetaddress.indexOf(\"/\"));\n    var m = streetaddress.substring(5, streetaddress.indexOf(\"/\"));\n    m = m.substring(1, 3);\n    var y = streetaddress.substring(5);\n    var full = m + \"/\" + d + y;\n    // console.log(full);\n    var date = new Date(full);\n    // console.log(date);\n    var day = date.getDate();\n    var month = date.getMonth()+1;\n    var year = date.getFullYear();\n    if (day.toString().length == 1) {\n      day = \"0\" + day;\n    }\n    if (month.toString().length == 1) {\n      month = \"0\" + month;\n    }\n    return  year + \"-\" + month + \"-\" + day;\n  },\n    search() {\n      this.startdate = this.createddate(document.getElementById(\"start_date\").value);\n      this.enddate = this.createddate(document.getElementById(\"end_date\").value);\n      // console.log(this.enddate);\n      // console.log(this.startdate);\n      // var startdate = this.convertdatesort(this.startdate);\n      // var enddate = this.convertdatesort(this.enddate);\n      MergeLiquorReportService.getMergeLiquorReportByCode(\n        this.factory_code,\n        this.startdate,\n        this.enddate\n      ).then((res) => {\n        this.list = [];\n        // console.log(res.data);\n        for (let i = 0; i < res.data.length; i++) {\n          // if (res.data[i].factory_code == res.data[i - 1].factory_code) {\n          // sum_net_tax = res.data[i].net + res.data[i - 1].net;\n          // }\n          this.list.push({\n            tax_payment_date: this.convertdatetothai(\n              res.data[i].tax_payment_date\n            ),\n            no: res.data[i].no,\n            factory_code: res.data[i].factory_code,\n            brand_name: res.data[i].brand_name + '-'+res.data[i].degree+ '-'+res.data[i].size,\n            number: res.data[i].number,\n            degree: res.data[i].degree,\n            size: res.data[i].size,\n            per_each: res.data[i].per_each,\n            volume_liquor: res.data[i].volume_liquor,\n            net: this.cal(\n              res.data[i].factory_code,\n              res.data[i].number,\n              res.data[i].per_each,\n              res.data[i].degree,\n              res.data[i].size\n            ),\n            net_tax: res.data[i].net_tax,\n            colour: \"table-success\",\n          });\n        }\n        this.cal_net_tax();\n      });\n    },\n    convertdatesort(date) {\n      var streetaddress = String(date);\n      // console.log(streetaddress);\n      var y = streetaddress.substring(0, streetaddress.indexOf(\"-\"));\n      var m = streetaddress.substring(7, streetaddress.indexOf(\"-\"));\n      m = m.substring(1, 3);\n      var d = streetaddress.substring(8, 10);\n      y = parseInt(y) + 543;\n      var full = y + \"-\" + m + \"-\" + d;\n      // console.log(d)\n      // console.log(m)\n      // console.log(y);\n      // console.log(full);\n      // var timestamp = Date.parse(full);\n      // var dateObject = new Date(timestamp);\n      // dateObject.setDate(dateObject.getDate() + 1);\n      // console.log(dateObject);\n      // const result = dateObject.toLocaleDateString(\"en-EN\");\n      // console.log(result);\n      return full;\n    },\n    loaddata() {\n      const now = new Date();\n      const lastDay = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n      MergeLiquorReportService.getMergeLiquorReportByCode(\n        this.factory_code,\n        String(this.yearcurrent-1 + \"-10-01\"),\n        String(\n          this.yearcurrent +\n            \"-\" +\n            parseInt(this.monthcurrent + 1) +\n            \"-\" +\n            lastDay.getDate()\n        )\n      )\n        .then((res) => {\n          // console.log(res.data);\n          // this.list = res.data;\n          // var sum_net_tax = 0;\n          for (let i = 0; i < res.data.length; i++) {\n            // if (res.data[i].factory_code == res.data[i - 1].factory_code) {\n            // sum_net_tax = res.data[i].net + res.data[i - 1].net;\n            // }\n            this.list.push({\n              tax_payment_date: this.convertdatetothai(\n                res.data[i].tax_payment_date\n              ),\n              no: res.data[i].no,\n              factory_code: res.data[i].factory_code,\n              brand_name: res.data[i].brand_name + '-'+res.data[i].degree+ '-'+res.data[i].size,\n              number: res.data[i].number,\n              degree: res.data[i].degree,\n              size: res.data[i].size,\n              per_each: res.data[i].per_each,\n              volume_liquor: res.data[i].volume_liquor,\n              net: this.cal(\n                res.data[i].factory_code,\n                res.data[i].number,\n                res.data[i].per_each,\n                res.data[i].degree,\n                res.data[i].size\n              ),\n              net_tax: res.data[i].net_tax,\n              colour: \"table-success\",\n              type: res.data[i].type,\n            });\n          }\n          this.cal_net_tax();\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n    cal_net_tax() {\n      // for (let i = 0; i < this.list.length; i++) {\n      //   if (i != 0) {\n      //     if (\n      //       this.list[i].tax_payment_date == this.list[i - 1].tax_payment_date\n      //     ) {\n      //       // console.log(\"i\", this.list[i].net);\n      //       // console.log(this.list[i -1].net);\n      //       this.list[i - 1].net_tax = Math.floor(\n      //         parseFloat(this.list[i].net) + parseFloat(this.list[i - 1].net)\n      //       ).toFixed(2);\n      //     } else {\n      //       this.list[i].net_tax = Math.floor(\n      //         parseFloat(this.list[i].net)\n      //       ).toFixed(2);\n      //     }\n      //   } else {\n      //     this.list[i].net_tax = Math.floor(\n      //       parseFloat(this.list[i].net)\n      //     ).toFixed(2);\n      //   }\n      // }\n\n      this.total();\n    },\n    cal(factory_code, number, per_each, degree, size) {\n      var x1 = 0;\n      var x2 = 0;\n      var x3 = 0;\n      var x4 = 0;\n      if (factory_code == 540002) {\n        x1 = ((10 * number) / 100) * per_each;\n        // console.log(x1);\n        // var x2 = ((155*30)/100)*0.63*1500;\n        x2 = ((150 * degree) / 100) * size * number;\n        // console.log(x2);\n        return (x1 + x2).toFixed(2);\n      } else {\n        x3 = ((2 * number) / 100) * per_each;\n        // console.log(x1);\n        // var x2 = ((155*30)/100)*0.63*1500;\n        x4 = ((155 * degree) / 100) * size * number;\n        // console.log(x2);\n        return (x3 + x4).toFixed(2);\n      }\n    },\n    convertdatetothai(datetimes) {\n      if (datetimes) {\n        var d = new Date(datetimes);\n        var mm = d.getMonth() + 1;\n        var dd = d.getDate();\n        var yy = d.getFullYear();\n\n        var myDateString = dd + \"/\" + mm + \"/\" + yy; //(US)\n        // console.log(myDateString);\n        return myDateString;\n      }\n    },\n    numberWithCommas(x) {\n      var r = 0;\n      x = parseInt(x);\n      if (isNaN(x)) {\n        r = \"\";\n      } else {\n        r = x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      }\n      return r;\n    },\n    groupBy(array, key) {\n      const result = {};\n      array.forEach((item) => {\n        if (!result[item[key]]) {\n          result[item[key]] = [];\n        }\n        result[item[key]].push(item);\n      });\n      return result;\n    },\n    total() {\n      \n      this.sumnumber = 0\nthis.sumvolume = 0\nthis.sumpereach = 0\nthis.sumtax = 0\nthis.sumnettax = 0\n      // console.log(this.list);\n      for (let l = 0; l < this.list.length; l++) {\n        this.sumnumber = this.sumnumber + this.list[l].number;\n        this.sumvolume = this.sumvolume + this.list[l].volume_liquor;\n        this.sumpereach = this.sumvolume + this.list[l].per_each;\n        this.sumtax = this.sumtax + parseInt(this.list[l].net);\n        if (this.list[l].net_tax) {\n          this.sumnettax = this.sumnettax + parseFloat(this.list[l].net_tax);\n        }\n      }\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}