{"remainingRequest":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/Advertising.vue?vue&type=template&id=1fcee324&","dependencies":[{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/Advertising.vue","mtime":1694576386112},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1687492401267},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1687492401916},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1687492401267},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js","mtime":1687492401738}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJkaXYiLAogICAgeyBzdGF0aWNDbGFzczogImNvbnRhaW5lciIgfSwKICAgIFsKICAgICAgX3ZtLl9sKF92bS5saXN0LCBmdW5jdGlvbiAobCkgewogICAgICAgIHJldHVybiBfYygKICAgICAgICAgICJ0YWJsZSIsCiAgICAgICAgICB7IGtleTogbC5pZCwgc3RhdGljQ2xhc3M6ICJ0YWJsZSB0YWJsZS1ib3JkZXJlZCBtdC0zIiB9LAogICAgICAgICAgWwogICAgICAgICAgICBfYygidGhlYWQiLCBbCiAgICAgICAgICAgICAgX2MoInRyIiwgWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJ0aCIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICAgICAgICAgICAgICAgInRleHQtYWxpZ24iOiAiY2VudGVyIiwKICAgICAgICAgICAgICAgICAgICAgICJiYWNrZ3JvdW5kLWNvbG9yIjogIiNmZmI0NTQiLAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgc2NvcGU6ICJjb2wiLCBjb2xzcGFuOiAiMiIgfSwKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgW192bS5fdihfdm0uX3MobC5maWxlKSldCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoInRib2R5IiwgWwogICAgICAgICAgICAgIF92bS5fbSgwLCB0cnVlKSwKICAgICAgICAgICAgICBfYygidHIiLCBbCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgInRkIiwKICAgICAgICAgICAgICAgICAgeyBzdGF0aWNTdHlsZTogeyB3aWR0aDogIjQwJSIgfSwgc3R5bGU6IF92bS5jb2xvcmtleSB9LAogICAgICAgICAgICAgICAgICBbX2MoInNwYW4iLCB7IGRvbVByb3BzOiB7IGlubmVySFRNTDogX3ZtLl9zKGwuZGVzY3RleHQpIH0gfSldCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgbC5rZXl3b3JkICE9IDAKICAgICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAgICJ0ZCIsCiAgICAgICAgICAgICAgICAgICAgICB7IHN0eWxlOiBfdm0uY29sb3JrZXkgfSwKICAgICAgICAgICAgICAgICAgICAgIF92bS5fbChsLmtleXdvcmQsIGZ1bmN0aW9uIChrLCBpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfYygidHIiLCB7IGtleTogaSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInRkIiwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7IGlubmVySFRNTDogX3ZtLl9zKGsuc2VudGVudCkgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJ0ZCIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGsuc3RhdHVzID09IDEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygic3BhbiIsIFtfdm0uX3YoIuC5gOC4geC4tOC4meC4iOC4o+C4tOC4hyIpXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGsuc3RhdHVzID09IDkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygic3BhbiIsIFtfdm0uX3YoIuC5hOC4oeC5iOC5gOC4geC4tOC4meC4iOC4o+C4tOC4hyIpXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGsuc3RhdHVzID09IDAgPyBfYygic3BhbiIpIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoInRkIiwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJtYi0zIGJ0biBidG4tc3VjY2VzcyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogInN1Ym1pdCIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5zYXZldG9ydWxlX2Jhc2VkKGsuaWQsIGsuc2VuLCAxKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbX2MoImkiLCB7IHN0YXRpY0NsYXNzOiAiZmEgZmEtY2hlY2siIH0pXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiwqAgIiksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1iLTMgYnRuIGJ0bi1kYW5nZXIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHR5cGU6ICJzdWJtaXQiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uc2F2ZXRvcnVsZV9iYXNlZChrLmlkLCBrLnNlbiwgOSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW19jKCJpIiwgeyBzdGF0aWNDbGFzczogImZhIGZhLXRpbWVzIiB9KV0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgIDAKICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIDogX2MoInRkIiwgeyBzdHlsZTogX3ZtLmNvbG9ya2V5IH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJ0ciIsIFtfdm0uX3YoIiDguYTguKHguYjguJ7guJrguILguYnguK3guITguKfguLLguKHguYLguIbguKnguJPguLIgIildKSwKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgXSksCiAgICAgICAgICBdCiAgICAgICAgKQogICAgICB9KSwKICAgICAgX3ZtLmxpc3QubGVuZ3RoCiAgICAgICAgPyBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJvdyIgfSwgWwogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC1tZC02IiB9LCBbCiAgICAgICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICJBZHZlcnRpc2luZz9pZD0iICsgX3ZtLmJhY2sgfSB9LCBbCiAgICAgICAgICAgICAgICBfdm0uJHJvdXRlLnF1ZXJ5LmlkICE9IDEKICAgICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1iLTMgYnRuIGJ0bi1pbmZvIiwKICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogInN1Ym1pdCIgfSwKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJpIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZmEgZmEtYXJyb3ctbGVmdCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgImFyaWEtaGlkZGVuIjogInRydWUiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF92bS4kcm91dGUucXVlcnkuaWQgPCBfdm0uYWxsZGF0YQogICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjb2wtbWQtNiIsCiAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgInRleHQtYWxpZ24iOiAicmlnaHQiIH0sCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIkFkdmVydGlzaW5nP2lkPSIgKyBfdm0ubmV4dCB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5fbSgxKSwKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICBdKQogICAgICAgIDogX3ZtLl9lKCksCiAgICBdLAogICAgMgogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gWwogIGZ1bmN0aW9uICgpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJ0ciIsIFsKICAgICAgX2MoInRoIiwgeyBzdGF0aWNTdHlsZTogeyAiYmFja2dyb3VuZC1jb2xvciI6ICIjZmZiNDU0IiB9IH0sIFsKICAgICAgICBfdm0uX3YoIuC4o+C4suC4ouC4peC4sOC5gOC4reC4teC4ouC4lOC4quC4tOC4meC4hOC5ieC4siIpLAogICAgICBdKSwKICAgICAgX2MoInRoIiwgeyBzdGF0aWNTdHlsZTogeyAiYmFja2dyb3VuZC1jb2xvciI6ICIjZmZiNDU0IiB9IH0sIFsKICAgICAgICBfdm0uX3YoIuC4guC5ieC4reC4hOC4p+C4suC4oeC5guC4huC4qeC4k+C4siIpLAogICAgICBdKSwKICAgIF0pCiAgfSwKICBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygKICAgICAgImJ1dHRvbiIsCiAgICAgIHsgc3RhdGljQ2xhc3M6ICJtYi0zIGJ0biBidG4taW5mbyIsIGF0dHJzOiB7IHR5cGU6ICJzdWJtaXQiIH0gfSwKICAgICAgWwogICAgICAgIF9jKCJpIiwgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJmYSBmYS1hcnJvdy1yaWdodCIsCiAgICAgICAgICBhdHRyczogeyAiYXJpYS1oaWRkZW4iOiAidHJ1ZSIgfSwKICAgICAgICB9KSwKICAgICAgXQogICAgKQogIH0sCl0KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}