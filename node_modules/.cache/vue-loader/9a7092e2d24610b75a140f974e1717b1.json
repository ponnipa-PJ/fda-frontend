{"remainingRequest":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/trainingscores.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/trainingscores.vue","mtime":1700629984723},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/babel-loader/lib/index.js","mtime":1687492401655},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1687492401267},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js","mtime":1687492401738}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgS2V5d29yZFNlcnZpY2UgZnJvbSAnLi4vc2VydmljZXMvS2V5d29yZFNlcnZpY2UnCgpjb25zdCBjdXN0b21MYWJlbHMgPSB7CiAgZmlyc3Q6ICI8PCIsCiAgbGFzdDogIj4+IiwKICBwcmV2aW91czogIjwiLAogIG5leHQ6ICI+IiwKfTsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQXBwIiwKICBjb21wb25lbnRzOiB7fSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdHlwZTogMCwKICAgICAgbGlzdDogW10sCiAgICAgIHVybDonJywKICAgICAgZmlsZTonJywKICAgICAgc3RhdHVzOmZhbHNlLAogICAgICB1cmxQYXRoOicnLAogICAgICB0aXRsZTonJywKICAgICAgZGF0YTp7fSwKICAgICAgcHJvX2lkOjAsCiAgICAgIGNhdGVnb3J5OltdLAogICAgICBwYWdlT2ZJdGVtczogW10sCiAgICAgIGN1c3RvbUxhYmVscywKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBQcm9iYWJpbGl0eShzdGF0dXN0cnVlLHRvdGFsKXsKICAgICAgdmFyIHJlc3VsdCA9IDAKICAgICAgaWYgKHN0YXR1c3RydWUgJiYgdG90YWwpIHsKICAgICAgICByZXN1bHQgPSAoc3RhdHVzdHJ1ZS90b3RhbCkudG9GaXhlZCgyKSArICclJwogICAgICB9CnJldHVybiByZXN1bHQKICAgIH0sCiAgICBnZXRjYXRlZ29yeSgpewogICAgICBLZXl3b3JkU2VydmljZS5nZXR0cmFpbmluZygpLnRoZW4oKHJlcyk9PnsKICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YSk7CiAgICAgICAgdGhpcy5saXN0ID0gcmVzLmRhdGEKICAgICAgfSkKICAgIH0sCiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5nZXRjYXRlZ29yeSgpCi8vICAgICB2YXIgY29ycHVzPQovLyAgICAgewovLyBkaWN0MSA6IDEKLy8gICAgIH0KLy8gICAgIFJ1bGVCYXNlZFNlcnZpY2UuY3JlYXRlcnVsZV9iYXNlZChjb3JwdXMpLnRoZW4oKHJlcykgPT4gewovLyAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YSk7Ci8vICAgICB9KTsKICB9LAp9Owo="},{"version":3,"sources":["trainingscores.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"trainingscores.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container mt-5\">\n      <table class=\"table\" v-if=\"list.length > 0\" width=\"100%\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">keyword</th>\n            <th scope=\"col\" style=\"text-align:center\"> เกินจริง</th>\n            <th scope=\"col\" style=\"text-align:center\"> ไม่เกินจริง</th>\n            <th scope=\"col\" style=\"text-align:center\"> Total</th>\n            <th scope=\"col\" style=\"text-align:center\"> Probability</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(l, i) in list\" :key=\"i\">\n            <td :style=\"l.bg\">{{ i+1 }}</td>\n            <td :style=\"l.bg\">{{ l.name }}</td>\n            <td style=\"text-align:center\">{{ l.statustrue || 0 }}</td>\n            <td style=\"text-align:center\">{{ l.statusfalse || 0 }}</td>\n            <td style=\"text-align:center\">{{ l.total || 0 }}</td>\n            <td style=\"text-align:center\">{{ Probability(l.statustrue , l.total)}}</td>\n          </tr>\n        </tbody>\n      </table>\n  </div>\n</template>\n\n<script>\n\nimport KeywordService from '../services/KeywordService'\n\nconst customLabels = {\n  first: \"<<\",\n  last: \">>\",\n  previous: \"<\",\n  next: \">\",\n};\n\nexport default {\n  name: \"App\",\n  components: {},\n  data() {\n    return {\n      type: 0,\n      list: [],\n      url:'',\n      file:'',\n      status:false,\n      urlPath:'',\n      title:'',\n      data:{},\n      pro_id:0,\n      category:[],\n      pageOfItems: [],\n      customLabels,\n    };\n  },\n  methods: {\n    Probability(statustrue,total){\n      var result = 0\n      if (statustrue && total) {\n        result = (statustrue/total).toFixed(2) + '%'\n      }\nreturn result\n    },\n    getcategory(){\n      KeywordService.gettraining().then((res)=>{\n        console.log(res.data);\n        this.list = res.data\n      })\n    },\n  },\n  mounted() {\n    this.getcategory()\n//     var corpus=\n//     {\n// dict1 : 1\n//     }\n//     RuleBasedService.createrule_based(corpus).then((res) => {\n//       console.log(res.data);\n//     });\n  },\n};\n</script>\n\n<style>\nhtml,\nbody {\n  height: 100%;\n  margin: 0px;\n}</style>\n"]}]}