{"remainingRequest":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/TypeOneGraph.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/TypeOneGraph.vue","mtime":1691720359018},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/babel-loader/lib/index.js","mtime":1687492401655},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1687492401267},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js","mtime":1687492401738}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBEYXNoYm9hcmRTZXJ2aWNlIGZyb20gIi4uL3NlcnZpY2VzL0Rhc2hib2FyZFNlcnZpY2UiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJOYXYiLAogIHByb3BzOiB7CiAgICBtc2c6IFN0cmluZywKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBvcHRpb25zOiB7fSwKICAgICAgc2VyaWVzOiBbXSwKICAgICAgY2F0ZWdvcnk6IFtdLAogICAgICBkYXRhOiBbXSwKICAgICAgbGlzdDpbXSwKICAgICAgY29sb3I6W10KICAgIH07CiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5nZXREYXRhKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXREYXRhKCkgewogICAgICBEYXNoYm9hcmRTZXJ2aWNlLmdldFR5cGVPbmVEYXNoYm9hcmRzKCkudGhlbigocmVzKSA9PiB7CiAgICAgICAgLy8gY29uc29sZS5sb2cocmVzLmRhdGEpOwogICAgICAgIHRoaXMubGlzdCA9IHJlcy5kYXRhCiAgICAgICAgZm9yIChsZXQgciA9IDA7IHIgPCByZXMuZGF0YS5sZW5ndGg7IHIrKykgewogICAgICAgICAgdGhpcy5jYXRlZ29yeS5wdXNoKHJlcy5kYXRhW3JdLmNhdGVnb3JpZXMpCiAgICAgICAgdGhpcy5kYXRhLnB1c2gocmVzLmRhdGFbcl0uZGF0YSkKICAgICAgICB0aGlzLmNvbG9yLnB1c2gocmVzLmRhdGFbcl0uY29sb3IpCiAgICAgICAgfQogICAgICAgIAogICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuY2F0ZWdvcnkgKTsKICAgICAgICAvLyAgY29uc29sZS5sb2codGhpcy5kYXRhICk7CiAgICAgICAgdGhpcy5sb2FkT3B0aW9uKCk7CiAgICAgIH0pOwogICAgfSwKCiAgICBsb2FkT3B0aW9uKCkgewogICAgICB0aGlzLm9wdGlvbnMgPSB7CiAgICAgICAgY29sb3JzOiB0aGlzLmNvbG9yLAogICAgICAgIHNlcmllczogdGhpcy5kYXRhLAogICAgbGFiZWxzOiB0aGlzLmNhdGVnb3J5LAogICAgZGF0YUxhYmVsczogewogICAgICAgIGZvcm1hdHRlcjogZnVuY3Rpb24gKHZhbCwgb3B0cykgewogICAgICAgICAgICByZXR1cm4gb3B0cy53LmNvbmZpZy5zZXJpZXNbb3B0cy5zZXJpZXNJbmRleF0KICAgICAgICB9LAogICAgICB9LAogICAgICAgIGNoYXJ0OiB7CiAgICAgICAgICB0eXBlOiAicGllIiwKICAgICAgICAgIGV2ZW50czogewogICAgICAgICAgICBkYXRhUG9pbnRTZWxlY3Rpb246IChldmVudCwgY2hhcnRDb250ZXh0LCBjb25maWcpID0+IHsKICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhjb25maWcpOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKGNvbmZpZy5kYXRhUG9pbnRJbmRleCk7CiAgICAgICAgICAgICAgdmFyIGlkID0gJycKICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmxpc3QpOwogICAgICAgICAgICAgIGZvciAobGV0IHIgPSAwOyByIDwgdGhpcy5saXN0Lmxlbmd0aDsgcisrKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyKTsKICAgICAgICAgICAgICAgIGlmIChjb25maWcuZGF0YVBvaW50SW5kZXggPT0gcikgewogICAgICAgICAgICAgICAgICBpZCA9IHRoaXMubGlzdFtyXS5pZAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBjb25zb2xlLmxvZyhpZCk7CiAgICAgICAgICAgICAgd2luZG93Lm9wZW4oImRldGFpbHR5cGUvIiArIGlkLCAiX2JsYW5rIik7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIC8vIGNsaWNrOiBmdW5jdGlvbiAoZXZlbnQsIGNoYXJ0Q29udGV4dCwgY29uZmlnKSB7CiAgICAgICAgICAgIC8vICAgICB3aW5kb3cub3BlbigiZGV0YWlsbGV2ZWwvIiArIGNvbmZpZy54YXhpcy5jYXRlZ29yaWVzW2NvbmZpZy5kYXRhUG9pbnRJbmRleF0sICJfYmxhbmsiKTsKICAgICAgICAgICAgLy8gfSwKICAgICAgICAgIH0sCiAgICAgICAgfSwKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogIuC4geC4o+C4suC4n+C5geC4quC4lOC4h+C4iOC4s+C4meC4p+C4meC4nOC4peC4tOC4leC4oOC4seC4k+C4keC5jOC4l+C4teC5iOC5hOC4oeC5iOC4nOC5iOC4suC4meC4geC4suC4o+C4leC4o+C4p+C4iOC4quC4reC4muC4leC4suC4oeC5gOC4h+C4t+C5iOC4reC4meC5hOC4giIsCiAgICAgICAgfSwKICAgICAgICBzdHlsZTogewogICAgICAgICAgZm9udFNpemU6ICI5cHgiLAogICAgICAgICAgZm9udFdlaWdodDogImJvbGQiLAogICAgICAgICAgZm9udEZhbWlseTogIk5pcmFtaXQiLAogICAgICAgIH0KICAgICAgfTsKICAgICAgCiAgICB9LAogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGN1cnJlbnRVc2VyKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuYXV0aC51c2VyOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["TypeOneGraph.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TypeOneGraph.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container-fluid row\" style=\"padding: 30px\">\n    <apexchart\n      width=\"500\"\n      type=\"pie\"\n      :options=\"options\"\n      :series=\"series\"\n    ></apexchart>\n  </div>\n</template>\n\n<script>\nimport DashboardService from \"../services/DashboardService\";\n\nexport default {\n  name: \"Nav\",\n  props: {\n    msg: String,\n  },\n  data() {\n    return {\n      options: {},\n      series: [],\n      category: [],\n      data: [],\n      list:[],\n      color:[]\n    };\n  },\n  mounted() {\n    this.getData();\n  },\n  methods: {\n    getData() {\n      DashboardService.getTypeOneDashboards().then((res) => {\n        // console.log(res.data);\n        this.list = res.data\n        for (let r = 0; r < res.data.length; r++) {\n          this.category.push(res.data[r].categories)\n        this.data.push(res.data[r].data)\n        this.color.push(res.data[r].color)\n        }\n        \n        // console.log(this.category );\n        //  console.log(this.data );\n        this.loadOption();\n      });\n    },\n\n    loadOption() {\n      this.options = {\n        colors: this.color,\n        series: this.data,\n    labels: this.category,\n    dataLabels: {\n        formatter: function (val, opts) {\n            return opts.w.config.series[opts.seriesIndex]\n        },\n      },\n        chart: {\n          type: \"pie\",\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              // console.log(config);\n              console.log(config.dataPointIndex);\n              var id = ''\n              console.log(this.list);\n              for (let r = 0; r < this.list.length; r++) {\n                console.log(r);\n                if (config.dataPointIndex == r) {\n                  id = this.list[r].id\n                }\n              }\n              console.log(id);\n              window.open(\"detailtype/\" + id, \"_blank\");\n            },\n            // click: function (event, chartContext, config) {\n            //     window.open(\"detaillevel/\" + config.xaxis.categories[config.dataPointIndex], \"_blank\");\n            // },\n          },\n        },\n        title: {\n          text: \"กราฟแสดงจำนวนผลิตภัณฑ์ที่ไม่ผ่านการตรวจสอบตามเงื่อนไข\",\n        },\n        style: {\n          fontSize: \"9px\",\n          fontWeight: \"bold\",\n          fontFamily: \"Niramit\",\n        }\n      };\n      \n    },\n  },\n  computed: {\n    currentUser() {\n      return this.$store.state.auth.user;\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>\n"]}]}