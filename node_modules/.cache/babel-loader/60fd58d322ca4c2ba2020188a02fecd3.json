{"remainingRequest":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/thread-loader/dist/cjs.js!/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/babel-loader/lib/index.js!/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/trainingscores.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/trainingscores.vue","mtime":1700629984723},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/babel.config.js","mtime":1677654957527},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1687492401267},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/thread-loader/dist/cjs.js","mtime":1687492401222},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/babel-loader/lib/index.js","mtime":1687492401655},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1687492401267},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js","mtime":1687492401738}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLnRvLWZpeGVkLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEtleXdvcmRTZXJ2aWNlIGZyb20gJy4uL3NlcnZpY2VzL0tleXdvcmRTZXJ2aWNlJzsKdmFyIGN1c3RvbUxhYmVscyA9IHsKICBmaXJzdDogIjw8IiwKICBsYXN0OiAiPj4iLAogIHByZXZpb3VzOiAiPCIsCiAgbmV4dDogIj4iCn07CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQXBwIiwKICBjb21wb25lbnRzOiB7fSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdHlwZTogMCwKICAgICAgbGlzdDogW10sCiAgICAgIHVybDogJycsCiAgICAgIGZpbGU6ICcnLAogICAgICBzdGF0dXM6IGZhbHNlLAogICAgICB1cmxQYXRoOiAnJywKICAgICAgdGl0bGU6ICcnLAogICAgICBkYXRhOiB7fSwKICAgICAgcHJvX2lkOiAwLAogICAgICBjYXRlZ29yeTogW10sCiAgICAgIHBhZ2VPZkl0ZW1zOiBbXSwKICAgICAgY3VzdG9tTGFiZWxzOiBjdXN0b21MYWJlbHMKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBQcm9iYWJpbGl0eTogZnVuY3Rpb24gUHJvYmFiaWxpdHkoc3RhdHVzdHJ1ZSwgdG90YWwpIHsKICAgICAgdmFyIHJlc3VsdCA9IDA7CgogICAgICBpZiAoc3RhdHVzdHJ1ZSAmJiB0b3RhbCkgewogICAgICAgIHJlc3VsdCA9IChzdGF0dXN0cnVlIC8gdG90YWwpLnRvRml4ZWQoMikgKyAnJSc7CiAgICAgIH0KCiAgICAgIHJldHVybiByZXN1bHQ7CiAgICB9LAogICAgZ2V0Y2F0ZWdvcnk6IGZ1bmN0aW9uIGdldGNhdGVnb3J5KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgS2V5d29yZFNlcnZpY2UuZ2V0dHJhaW5pbmcoKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YSk7CiAgICAgICAgX3RoaXMubGlzdCA9IHJlcy5kYXRhOwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldGNhdGVnb3J5KCk7IC8vICAgICB2YXIgY29ycHVzPQogICAgLy8gICAgIHsKICAgIC8vIGRpY3QxIDogMQogICAgLy8gICAgIH0KICAgIC8vICAgICBSdWxlQmFzZWRTZXJ2aWNlLmNyZWF0ZXJ1bGVfYmFzZWQoY29ycHVzKS50aGVuKChyZXMpID0+IHsKICAgIC8vICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhKTsKICAgIC8vICAgICB9KTsKICB9Cn07"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AAEA;AACAA,aADA;AAEAC,YAFA;AAGAC,eAHA;AAIAC;AAJA;AAOA;AACAC,aADA;AAEAC,gBAFA;AAGAC,MAHA,kBAGA;AACA;AACAC,aADA;AAEAC,cAFA;AAGAC,aAHA;AAIAC,cAJA;AAKAC,mBALA;AAMAC,iBANA;AAOAC,eAPA;AAQAP,cARA;AASAQ,eATA;AAUAC,kBAVA;AAWAC,qBAXA;AAYAC;AAZA;AAcA,GAlBA;AAmBAC;AACAC,eADA,uBACAC,UADA,EACAC,KADA,EACA;AACA;;AACA;AACAC;AACA;;AACA;AACA,KAPA;AAQAC,eARA,yBAQA;AAAA;;AACAC;AACAC;AACA;AACA,OAHA;AAIA;AAbA,GAnBA;AAkCAC,SAlCA,qBAkCA;AACA,uBADA,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CA","names":["first","last","previous","next","name","components","data","type","list","url","file","status","urlPath","title","pro_id","category","pageOfItems","customLabels","methods","Probability","statustrue","total","result","getcategory","KeywordService","console","mounted"],"sourceRoot":"src/components","sources":["trainingscores.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n      <table class=\"table\" v-if=\"list.length > 0\" width=\"100%\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">keyword</th>\n            <th scope=\"col\" style=\"text-align:center\"> เกินจริง</th>\n            <th scope=\"col\" style=\"text-align:center\"> ไม่เกินจริง</th>\n            <th scope=\"col\" style=\"text-align:center\"> Total</th>\n            <th scope=\"col\" style=\"text-align:center\"> Probability</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(l, i) in list\" :key=\"i\">\n            <td :style=\"l.bg\">{{ i+1 }}</td>\n            <td :style=\"l.bg\">{{ l.name }}</td>\n            <td style=\"text-align:center\">{{ l.statustrue || 0 }}</td>\n            <td style=\"text-align:center\">{{ l.statusfalse || 0 }}</td>\n            <td style=\"text-align:center\">{{ l.total || 0 }}</td>\n            <td style=\"text-align:center\">{{ Probability(l.statustrue , l.total)}}</td>\n          </tr>\n        </tbody>\n      </table>\n  </div>\n</template>\n\n<script>\n\nimport KeywordService from '../services/KeywordService'\n\nconst customLabels = {\n  first: \"<<\",\n  last: \">>\",\n  previous: \"<\",\n  next: \">\",\n};\n\nexport default {\n  name: \"App\",\n  components: {},\n  data() {\n    return {\n      type: 0,\n      list: [],\n      url:'',\n      file:'',\n      status:false,\n      urlPath:'',\n      title:'',\n      data:{},\n      pro_id:0,\n      category:[],\n      pageOfItems: [],\n      customLabels,\n    };\n  },\n  methods: {\n    Probability(statustrue,total){\n      var result = 0\n      if (statustrue && total) {\n        result = (statustrue/total).toFixed(2) + '%'\n      }\nreturn result\n    },\n    getcategory(){\n      KeywordService.gettraining().then((res)=>{\n        console.log(res.data);\n        this.list = res.data\n      })\n    },\n  },\n  mounted() {\n    this.getcategory()\n//     var corpus=\n//     {\n// dict1 : 1\n//     }\n//     RuleBasedService.createrule_based(corpus).then((res) => {\n//       console.log(res.data);\n//     });\n  },\n};\n</script>\n\n<style>\nhtml,\nbody {\n  height: 100%;\n  margin: 0px;\n}</style>\n"]}]}