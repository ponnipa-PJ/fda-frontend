{"remainingRequest":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/thread-loader/dist/cjs.js!/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/babel-loader/lib/index.js!/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/Import.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/Import.vue","mtime":1687769290279},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/babel.config.js","mtime":1677654957527},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1687492401267},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/thread-loader/dist/cjs.js","mtime":1687492401222},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/babel-loader/lib/index.js","mtime":1687492401655},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1687492401267},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js","mtime":1687492401738}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9wb25uaXBhL0RvY3VtZW50cy9HaXRIdWIvZmRhLWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5qc29uLnN0cmluZ2lmeS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlLWFsbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCByZWFkWGxzeEZpbGUgZnJvbSAicmVhZC1leGNlbC1maWxlIjsgLy8gaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnCi8vIGltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CgppbXBvcnQgTWVudVNlcnZpY2UgZnJvbSAnLi4vc2VydmljZXMvTWVudVNlcnZpY2UuanMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkFwcCIsCiAgY29tcG9uZW50czoge30sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHR5cGU6IDAsCiAgICAgIGxpc3Q6IFtdLAogICAgICB1cmw6ICcnLAogICAgICBmaWxlOiAnJywKICAgICAgc3RhdHVzOiBmYWxzZQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHNlYXJjaDogZnVuY3Rpb24gc2VhcmNoKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5saXN0ID0gW107CiAgICAgIE1lbnVTZXJ2aWNlLmdldHByb2R1Y3QodGhpcy51cmwpLnRoZW4oKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YSk7CiAgICAgICAgdmFyIGZkYWxpc3QgPSBbXTsKICAgICAgICB2YXIgZGV0YWlsID0gcmVzLmRhdGE7IC8vIHZhciBkZXRhaWwgPSAn4LiC4LmJ4Lit4Lih4Li54Lil4LiI4Liz4LmA4Lie4Liy4Liw4LiC4Lit4LiH4Liq4Li04LiZ4LiE4LmJ4Liy4Lir4Lih4Lin4LiU4Lir4Lih4Li54LmIU2hvcGVl4LiB4Lil4Li44LmI4Lih4Lic4Lil4Li04LiV4Lig4Lix4LiT4LiR4LmM4LmA4Lie4Li34LmI4Lit4Liq4Li44LiC4Lig4Liy4Lie4Lit4Liy4Lir4Liy4Lij4LmA4Liq4Lij4Li04Lih4LmA4Lie4Li34LmI4Lit4LiE4Lin4Liy4Lih4LiH4Liy4Lih4Lic4Li04Lin4Lii4Li14LmI4Lir4LmJ4LitR2xvYmFsIFdoaXRlKOC5guC4geC4peC4muC4reC4peC5hOC4p+C4l+C5jCnguKvguJnguYnguLLguJfguLXguYjguILguK3guIfguK3guLLguKvguLLguKPguYDguKrguKPguLTguKHguKrguLPguKvguKPguLHguJrguITguKfguLLguKHguIfguLLguKHguITguK3guKXguKXguLLguYDguIjguJksIOC4nOC4oSDguJzguLTguKcg4LmB4Lil4Liw4LmA4Lil4LmH4Lia4Lir4Lih4Liy4Lii4LmA4Lil4LiC4LmD4Lia4Lit4LiZ4Li44LiN4Liy4LiVL+C4reC4oi43MC0xLTI3MTYwLTUtMDI2OOC4iOC4s+C4meC4p+C4meC4quC4tOC4meC4hOC5ieC4sjI1OOC4quC5iOC4h+C4iOC4suC4geC4iOC4seC4h+C4q+C4p+C4seC4lOC4m+C4l+C4uOC4oeC4mOC4suC4meC4teC4o+C4suC4ouC4peC4sOC5gOC4reC4teC4ouC4lOC4quC4tOC4meC4hOC5ieC4suC4q+C4oeC4suC4ouC5gOC4peC4guC5g+C4muC4reC4meC4uOC4jeC4suC4lS/guK3guKIu8J+MvDcwLTEtMjcxNjAtNS0wMjY44Lit4Liy4Lii4Li44LiB4Liy4Lij4LmA4LiB4LmH4Lia4Lij4Lix4LiB4Lip4LiyIDI0IOC5gOC4lOC4t+C4reC4mScKCiAgICAgICAgdmFyIGZkYSA9IF90aGlzLmZpbmRmZGEoZGV0YWlsKTsKCiAgICAgICAgZmRhbGlzdC5wdXNoKHsKICAgICAgICAgIGRldGFpbDogZGV0YWlsLAogICAgICAgICAgZmRhOiBmZGEKICAgICAgICB9KTsKCiAgICAgICAgdmFyIF9sb29wID0gZnVuY3Rpb24gX2xvb3AoZikgewogICAgICAgICAgdmFyIHVybCA9ICJodHRwczovL3Rhd2FpZm9yaGVhbHRoLm9yZy9hcGkvb3J5b3IvY2hlY2stcHJvZHVjdCI7CiAgICAgICAgICB2YXIgZGF0YSA9IHsKICAgICAgICAgICAgIm51bWJlcl9zcmMiOiBmZGFsaXN0W2ZdLmZkYQogICAgICAgICAgfTsKICAgICAgICAgIHZhciBvcHRpb25zID0gewogICAgICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgIEFjY2VwdDogImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PVVURi04IgogICAgICAgICAgICB9LAogICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKQogICAgICAgICAgfTsKICAgICAgICAgIGZldGNoKHVybCwgb3B0aW9ucykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgICAgLy8gY29uc29sZS5sb2coZGF0YSk7CiAgICAgICAgICAgIGlmIChkYXRhLm1lc3NhZ2UpIHsKICAgICAgICAgICAgICBmZGFsaXN0W2ZdLnN0YXR1cyA9IDA7CiAgICAgICAgICAgICAgZmRhbGlzdFtmXS5saXN0ID0gW107CiAgICAgICAgICAgICAgZmRhbGlzdFtmXS5iZyA9ICdiYWNrZ3JvdW5kLWNvbG9yOiNmOWJkYmInOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIGZkYWxpc3RbZl0ubGlzdCA9IGRhdGE7CiAgICAgICAgICAgICAgZmRhbGlzdFtmXS5zdGF0dXMgPSAxOwogICAgICAgICAgICAgIGZkYWxpc3RbZl0uYmcgPSAnYmFja2dyb3VuZC1jb2xvcjojYTNlOWE0JzsgLy8gY29uc29sZS5sb2coZGF0YS5TVEFUVVNfSUQuaW5jbHVkZXMoNykpCgogICAgICAgICAgICAgIGlmIChkYXRhLmNuY25tID09ICLguITguIfguK3guKLguLnguYgiKSB7CiAgICAgICAgICAgICAgICBmZGFsaXN0W2ZdLmljb24gPSAnY29sb3I6IGdyZWVuJzsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgZmRhbGlzdFtmXS5pY29uID0gJ2NvbG9yOiByZWQnOwogICAgICAgICAgICAgICAgZmRhbGlzdFtmXS5iZyA9ICdiYWNrZ3JvdW5kLWNvbG9yOiNmOWJkYmInOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSAvLyBjb25zb2xlLmxvZyhmKzEsIGZkYWxpc3QubGVuZ3RoKTsKCgogICAgICAgICAgICBpZiAoZiArIDEgPT0gZmRhbGlzdC5sZW5ndGgpIHsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhmZGFsaXN0KTsKICAgICAgICAgICAgICBfdGhpcy5saXN0ID0gZmRhbGlzdDsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfTsKCiAgICAgICAgZm9yICh2YXIgZiA9IDA7IGYgPCBmZGFsaXN0Lmxlbmd0aDsgZisrKSB7CiAgICAgICAgICBfbG9vcChmKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIG9uQ2hhbmdlQTE6IGZ1bmN0aW9uIG9uQ2hhbmdlQTEoZXZlbnQpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLmxpc3QgPSBbXTsKICAgICAgdGhpcy5maWxlID0gZXZlbnQudGFyZ2V0LmZpbGVzID8gZXZlbnQudGFyZ2V0LmZpbGVzWzBdIDogbnVsbDsgLy8gdmFyIGMgPSAn4piV77iPW+C4nuC4o+C5ieC4reC4oeC4quC5iOC4h10gQ2FsIHMgQ29mZmVlIGJ5IFByaW1heWEg4LiB4Liy4LmB4Lif4LmB4LiE4Lil4LmA4Lit4LiqIOC5guC4geC5guC4geC5ieC5geC4hOC4peC5gOC4reC4qiDguIrguLLguYTguJfguKLguYHguITguKXguYDguK3guKogMSDguIHguKXguYjguK3guIcgMTAg4LiL4Lit4LiH4LiZ4LmJ4Liz4Lir4LiZ4Lix4LiB4Lij4Lix4LiB4Lip4Liy4Liq4Lix4LiU4Liq4LmI4Lin4LiZ4Lir4Lih4Liy4Lii4LmA4Lil4LiC4Lit4LiiLi/guYPguJrguK3guJnguLjguI3guLLguJUxMzEwMTc2MDIwMDgw4Lil4Lix4LiB4Lip4LiT4Liw4Lic4LiH4LiI4Liz4LiZ4Lin4LiZ4Liq4Li04LiZ4LiE4LmJ4LiyMzky4Liq4LmI4LiH4LiI4Liy4LiB4LmA4LiC4LiV4LiU4Lit4LiZ4LmA4Lih4Li34Lit4LiHLCDguIjguLHguIfguKvguKfguLHguJTguIHguKPguLjguIfguYDguJfguJ7guKHguKvguLLguJnguITguKMnCiAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuZmluZGZkYShjKSkKCiAgICAgIHZhciBmZGFsaXN0ID0gW107CgogICAgICBpZiAodGhpcy5maWxlKSB7CiAgICAgICAgdGhpcy5zdGF0dXMgPSB0cnVlOwogICAgICAgIHJlYWRYbHN4RmlsZShldmVudC50YXJnZXQuZmlsZXNbMF0pLnRoZW4oIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShleGNlbCkgewogICAgICAgICAgICB2YXIgaSwgZGV0YWlsLCBmZGEsIF9sb29wMiwgZjsKCiAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dDIpIHsKICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICBpID0gMTsKCiAgICAgICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICAgICAgICBpZiAoIShpIDwgZXhjZWwubGVuZ3RoKSkgewogICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxNjsKICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coZGF0YVtpXVswXSk7CiAgICAgICAgICAgICAgICAgICAgZGV0YWlsID0gZXhjZWxbaV1bMF07CiAgICAgICAgICAgICAgICAgICAgZmRhID0gX3RoaXMyLmZpbmRmZGEoZGV0YWlsKTsKICAgICAgICAgICAgICAgICAgICBmZGFsaXN0LnB1c2goewogICAgICAgICAgICAgICAgICAgICAgZGV0YWlsOiBkZXRhaWwsCiAgICAgICAgICAgICAgICAgICAgICBmZGE6IGZkYQogICAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgICBpZiAoIShpICsgMSA9PSBleGNlbC5sZW5ndGgpKSB7CiAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICBfbG9vcDIgPSAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2xvb3AyKGYpIHsKICAgICAgICAgICAgICAgICAgICAgIHZhciB1cmwsIGRhdGEsIG9wdGlvbnM7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2xvb3AyJChfY29udGV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsID0gImh0dHBzOi8vdGF3YWlmb3JoZWFsdGgub3JnL2FwaS9vcnlvci9jaGVjay1wcm9kdWN0IjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YSA9IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibnVtYmVyX3NyYyI6IGZkYWxpc3RbZl0uZmRhCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnMgPSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAiUE9TVCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQWNjZXB0OiAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD1VVEYtOCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2godXJsLCBvcHRpb25zKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhkYXRhKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5tZXNzYWdlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmZGFsaXN0W2ZdLnN0YXR1cyA9IDA7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmZGFsaXN0W2ZdLmxpc3QgPSBbXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZkYWxpc3RbZl0uYmcgPSAnYmFja2dyb3VuZC1jb2xvcjojZjliZGJiJzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmRhbGlzdFtmXS5saXN0ID0gZGF0YTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZkYWxpc3RbZl0uc3RhdHVzID0gMTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZkYWxpc3RbZl0uYmcgPSAnYmFja2dyb3VuZC1jb2xvcjojYTNlOWE0JzsgLy8gY29uc29sZS5sb2coZGF0YS5TVEFUVVNfSUQuaW5jbHVkZXMoNykpCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coZGF0YS5TVEFUVVNfSUQuaW5jbHVkZXMoNykpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5jbmNubSA9PSAi4LiE4LiH4Lit4Lii4Li54LmIIikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmZGFsaXN0W2ZdLmljb24gPSAnY29sb3I6IGdyZWVuJzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZkYWxpc3RbZl0uaWNvbiA9ICdjb2xvcjogcmVkJzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmRhbGlzdFtmXS5iZyA9ICdiYWNrZ3JvdW5kLWNvbG9yOiNmOWJkYmInOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gLy8gY29uc29sZS5sb2coZisxLCBmZGFsaXN0Lmxlbmd0aCk7CgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhmKzEsIGZkYWxpc3QubGVuZ3RoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZiArIDEgPT0gZmRhbGlzdC5sZW5ndGgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGZkYWxpc3QpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMyLmxpc3QgPSBmZGFsaXN0OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMyLnN0YXR1cyA9IGZhbHNlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0sIF9sb29wMik7CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgZiA9IDA7CgogICAgICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICAgICAgaWYgKCEoZiA8IGZkYWxpc3QubGVuZ3RoKSkgewogICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMzsKICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5kZWxlZ2F0ZVlpZWxkKF9sb29wMihmKSwgInQwIiwgMTApOwoKICAgICAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgICAgICBmKys7CiAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA4OwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICAgICAgICBpKys7CiAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sIF9jYWxsZWUpOwogICAgICAgICAgfSkpOwoKICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgICAgICAgICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICAgIH07CiAgICAgICAgfSgpKTsKICAgICAgfQoKICAgICAgdGhpcy5maWxlID0gJyc7CiAgICB9LAogICAgZmluZGZkYTogZnVuY3Rpb24gZmluZGZkYShkYXRhKSB7CiAgICAgIHZhciB0ZXh0ID0gWyfguYPguJrguK3guJnguLjguI3guLLguJXguLQnLCAn4LmD4Lia4Lit4LiZ4Li44LiN4Liy4LiVJ107CiAgICAgIHZhciBmaW5kZmRhID0gZGF0YTsKCiAgICAgIGZvciAodmFyIHQgPSAwOyB0IDwgdGV4dC5sZW5ndGg7IHQrKykgewogICAgICAgIGZpbmRmZGEgPSBmaW5kZmRhLnN1YnN0cmluZyhmaW5kZmRhLmluZGV4T2YodGV4dFt0XSkpOwogICAgICB9IC8vIGNvbnNvbGUubG9nKGZpbmRmZGEpOwoKCiAgICAgIGZpbmRmZGEgPSBmaW5kZmRhLnJlcGxhY2VBbGwoIi0iLCAiIik7CiAgICAgIHZhciByZWdleCA9IC9cZCsvZzsKICAgICAgdmFyIG1hdGNoZXMgPSBmaW5kZmRhLm1hdGNoKHJlZ2V4KTsgLy8gY3JlYXRlcyBhcnJheSBmcm9tIG1hdGNoZXMKICAgICAgLy8gY29uc29sZS5sb2cobWF0Y2hlc1swXSk7CgogICAgICByZXR1cm4gbWF0Y2hlc1swXTsKICAgIH0sCiAgICBsb2FkZGF0YTogZnVuY3Rpb24gbG9hZGRhdGEoZmRhKSB7CiAgICAgIHZhciB1cmwgPSAiaHR0cHM6Ly90YXdhaWZvcmhlYWx0aC5vcmcvYXBpL29yeW9yL2NoZWNrLXByb2R1Y3QiOwogICAgICB2YXIgZGF0YSA9IHsKICAgICAgICAibnVtYmVyX3NyYyI6IGZkYQogICAgICB9OwogICAgICB2YXIgb3B0aW9ucyA9IHsKICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICBBY2NlcHQ6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PVVURi04IgogICAgICAgIH0sCiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSkKICAgICAgfTsKICAgICAgZmV0Y2godXJsLCBvcHRpb25zKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTsKICAgICAgICByZXR1cm4gZGF0YTsKICAgICAgfSk7CiAgICB9LAogICAgY2hlY2tmZGE6IGZ1bmN0aW9uIGNoZWNrZmRhKGZkYSkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgd2luZG93Lm9wZW4oIi9kZXRhaWwvIiArIGZkYSwgIl9ibGFuayIgLy8gPC0gVGhpcyBpcyB3aGF0IG1ha2VzIGl0IG9wZW4gaW4gYSBuZXcgd2luZG93LgogICAgICAgICAgICAgICAgKTsKCiAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge30KfTs="},{"version":3,"mappings":"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","names":["name","components","data","type","list","url","file","status","methods","search","MenuService","console","fdalist","detail","fda","f","method","headers","Accept","body","fetch","then","onChangeA1","event","readXlsxFile","i","excel","options","findfda","loaddata","checkfda","window","mounted"],"sourceRoot":"src/components","sources":["Import.vue"],"sourcesContent":["<template>\n  <div class=\"container\" style=\"height: 600px\">\n      <!-- <div class=\"form-group mt-5\">\n    <label for=\"exampleFormControlTextarea1\">URL</label>\n    <textarea v-model=\"url\" class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n  </div>\n  <button @click=\"search()\" type=\"submit\" class=\"mb-3 btn btn-success\">\n      ค้นหา\n    </button> -->\n      <div class=\"form-group mt-5\">\n        <label for=\"exampleFormControlFile1\">นำเข้าไฟล์&nbsp;</label>\n        <input type=\"file\" @change=\"onChangeA1\" class=\"form-control-file\" id=\"exampleFormControlFile1\" />\n      </div>\n      <table class=\"table\" v-if=\"list.length > 0\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">ข้อมูล</th>\n            <th scope=\"col\">FDA</th>\n            <th scope=\"col\"></th>\n            <th scope=\"col\"></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(l, i) in list\" :key=\"i\">\n            <td :style=\"l.bg\">{{ i + 1 }}</td>\n            <td :style=\"l.bg\">{{ l.detail }}</td>\n            <td :style=\"l.bg\">{{ l.fda }}</td>\n            <td :style=\"l.bg\" v-if=\"l.status == 1\">\n              <p class=\"card-text\">สถานะ : {{ l.list.cncnm  }}</p>\n              <p class=\"card-text\">ประเภทผลิตภัณฑ์ : {{ l.list.typepro }}</p>\n              <p class=\"card-text\">ใบสำคัญ/เลขที่อนุญาต : {{ l.list.lcnno }}</p>\n              <p class=\"card-text\">ชื่อผลิตภัณฑ์ (TH) : {{ l.list.productha }}</p>\n              <p class=\"card-text\">ชื่อผลิตภัณฑ์ (EN) : {{ l.list.produceng }}</p>\n              <p class=\"card-text\">ชื่อผู้รับอนุญาต : {{ l.list.licen }}</p>\n              <p class=\"card-text\">สถานที่ผลิต : {{ l.list.Addr }}</p>\n              <p class=\"card-text\">Newcode : {{ l.list.Newcode }}</p>\n            </td>\n            <td :style=\"l.bg\" v-else> ไม่พบข้อมูล</td>\n            <td :style=\"l.bg\">\n              <i class=\"fa fa-circle\" :style=\"l.icon\" aria-hidden=\"true\"></i>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <!-- <div v-if=\"status\" >\n<h3 style=\"text-align:center\">กรุณารอสักครู่ ระบบกำลังโหลดข้อมูล</h3>\n      </div> -->\n  </div>\n</template>\n\n<script>\nimport readXlsxFile from \"read-excel-file\";\n// import moment from 'moment'\n// import axios from \"axios\";\nimport MenuService from '../services/MenuService.js'\nexport default {\n  name: \"App\",\n  components: {},\n  data() {\n    return {\n      type: 0,\n      list: [],\n      url:'',\n      file:'',\n      status:false\n    };\n  },\n  methods: {\n    search(){\n      this.list = []\n      MenuService.getproduct(this.url).then().then((res)=>{\n        console.log(res.data);\n\n        var fdalist = []\n        var detail = res.data\n        // var detail = 'ข้อมูลจำเพาะของสินค้าหมวดหมู่Shopeeกลุ่มผลิตภัณฑ์เพื่อสุขภาพอาหารเสริมเพื่อความงามผิวยี่ห้อGlobal White(โกลบอลไวท์)หน้าที่ของอาหารเสริมสำหรับความงามคอลลาเจน, ผม ผิว และเล็บหมายเลขใบอนุญาต/อย.70-1-27160-5-0268จำนวนสินค้า258ส่งจากจังหวัดปทุมธานีรายละเอียดสินค้าหมายเลขใบอนุญาต/อย.🌼70-1-27160-5-0268อายุการเก็บรักษา 24 เดือน'\n            var fda = this.findfda(detail)\n\n            fdalist.push({\n              detail: detail,\n              fda: fda\n            })\n            for (let f = 0; f < fdalist.length; f++) {\n\nconst url = \"https://tawaiforhealth.org/api/oryor/check-product\";\nconst data = { \"number_src\": fdalist[f].fda };\n\nconst options = {\n  method: \"POST\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json;charset=UTF-8\",\n  },\n  body: JSON.stringify(data),\n};\n\nfetch(url, options)\n  .then((response) => response.json())\n  .then((data) => {\n    // console.log(data);\n    if (data.message) {\n      fdalist[f].status = 0\n      fdalist[f].list = []\n      fdalist[f].bg = 'background-color:#f9bdbb'\n    } else {\n      fdalist[f].list = data\n      fdalist[f].status = 1\n      fdalist[f].bg = 'background-color:#a3e9a4'\n      // console.log(data.STATUS_ID.includes(7))\n      if (data.cncnm == \"คงอยู่\") {\n      fdalist[f].icon = 'color: green'\n        \n      }else{\n      fdalist[f].icon = 'color: red'\n      fdalist[f].bg = 'background-color:#f9bdbb'\n      }\n    }\n    \n    // console.log(f+1, fdalist.length);\n    if (f+1 == fdalist.length) {\n console.log(fdalist); \n this.list = fdalist\n \n}\n  });\n\n  \n}\n      })\n    },\n     onChangeA1(event) {\n      this.list = []\n      this.file = event.target.files ? event.target.files[0] : null;\n      // var c = '☕️[พร้อมส่ง] Cal s Coffee by Primaya กาแฟแคลเอส โกโก้แคลเอส ชาไทยแคลเอส 1 กล่อง 10 ซองน้ำหนักรักษาสัดส่วนหมายเลขอย./ใบอนุญาต1310176020080ลักษณะผงจำนวนสินค้า392ส่งจากเขตดอนเมือง, จังหวัดกรุงเทพมหานคร'\n      // console.log(this.findfda(c))\n      var fdalist = []\n      if (this.file) {\n        this.status = true\n        readXlsxFile(event.target.files[0]).then(async (excel) => {\n          // console.log(excel);\n          for (let i = 1; i < excel.length; i++) {\n            // console.log(data[i][0]);\n            var detail = excel[i][0]\n            var fda = this.findfda(detail)\n\n            fdalist.push({\n              detail: detail,\n              fda: fda\n            })\n            if (i + 1 == excel.length) {\n              // console.log(fdalist);\n              for (let f = 0; f < fdalist.length; f++) {\n\n                const url = \"https://tawaiforhealth.org/api/oryor/check-product\";\n                const data = { \"number_src\": fdalist[f].fda };\n\n                const options = {\n                  method: \"POST\",\n                  headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json;charset=UTF-8\",\n                  },\n                  body: JSON.stringify(data),\n                };\n\n                await fetch(url, options)\n                  .then((response) => response.json())\n                  .then((data) => {\n                    // console.log(data);\n                    if (data.message) {\n                      fdalist[f].status = 0\n                      fdalist[f].list = []\n                      fdalist[f].bg = 'background-color:#f9bdbb'\n                    } else {\n                      fdalist[f].list = data\n                      fdalist[f].status = 1\n                      fdalist[f].bg = 'background-color:#a3e9a4'\n                      // console.log(data.STATUS_ID.includes(7))\n                      if (data.cncnm == \"คงอยู่\") {\n                      fdalist[f].icon = 'color: green'\n                        \n                      }else{\n                      fdalist[f].icon = 'color: red'\n                      fdalist[f].bg = 'background-color:#f9bdbb'\n                      }\n                    }\n                    \n                    // console.log(f+1, fdalist.length);\n                    if (f+1 == fdalist.length) {\n                 console.log(fdalist); \n                 this.list = fdalist\n                 this.status = false\n                }\n                  });\n\n                  \n              }\n            }\n          }\n        });\n      }\n      this.file = ''\n    },\n    findfda(data) {\n      var text = ['ใบอนุญาติ', 'ใบอนุญาต']\n      var findfda = data\n      for (let t = 0; t < text.length; t++) {\n        findfda = findfda.substring(findfda.indexOf(text[t]));\n\n      }\n      // console.log(findfda);\n      findfda = findfda.replaceAll(\"-\", \"\");\n      var regex = /\\d+/g;\n      var matches = findfda.match(regex);  // creates array from matches\n      // console.log(matches[0]);\n      return matches[0]\n    },\n    loaddata(fda) {\n      const url = \"https://tawaiforhealth.org/api/oryor/check-product\";\n      const data = { \"number_src\": fda };\n\n      const options = {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json;charset=UTF-8\",\n        },\n        body: JSON.stringify(data),\n      };\n\n      fetch(url, options)\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data);\n          return data\n        });\n    },\n    async checkfda(fda) {\n      window.open(\n        \"/detail/\" + fda,\n        \"_blank\" // <- This is what makes it open in a new window.\n      );\n    }\n  },\n  mounted() {\n  },\n};\n</script>\n\n<style>\nhtml,\nbody {\n  height: 100%;\n  margin: 0px;\n}</style>\n"]}]}