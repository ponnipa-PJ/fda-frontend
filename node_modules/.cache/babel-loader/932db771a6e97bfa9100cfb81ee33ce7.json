{"remainingRequest":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/thread-loader/dist/cjs.js!/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/babel-loader/lib/index.js!/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/eslint-loader/index.js??ref--14-0!/Users/ponnipa/Documents/GitHub/fda-frontend/src/services/MapRuleBasedService.js","dependencies":[{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/src/services/MapRuleBasedService.js","mtime":1694145366831},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/babel.config.js","mtime":1677654957527},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1687492401267},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/thread-loader/dist/cjs.js","mtime":1687492401222},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/babel-loader/lib/index.js","mtime":1687492401655},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/eslint-loader/index.js","mtime":1687492401350}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvcG9ubmlwYS9Eb2N1bWVudHMvR2l0SHViL2ZkYS1mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2suanMiOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9Vc2Vycy9wb25uaXBhL0RvY3VtZW50cy9HaXRIdWIvZmRhLWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcy5qcyI7CmltcG9ydCBodHRwIGZyb20gIi4uL2h0dHAtY29tbW9uIjsKCnZhciBNYXBSdWxlQmFzZWRTZXJ2aWNlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBNYXBSdWxlQmFzZWRTZXJ2aWNlKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE1hcFJ1bGVCYXNlZFNlcnZpY2UpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKE1hcFJ1bGVCYXNlZFNlcnZpY2UsIFt7CiAgICBrZXk6ICJnZXRtYXBfcnVsZV9iYXNlZHMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldG1hcF9ydWxlX2Jhc2VkcygpIHsKICAgICAgcmV0dXJuIGh0dHAuZ2V0KCcvbWFwX3J1bGVfYmFzZWQnKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRtYXBfcnVsZV9iYXNlZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0bWFwX3J1bGVfYmFzZWQoaWQpIHsKICAgICAgcmV0dXJuIGh0dHAuZ2V0KCcvbWFwX3J1bGVfYmFzZWQvJyArIGlkKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjcmVhdGVtYXBfcnVsZV9iYXNlZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlbWFwX3J1bGVfYmFzZWQoZGF0YSkgewogICAgICByZXR1cm4gaHR0cC5wb3N0KCcvbWFwX3J1bGVfYmFzZWQnLCBkYXRhKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJ1cGRhdGVhZHZlcnRpc2UiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZWFkdmVydGlzZShpZCwgZGF0YSkgewogICAgICByZXR1cm4gaHR0cC5wdXQoIi9hZHZlcnRpc2UvIi5jb25jYXQoaWQpLCBkYXRhKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJ1cGRhdGVtYXBfcnVsZV9iYXNlZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlbWFwX3J1bGVfYmFzZWQoaWQsIGRhdGEpIHsKICAgICAgcmV0dXJuIGh0dHAucHV0KCIvbWFwX3J1bGVfYmFzZWQvIi5jb25jYXQoaWQpLCBkYXRhKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJkZWxldGVtYXBfcnVsZV9iYXNlZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZGVsZXRlbWFwX3J1bGVfYmFzZWQoaWQsIGRhdGEpIHsKICAgICAgcmV0dXJuIGh0dHAucHV0KCIvbWFwX3J1bGVfYmFzZWQvdXBkYXRlc3RhdHVzLyIuY29uY2F0KGlkKSwgZGF0YSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gTWFwUnVsZUJhc2VkU2VydmljZTsKfSgpOwoKZXhwb3J0IGRlZmF1bHQgbmV3IE1hcFJ1bGVCYXNlZFNlcnZpY2UoKTs="},{"version":3,"sources":["/Users/ponnipa/Documents/GitHub/fda-frontend/src/services/MapRuleBasedService.js"],"names":["http","MapRuleBasedService","get","id","data","post","put"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,gBAAjB;;IAEMC,mB;;;;;;;WACJ,8BAAqB;AACnB,aAAOD,IAAI,CAACE,GAAL,CAAS,iBAAT,CAAP;AACD;;;WACD,2BAAkBC,EAAlB,EAAsB;AACpB,aAAOH,IAAI,CAACE,GAAL,CAAS,qBAAmBC,EAA5B,CAAP;AACD;;;WACD,8BAAqBC,IAArB,EAA2B;AACzB,aAAOJ,IAAI,CAACK,IAAL,CAAU,iBAAV,EAA6BD,IAA7B,CAAP;AACD;;;WACD,yBAAgBD,EAAhB,EAAmBC,IAAnB,EAAyB;AACvB,aAAOJ,IAAI,CAACM,GAAL,sBAAuBH,EAAvB,GAA6BC,IAA7B,CAAP;AACD;;;WACD,8BAAqBD,EAArB,EAAwBC,IAAxB,EAA8B;AAC5B,aAAOJ,IAAI,CAACM,GAAL,2BAA4BH,EAA5B,GAAkCC,IAAlC,CAAP;AACD;;;WACD,8BAAqBD,EAArB,EAAwBC,IAAxB,EAA8B;AAC5B,aAAOJ,IAAI,CAACM,GAAL,wCAAyCH,EAAzC,GAA+CC,IAA/C,CAAP;AACD;;;;;;AAGH,eAAe,IAAIH,mBAAJ,EAAf","sourcesContent":["import http from \"../http-common\";\n\nclass MapRuleBasedService {\n  getmap_rule_baseds() {\n    return http.get('/map_rule_based');\n  }\n  getmap_rule_based(id) {\n    return http.get('/map_rule_based/'+id);\n  }\n  createmap_rule_based(data) {\n    return http.post('/map_rule_based', data);\n  } \n  updateadvertise(id,data) {\n    return http.put(`/advertise/${id}`, data);\n  }\n  updatemap_rule_based(id,data) {\n    return http.put(`/map_rule_based/${id}`, data);\n  }\n  deletemap_rule_based(id,data) {\n    return http.put(`/map_rule_based/updatestatus/${id}`, data);\n  }\n}\n\nexport default new MapRuleBasedService();\n\n"]}]}