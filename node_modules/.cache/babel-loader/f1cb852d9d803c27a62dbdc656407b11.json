{"remainingRequest":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/babel-loader/lib/index.js!/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/VerifyLists.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/VerifyLists.vue","mtime":1677654957537},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/babel.config.js","mtime":1677654957527},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1687492401267},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/babel-loader/lib/index.js","mtime":1687492401655},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1687492401267},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js","mtime":1687492401738}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoHA,4E,CACA;;AAEA;AACAA,oBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,cADA;AAEAC,0BAFA;AAGAC,YAHA;AAIAC,cAJA;AAKAC,aALA;AAMAC,eANA;AAOAC,YAPA;AAQAC,kBARA;AASAC,kBATA;AAUAC,kBAVA;AAWAC,qBAXA;AAYAC,mBAZA;AAaAC,iBAbA;AAcAC,iBAdA;AAeAC,mBAfA;AAgBAC,eAhBA;AAiBAC,eAjBA;AAkBAC,iBAlBA;AAmBAC,cAnBA;AAoBAC;AApBA;AAsBA,GAzBA;AA0BAC;AACAC;AADA,GA1BA;AA6BAC,cA7BA;AA8BAC,SA9BA,qBA8BA;AACA;AACA,uDAFA,CAGA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA,KAjBA,CAkBA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA,GAvDA;AAwDAC;AACAC,oBADA,4BACAC,KADA,EACA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA,OAFA,MAEA;AACA;AACA,OAFA,MAEA;AACA;AACA,OAFA,MAEA;AACA;AACA,OAFA,MAEA;AACA;AACA,OAFA,MAEA;AACA;AACA,OAFA,MAEA;AACA;AACA,OAFA,MAEA;AACA;AACA,OAFA,MAEA;AACA;AACA,OAFA,MAEA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA,KA3BA;AA4BAC,WA5BA,mBA4BAC,KA5BA,EA4BA;AACA;AACA;AACA,KA/BA;AAgCAC,eAhCA,uBAgCA7B,IAhCA,EAgCA0B,KAhCA,EAgCA;AACAI;AACA;AACA;AACA;;AACA;AACA;AACAC;AACA,SAFA,MAEA;AACAC;AACA,SALA,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC;AACAC,0CADA;AAEAC,sCAFA;AAGAC,sCAHA;AAIAC;AAJA;AAMA,OA3CA,CA4CA;AACA;;;AACA;AACA,KA/EA;AAgFAC,YAhFA,sBAgFA;AAAA;;AACA;AACA;AACA;;AACA;AACAC;AACA;;AAEA;AACAC;AACA;;AAEA;AACAC;AACA;;AACAX;AACAA;AACAY,8CACA,UADA,EAEAH,OAFA,EAGA,WAHA,EAIAI,IAJA,CAIA;AACA;AACA,kEAFA,CAGA;;AACA;AACA,OATA;AAUAD,8CACA,UADA,EAEAF,OAFA,EAGA,WAHA,EAIAG,IAJA,CAIA;AACA;AACA,OANA;AAOAD,8CACA,YADA,EAEAD,SAFA,EAGA,WAHA,EAIAE,IAJA,CAIA;AACA;AACA,OANA;AAOA,KAzHA;AA0HAC,YA1HA,oBA0HAlB,KA1HA,EA0HA;AAAA;;AACA;AACA;AACA;AAEA;;AACA;AACAmB;AACA;;AACA;AACAH,8CACA,UADA,EAEAG,IAFA,EAGA,WAHA,EAIAF,IAJA,CAIA;AACA;AACA,OANA;AAOA,KA3IA;AA4IAG,qBA5IA,6BA4IAC,SA5IA,EA4IA;AACA;AACA;AACA;AACA;AACA;AAEA,oDANA,CAMA;AACA;;AACA;AACA;AACA;AAvJA;AAxDA","names":["name","data","list","itemPreviewImage","id","item","img","image","no","jancount","febcount","marcount","yearcurrent","monthname","onename","twoname","threename","oneno","twono","threeno","count","sortid","props","msg","computed","mounted","methods","convertnamemonth","month","orderby","event","mergenottax","console","close","open","listdata","excise_name","excise_id","excise_no","industrial_district","getcount","yearone","yeartwo","yearthree","MergeLiquorReportService","then","loaddata","year","convertdatetothai","datetimes"],"sourceRoot":"src/components","sources":["VerifyLists.vue"],"sourcesContent":["<template>\n  <div class=\"hello container mt-5\">\n    <table class=\"table table-bordered\">\n      <tbody>\n        <tr>\n          <td colspan=\"3\" style=\"text-align: center\">\n            จำนวนโรงอุตสาหกรรมที่ไม่ชำระภาษี\n          </td>\n        </tr>\n        <tr>\n          <td style=\"text-align: center\"></td>\n          <td style=\"text-align: center\"></td>\n          <td style=\"text-align: center\"></td>\n        </tr>\n        <tr>\n          <td style=\"text-align: center\">{{ convertnamemonth(threeno) }}</td>\n          <td style=\"text-align: center\">{{ convertnamemonth(twono) }}</td>\n          <td style=\"text-align: center\">{{ convertnamemonth(oneno) }}</td>\n        </tr>\n        <tr>\n          <td @click=\"loaddata(threeno)\" style=\"text-align: center\">\n            <a href=\"#\">{{ marcount.length }} </a>\n          </td>\n          <td @click=\"loaddata(twono)\" style=\"text-align: center\">\n            <a href=\"#\">{{ febcount.length }}</a>\n          </td>\n          <td @click=\"loaddata(oneno)\" style=\"text-align: center\">\n            <a href=\"#\">{{ jancount.length }}</a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <h5 style=\"text-align: center\" class=\"mt-5\">\n      รายชื่อโรงอุตสาหกรรมที่ไม่ได้ชำระภาษี เดือน{{ monthname }}\n      <span v-if=\"monthname != 'ธันวาคม'\">{{ yearcurrent }}</span>\n       <span v-else>{{ yearcurrent-1 }}</span>\n    </h5>\n    <div class=\"row\">\n      <!-- <div class=\"col-9\"></div> -->\n      <!-- <div class=\"col-3\" align=\"right\">\n        <div class=\"form-group row\">\n          <label for=\"inputEmail3\" class=\"col-sm-6 col-form-label\"\n            >Order By</label\n          >\n          <div class=\"col-sm-6\">\n            <select\n              class=\"custom-select\"\n              id=\"inputGroupSelect01\"\n              v-model=\"sortid\"\n              @change=\"orderby\"\n            >\n              <option value=\"0\">อำเภอ</option>\n              <option value=\"2\">เลขทะเบียนสรรพสามิต</option>\n            </select>\n          </div>\n        </div>\n      </div> -->\n    </div>\n    <table class=\"table mb-5\">\n      <thead>\n        <tr>\n          <th scope=\"col\" class=\"table-secondary\">ลำดับที่</th>\n          <th scope=\"col\" class=\"table-secondary\">เลขทะเบียนสรรพสามิต</th>\n          <th scope=\"col\" class=\"table-secondary\">รหัสโรงงาน</th>\n          <th scope=\"col\" class=\"table-secondary\">ชื่อโรงอุตสาหกรรม</th>\n          <th scope=\"col\" class=\"table-secondary\">อำเภอ</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(l, i) in list\" :key=\"l.id\">\n          <td>\n            {{ i + 1 }}\n          </td>\n          <td>\n            <a\n              :href=\"'/map/' + l.excise_no + '/map'\"\n              target=\"_blank\"\n              style=\"color: black; text-decoration: none\"\n            >\n              {{ l.excise_id }}\n            </a>\n          </td>\n          <td>\n            <a\n              :href=\"'/map/' + l.excise_no + '/map'\"\n              target=\"_blank\"\n              style=\"color: black; text-decoration: none\"\n            >\n              {{ l.excise_no }}\n            </a>\n          </td>\n          <td>\n            <a\n              :href=\"'/map/' + l.excise_no + '/map'\"\n              target=\"_blank\"\n              style=\"color: black; text-decoration: none\"\n            >\n              {{ l.excise_name }}\n            </a>\n          </td>\n          <td>\n            <a\n              :href=\"'/map/' + l.excise_no + '/map'\"\n              target=\"_blank\"\n              style=\"color: black; text-decoration: none\"\n            >\n              {{ l.industrial_district }}\n            </a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport MergeLiquorReportService from \"../services/MergeLiquorReportService\";\n// import ReportService from \"../services/ReportService\";\n\nexport default {\n  name: \"HelloWorld\",\n  data() {\n    return {\n      list: [],\n      itemPreviewImage: \"\",\n      id: \"\",\n      item: [],\n      img: \"\",\n      image: \"\",\n      no: \"\",\n      jancount: [],\n      febcount: [],\n      marcount: [],\n      yearcurrent: \"\",\n      monthname: \"\",\n      onename: \"\",\n      twoname: \"\",\n      threename: \"\",\n      oneno: \"\",\n      twono: \"\",\n      threeno: \"\",\n      count: 1,\n      sortid: 0,\n    };\n  },\n  props: {\n    msg: String,\n  },\n  computed: {},\n  mounted() {\n    const d = new Date();\n    this.yearcurrent = parseInt(d.getFullYear() + 543);\n    // var oneDate = new Date(d.setMonth(d.getMonth() + 1));\n    // var twoDate = new Date(d.setMonth(d.getMonth() - 1));\n    // var threeDate = new Date(d.setMonth(d.getMonth() - 1));\n    this.oneno = parseInt(d.getMonth()+1);\n    this.twono = parseInt(d.getMonth()+1-1);\n    this.threeno = parseInt(d.getMonth()+1-2);\n    if(this.oneno == 0){\nthis.oneno = 12\n    }\n    if(this.twono == 0){\nthis.twono = 12\n    }\n    if(this.threeno == 0){\nthis.threeno = 12\n    }\n    // console.log(d)\n    // console.log(this.oneno)\n    // console.log(this.twono)\n    // console.log(this.threeno)\n    this.count = this.oneno;\n    this.monthname = this.convertnamemonth(this.oneno);\n    this.getcount();\n  },\n  methods: {\n    convertnamemonth(month) {\n      if (month == 1) {\n        return \"มกราคม\";\n      } else if (month == 2) {\n        return \"กุมภาพันธ์\";\n      } else if (month == 3) {\n        return \"มีนาคม\";\n      } else if (month == 4) {\n        return \"เมษายน\";\n      } else if (month == 5) {\n        return \"พฤษภาคม\";\n      } else if (month == 6) {\n        return \"มิถุนายน\";\n      } else if (month == 7) {\n        return \"กรกฎาคม\";\n      } else if (month == 8) {\n        return \"สิงหาคม\";\n      } else if (month == 9) {\n        return \"กันยายน\";\n      } else if (month == 10) {\n        return \"ตุลาคม\";\n      } else if (month == 11) {\n        return \"พฤศจิกายน\";\n      } else if (month == 12) {\n        return \"ธันวาคม\";\n      }\n    },\n    orderby(event) {\n      this.sortid = event.target.value;\n      this.loaddata(this.count);\n    },\n    mergenottax(list, month) {\n      console.log(month);\n      var listdata = [];\n      var close = 0;\n      var open = 0;\n      for (let j = 0; j < list.length; j++) {\n        if (list[j].registration_status == \"ปิดกิจการ\") {\n          close = close + 1;\n        } else {\n          open = open + 1;\n        }\n        // if (list[j].registration_status == \"ปิดกิจการ\") {\n        //   // console.log(list[j].registration_status);\n        //   // console.log(list[j].status_date);\n        //   var m = new Date(list[j].status_date);\n        //   m.setDate(m.getDate() - 1);\n        //   // console.log(m.getFullYear());\n        //   if (m.getFullYear() == this.yearcurrent) {\n        //     // console.log(m.getMonth() + 1 , month);\n        //     if (m.getMonth() + 1 == month) {\n        //       // console.log(list[j].status_date);\n        //       listdata.push({\n        //         excise_name: list[j].excise_name,\n        //         excise_id: list[j].excise_id,\n        //         excise_no: list[j].excise_no,\n        //         industrial_district: list[j].industrial_district,\n        //       });\n        //     }\n        //   }\n        // } else if (list[j].registration_status == \"ดำเนินกิจการ\") {\n        //   listdata.push({\n        //     excise_name: list[j].excise_name,\n        //     excise_id: list[j].excise_id,\n        //     excise_no: list[j].excise_no,\n        //     industrial_district: list[j].industrial_district,\n        //   });\n        // }\n        listdata.push({\n            excise_name: list[j].excise_name,\n            excise_id: list[j].excise_id,\n            excise_no: list[j].excise_no,\n            industrial_district: list[j].industrial_district,\n          });\n      }\n      // console.log(close, open);\n      // console.log(listdata)\n      return listdata;\n    },\n    getcount() {\n      var yearone = this.yearcurrent\n      var yeartwo = this.yearcurrent\n      var yearthree = this.yearcurrent\n      if (this.oneno == 12) {\n        yearone = this.yearcurrent-1\n      }\n\n      if (this.twono == 12) {\n        yeartwo = this.yearcurrent-1\n      }\n\n      if (this.threeno == 12) {\n        yearthree = this.yearcurrent-1\n      }\n      console.log(this.oneno, this.twono, this.threeno);\n      console.log(yearone, yeartwo, yearthree);\n      MergeLiquorReportService.getCountNotTax(\n        this.oneno,\n        yearone,\n        this.sortid\n      ).then((res) => {\n        // console.log(res.data);\n        this.jancount = this.mergenottax(res.data, this.oneno);\n        // console.log(this.jancount);\n        this.list = this.jancount;\n      });\n      MergeLiquorReportService.getCountNotTax(\n        this.twono,\n        yeartwo,\n        this.sortid\n      ).then((res) => {\n        this.febcount = this.mergenottax(res.data, this.twono);\n      });\n      MergeLiquorReportService.getCountNotTax(\n        this.threeno,\n        yearthree,\n        this.sortid\n      ).then((res) => {\n        this.marcount = this.mergenottax(res.data, this.threeno);\n      });\n    },\n    loaddata(month) {\n      // console.log(month);\n      // console.log(this.sortid);\n      this.count = month;\n      \n      var year = this.yearcurrent\n      if (this.count == 12) {\n        year = this.yearcurrent-1\n      }\n      this.monthname = this.convertnamemonth(month);\n      MergeLiquorReportService.getCountNotTax(\n        this.count,\n        year,\n        this.sortid\n      ).then((res) => {\n        this.list = this.mergenottax(res.data, this.count);\n      });\n    },\n    convertdatetothai(datetimes) {\n      if (datetimes) {\n        var d = new Date(datetimes);\n        var mm = d.getMonth() + 1;\n        var dd = d.getDate();\n        var yy = d.getFullYear();\n\n        var myDateString = dd + \"/\" + mm + \"/\" + yy; //(US)\n        // console.log(myDateString);\n        return myDateString;\n      }\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}