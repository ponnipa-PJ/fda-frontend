{"remainingRequest":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/babel-loader/lib/index.js!/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/test.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/test.vue","mtime":1704262800786},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/babel.config.js","mtime":1677654957527},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1687492401267},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/babel-loader/lib/index.js","mtime":1687492401655},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1687492401267},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js","mtime":1687492401738}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["first","last","previous","next","name","components","data","type","list","url","file","status","urlPath","title","pro_id","category","pageOfItems","customLabels","testno","alltest","listtest","truepos","falsepos","trueneg","falseneg","statustest","recall","precision","accuracy","methods","getCountryByCode","code","gettp","getstatuscheck","t","f","text","gettest","ProductsService","l","selectpro","id","MapRuleBasedService","test","getMax","arr","prop","max","getAllMaxArray","value","array","tokendata","arrtest","map","keyword_id","maxvalue","i","bestdata","best","sentence","rule_based_name","axios","get","LinkService","then","rulebased","count_rulebased","sentence_rulebase","rule_based_id","map_rule_based_id","onChangePage","window","deleteScopus","console","document","alert","save","KeywordService","DictService","RuleBasedService","token","tokenize","updatetoken","getcategory","getid","mounted"],"sourceRoot":"src/components","sources":["test.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <!-- <div style=\"text-align:right\"> <button @click=\"getid(0)\"\n          data-bs-toggle=\"modal\"\n          data-bs-target=\"#AddScopus\"\n           type=\"submit\" class=\"mb-3 btn btn-success\">\n      <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\n    </button></div> -->\n\n    \n    <div class=\"form-group\">\n      <label for=\"exampleInputEmail1\">จำนวนการเทส (%)</label>\n      <input\n        type=\"number\"\n        class=\"form-control\"\n        id=\"exampleInputEmail1\"\n        min=\"10\"\n        max=\"100\"\n        v-model=\"testno\"\n      />\n    </div>\n    <button type=\"submit\" class=\"btn btn-success btn-sm\" @click=\"gettest()\">\n      เทส\n    </button>\n    <table class=\"table table-bordered mt-5\" v-if=\"statustest\">\n      <thead>\n        <tr>\n          <th scope=\"col\">{{ alltest }}</th>\n          <th scope=\"col\">เกินจริง</th>\n          <th scope=\"col\">ไม่เกินจริง</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th scope=\"row\">เกินจริง</th>\n          <td style=\"text-align:center\">{{truepos}}</td>\n          <td style=\"text-align:center\">{{trueneg}}</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">ไม่เกินจริง</th>\n          <td style=\"text-align:center\">{{falsepos}}</td>\n          <td style=\"text-align:center\">{{ falseneg }}</td>\n        </tr>\n      </tbody>\n    </table>\n    <table class=\"table table-bordered\" v-if=\"statustest\">\n      <thead>\n        <tr>\n          <th scope=\"col\"></th>\n          <th scope=\"col\">เกินจริง</th>\n          <th scope=\"col\">ไม่เกินจริง</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th scope=\"row\">Recall</th>\n          <td style=\"text-align:center\">{{recall.true}}%</td>\n          <td style=\"text-align:center\">{{recall.false}}% </td>\n        </tr>\n        <tr>\n          <th scope=\"row\">Precision</th>\n          <td style=\"text-align:center\">{{precision.true}}%</td>\n          <td style=\"text-align:center\">{{precision.false}}%</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">Accuracy</th>\n          <td style=\"text-align:center\" colspan=\"2\">{{accuracy}}%</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- <div v-if=\"statustest\">\n    Recall <br>\n    เกินจริง : {{recall.true}} % <br>\n    ไม่เกินจริง : {{recall.false}} % <br>\n    Precision  <br>\n    เกินจริง : {{precision.true}} %<br>\n    ไม่เกินจริง : {{precision.false}} %<br>\n    Accuracy {{accuracy}} %\n  </div> -->\n    <div class=\"mb-5\" v-if=\"statustest\">\n      <table\n        class=\"table table-striped table-bordered\"\n        style=\"background-color: #4472c4\"\n        v-if=\"listtest.length > 0\"\n        width=\"100%\"\n      >\n        <thead>\n          <tr>\n            <th scope=\"col\" style=\"text-align: center\">ลำดับของเว็บไซต์</th>\n            <th scope=\"col\">ประเภทผลิตภัณฑ์</th>\n            <th scope=\"col\">รายละเอียดสินค้า</th>\n            <th scope=\"col\">รูปประโยค</th>\n            <th scope=\"col\" style=\"text-align: center\"></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(l, i) in listtest\" :key=\"i + 1\">\n            <td style=\"width: 20%\">{{ l.url }}</td>\n            <td style=\"width: 20%\">{{ l.typename }}</td>\n            <td style=\"width: 40%\">\n              <img :src=\"l.img_path\" style=\"width: 50%\" /><br />\n              {{ l.sentence }}\n            </td>\n            <td style=\"width: 5%\"><span v-html=\"l.sen\"></span> </td>\n            <td style=\"width: 5%\">{{ l.rulename }}</td>\n            <!-- <td style=\"text-align: center\">\n              <a :href=\"'/addproducttoken?id=' + l.id\">\n                <button\n                  type=\"button\"\n                  style=\"color: white\"\n                  class=\"btn btn-warning\"\n                >\n                  <i class=\"fa fa-edit\"></i>\n                </button>\n              </a>\n              &nbsp;\n              <a :href=\"'/product/' + l.id\">\n                <button\n                  type=\"button\"\n                  style=\"background-color: #4472c4; color: white\"\n                  class=\"btn\"\n                >\n                  เทรน\n                </button>\n              </a>\n            </td> -->\n          </tr>\n        </tbody>\n      </table>\n      <div v-if=\"list.length == 0\" class=\"mt-5\">\n        <h3 style=\"text-align: center\">ไม่พบข้อมูล</h3>\n      </div>\n    </div>\n    <!-- Modal -->\n    <div\n      class=\"modal fade\"\n      id=\"AddScopus\"\n      tabindex=\"-1\"\n      aria-labelledby=\"exampleModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">{{ title }}</h5>\n          </div>\n          <div class=\"modal-body\">\n            <form>\n              <div class=\"card-body mt-3\">\n                <div class=\"form-group mt-3\">\n                  <label>ข้อความ</label>\n                  <input\n                    v-model=\"data.name\"\n                    type=\"text\"\n                    min=\"1\"\n                    class=\"form-control form-control-sm\"\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n          <div class=\"modal-footer mt-3\">\n            <button type=\"button\" class=\"btn btn-success\" @click=\"save()\">\n              บันทึก\n            </button>\n            <button\n              id=\"closedcategory\"\n              type=\"button\"\n              class=\"btn btn-secondary\"\n              data-bs-dismiss=\"modal\"\n            >\n              ปิด\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Modal -->\n    <div\n      class=\"modal fade\"\n      id=\"DeleteScopus\"\n      tabindex=\"-1\"\n      aria-labelledby=\"exampleModalLabel\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">ยืนยันการลบหมวด</h5>\n          </div>\n\n          <div class=\"modal-footer mt-3\">\n            <button\n              type=\"button\"\n              class=\"btn btn-success\"\n              @click=\"deleteScopus()\"\n            >\n              ยืนยัน\n            </button>\n            <button\n              id=\"closedDeleteScopus\"\n              type=\"button\"\n              class=\"btn btn-secondary\"\n              data-bs-dismiss=\"modal\"\n            >\n              ยกเลิก\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport KeywordService from \"../services/KeywordService\";\nimport axios from \"axios\";\nimport RuleBasedService from \"../services/RuleBasedService\";\nimport DictService from \"../services/DictService\";\nimport MapRuleBasedService from \"../services/MapRuleBasedService\";\nimport LinkService from \"../services/LinkService\";\nimport ProductsService from \"../services/ProductsService\";\n\nconst customLabels = {\n  first: \"<<\",\n  last: \">>\",\n  previous: \"<\",\n  next: \">\",\n};\n\nexport default {\n  name: \"App\",\n  components: {},\n  data() {\n    return {\n      type: 0,\n      list: [],\n      url: \"\",\n      file: \"\",\n      status: false,\n      urlPath: \"\",\n      title: \"\",\n      data: {},\n      pro_id: 0,\n      category: [],\n      pageOfItems: [],\n      customLabels,\n      testno: 0,\n      alltest: 0,\n      listtest: [],\n      truepos:0,\n      falsepos:0,\n      trueneg:0,\n      falseneg:0,\n      statustest:false,\n      recall:{},\n      precision:{},\n      accuracy:0\n    };\n  },\n  methods: {\n    getCountryByCode(code, data) {\n      return data.filter(function (data) {\n        return data.type_rulebasedId == code;\n      });\n    },\n    gettp(){\n      var positive = this.getCountryByCode(1, this.listtest)\n      var negative = this.getCountryByCode(2, this.listtest)\n      this.truepos = 0\n      this.falsepos = 0\n      this.trueneg = 0\n      this.falseneg = 0\n      for (let t = 0; t < positive.length; t++) {\n        if (positive[t].statustestid == 1) {\n          this.truepos = this.truepos+1\n        }else{\n          this.falsepos= this.falsepos+1\n        }\n      }\n      for (let n = 0; n < negative.length; n++) {\n        if (negative[n].statustestid == 2) {\n          this.falseneg = this.falseneg+1\n        }else{\n          this.trueneg= this.trueneg+1\n        }\n      }\n      // this.truepos = 43\n      // this.falsepos = 7\n      // this.trueneg = 3\n      // this.falseneg = 47\n      this.recall.true = ((this.truepos/(this.truepos+this.falsepos))*100).toFixed(2)\n      this.recall.false = ((this.falseneg/(this.falseneg+this.trueneg))*100).toFixed(2)\n      this.precision.true = ((this.truepos/(this.truepos+this.trueneg))*100).toFixed(2)\n      this.precision.false = ((this.falseneg/(this.falseneg+this.falsepos))*100).toFixed(2)\n      this.accuracy = (((this.truepos+this.falseneg)/(this.truepos+this.falsepos+this.trueneg+this.falseneg))*100).toFixed(2)\n      // console.log(this.truepos,this.falsepos);\n      // console.log(this.trueneg,this.falseneg);\n    },\n    getstatuscheck(t,f){\n      // console.log(t,f);\n      var text = ''\nif (t == f) {\n  text = 'เกินจริง'\n}else if (t > f) {\n  text = 'เกินจริง'\n}else if (f > t) {\n  text = 'ไม่เกินจริง'\n}\nreturn text\n    },\n    gettest() {\n      this.listtest = []\n      this.statustest = false\n      this.alltest = ((this.testno / 100) * this.list.length).toFixed(0);\n      ProductsService.findAlltest(this.alltest).then(async (test) => {\n        // console.log(res.data);\n        // this.listtest = res.data;\n        for (let l = 0; l < test.data.length; l++) {\n          var selectpro = {\n        // url: this.data.url,\n        id: test.data[l].id,\n      };\n      MapRuleBasedService.getproducttest(selectpro).then(async (res) => {\n        // console.log(res.data);\n        if (res.data.keyword != 1) {\n          test.data[l].statustest = this.getstatuscheck(res.data.keyword[0].statustrue,res.data.keyword[0].statusfalse)\n          test.data[l].sen = res.data.keyword[0].sentence_rulebase\nif (this.getstatuscheck(res.data.keyword[0].statustrue,res.data.keyword[0].statusfalse) == 'เกินจริง') {\n  test.data[l].statustestid = 1\n}else{\n  test.data[l].statustestid = 2\n}\n        }else{\n          test.data[l].statustest = 'ไม่พบข้อความโฆษณา'\n          test.data[l].statustestid = 2\n          test.data[l].sen = 'ไม่พบรูปประโยค'\n\n        }\n        this.listtest.push(test.data[l])\n        this.listtest= this.listtest.sort(function(a, b){\n    return a.url - b.url;\n});\n        if (l+1 == test.data.length) {\n      // console.log(this.listtest);\n      this.gettp()\n          this.statustest = true\n        }\n      })\n\n        //   var getprotoken = {\n        //     url: this.listtest[l].id,\n        //   };\n        //   await MapRuleBasedService.getproductkeyword(getprotoken).then(\n        //     async (pro) => {\n        //       console.log(pro.data);\n        //        await this.tokendata(pro.data);\n        //     }\n        //   );\n        }\n      });\n    },\n    getMax(arr, prop) {\n      var max;\n      for (var i = 0; i < arr.length; i++) {\n        if (max == null || parseInt(arr[i][prop]) > parseInt(max[prop]))\n          max = arr[i];\n      }\n      return max;\n    },\n    getAllMaxArray(arr, value) {\n      var array = [];\n      arr.map(function (num, idx) {\n        if (num.allcount == value) {\n          array.push(arr[idx]);\n        }\n      });\n      return array;\n    },\n    async tokendata(list) {\n      //console.log(list);\n      if (list.keyword.length > 0) {\n        var arrtest = []\n        for (let l = 0; l < list.keyword.length; l++) {\n          //console.log(list.keyword[l].keyword_dict_id);\n          if (list.keyword[l].keyword_dict_id) {\n            var map = {\n              id: list.keyword[l].id,\n              url: list.keyword[l].keyword_dict_id,\n              keyword_id: list.keyword[l].dict_id,\n            };\n            // console.log(map);\n            await MapRuleBasedService.getmapproduct(map).then(async (res) => {\n              // console.log(res.data);\n              var maxvalue = this.getMax(res.data, \"allcount\");\n              // console.log(maxvalue.allcount);\n              var i = this.getAllMaxArray(res.data, maxvalue.allcount);\n              // console.log(i);\n              var bestdata = this.getMax(i, \"length\");\n              // console.log(bestdata);\n              // getAllIndexes\n              // console.log(bestdata);\n              var best = {\n                id: list.keyword[l].id,\n                sentence: bestdata,\n              };\n              // console.log(best);\n              var rule_based_name = bestdata.name.toString();\n              rule_based_name = rule_based_name.replaceAll(\",\", \"\");\n              // console.log(rule_based_name);\n              await axios\n                .get(\n                  LinkService.getpythonlink() +\n                    \"/loaddict?word=\" +\n                    rule_based_name\n                )\n                .then(async () => {\n                  await MapRuleBasedService.getbestrulebased(best).then(\n                    async (res) => {\n                      // console.log(res.data);\n\n                      var rulebased = {\n                        count_rulebased: res.data.count,\n                        sentence_rulebase: res.data.sentence,\n                        rule_based_id: res.data.rule_based_id,\n                        rule_based_name: res.data.rule_based_name,\n                        map_rule_based_id: res.data.map_id,\n                      };\n                      // console.log(rulebased);\n                      arrtest.push(rulebased)\n                      // console.log(l + 1, list.keyword.length);\n                      if (l + 1 == list.keyword.length) {\n                        // var maxvaluetest = this.getMax(arrtest, \"allcount\");\n                        // var i = this.getAllMaxArray(arrtest, maxvaluetest.allcount);\n              // console.log(i);\n              // var bestdata = this.getMax(i, \"length\");\n              // console.log(bestdata);\n              }\n                    }\n                  );\n                });\n              // list.keyword[l].rulebase = res.data;\n              \n            });\n          }\n\n          // }\n        }\n      }\n    },\n    onChangePage(pageOfItems) {\n      // update page of items\n      this.pageOfItems = pageOfItems;\n      window.scrollTo(0, 0);\n    },\n    deleteScopus() {\n      console.log(this.pro_id);\n      var data = {\n        status: 0,\n      };\n      MapRuleBasedService.deletemap_rule_based(this.pro_id, data).then(\n        () => {\n          // console.log(res.data);\n          document.getElementById(\"closedDeleteScopus\").click();\n          this.getcategory();\n          alert(\"บันทึกสำเร็จ\");\n        }\n      );\n    },\n    save() {\n      console.log(this.data);\n      if (this.data.name == null || this.data.cat_id == \"\") {\n        alert(\"กรุณากรอกข้อความ\");\n      } else {\n        var prodata = {\n          id: this.data.id,\n          name: this.data.name,\n          status: 1,\n        };\n        console.log(prodata);\n        if (this.pro_id == 0) {\n          KeywordService.createkeyword(prodata).then(() => {\n            DictService.createdict(prodata).then((res) => {\n              // console.log(res.data );\n              RuleBasedService.createdcolumnrule_based(res.data.id).then(() => {\n                document.getElementById(\"closedcategory\").click();\n                this.getcategory();\n                alert(\"บันทึกสำเร็จ\");\n              });\n            });\n          });\n        } else {\n          KeywordService.updatekeyword(this.pro_id, prodata).then(() => {\n            document.getElementById(\"closedcategory\").click();\n            this.getcategory();\n            alert(\"บันทึกสำเร็จ\");\n          });\n        }\n      }\n    },\n    token(text) {\n      var tokenize = \"\";\n      axios\n        .get(LinkService.getpythonlink() + \"/tokenkeyword?text=\" + text)\n        .then((res) => {\n          // this.tokenize = res.data\n          // console.log(res.data);\n          tokenize = res.data;\n        });\n      return tokenize;\n    },\n    updatetoken(data, type) {\n      // console.log(data);\n      var tokenize = \"\";\n      // data.name = data.name.replaceAll(/([\\uE000-\\uF8FF]|\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDDFF])/g, '')\n      // data.name = data.name.replaceAll(/(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|\\ud83c[\\ude32-\\ude3a]|\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])/g, '');\n\n      axios\n        .get(LinkService.getpythonlink() + \"/tokenkeyword?text=\" + data.name)\n        .then((res) => {\n          this.tokenize = res.data;\n          // console.log(res.data);\n          tokenize = res.data.replaceAll(\" \", \"\");\n          tokenize = tokenize.replaceAll(\".\", \"\");\n          tokenize = tokenize.replaceAll(\"''\", \"\");\n          tokenize = tokenize.replaceAll(\",,\", \",\");\n          tokenize = tokenize.replaceAll(\"[\", \"\");\n          tokenize = tokenize.replaceAll(\"]\", \"\");\n          tokenize = tokenize.replaceAll(\"'\", \"\");\n          tokenize = tokenize.replaceAll(\",\", \" | \");\n          var tokendata = {\n            name: data.name,\n            token: tokenize,\n          };\n          // console.log(tokendata);\n          // console.log(data.id);\n          KeywordService.updatekeyword(data.id, tokendata).then(() => {\n            // console.log(res.data);\n            if (type == \"update\") {\n              document.getElementById(\"closedcategory\").click();\n              this.getcategory();\n              alert(\"บันทึกสำเร็จ\");\n            }\n          });\n        });\n    },\n    getcategory() {\n      ProductsService.getproductstoken(\"\").then((res) => {\n        console.log(res.data);\n        this.list = res.data;\n\n        // this.gettest();\n      });\n    },\n    getid(id) {\n      // console.log(id);\n      this.pro_id = id;\n    },\n  },\n  mounted() {\n    this.getcategory();\n    this.statustest = false\n  },\n};\n</script>\n\n<style>\nhtml,\nbody {\n  height: 100%;\n  margin: 0px;\n}\n/* .table-striped > tbody > tr:nth-child(2n+1) > td, .table-striped > tbody > tr:nth-child(2n+1) > th {\n   background-color: #CFD5EA;\n} */\n.table-striped > tbody > tr:nth-child(odd) > td,\n.table-striped > tbody > tr:nth-child(odd) > th {\n  background-color: #cfd5ea;\n  /* color: white; */\n}\n.table-striped > tbody > tr:nth-child(even) > td,\n.table-striped > tbody > tr:nth-child(even) > th {\n  background-color: #e7ebf5;\n  /* color: white; */\n}\n</style>\n"]}]}