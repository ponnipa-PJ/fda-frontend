{"remainingRequest":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/babel-loader/lib/index.js!/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/Report.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/Report.vue","mtime":1677654957536},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/babel.config.js","mtime":1677654957527},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1687492401267},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/babel-loader/lib/index.js","mtime":1687492401655},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1687492401267},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js","mtime":1687492401738}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AAEA;AACAA,oBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,cADA;AAEAC,0BAFA;AAGAC,YAHA;AAIAC,cAJA;AAKAC,aALA;AAMAC,eANA;AAOAC,iBAPA;AAQAC,mBARA;AASAC,iBATA;AAUAC,iBAVA;AAWAV;AAXA;AAaA,GAhBA;AAiBAW;AACAC;AADA,GAjBA;AAoBAC,cApBA;AAqBAC,SArBA,qBAqBA;AACA;AACA;AACAC;AAAAC;AAAA;AACAD;AAAAC;AAAA;AAEA,GA3BA;AA4BAC;AACAC,eADA,uBACAC,KADA,EACA;AACA;AACA;AACA;AACAC;AACA;AACA,iCANA,CAOA;;AACA,gCARA,CASA;;AACA;AACA;AACA;;AACA;AACAC;AACA;;AACA;AACAC;AACA;;AACA;AACA,KArBA;AAsBAC,UAtBA,oBAsBA;AAAA;;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACAC;AACAC,8DACAjB,SADA,EAEAC,OAFA,EAGAiB,IAHA,CAGA;AACA,0BADA,CAEA;;AACA;AACAF,kCADA,CAEA;AACA;AACA;;AACA;AACAG,wDACAC,4BADA,CADA;AAIAC,gCAJA;AAKAC,oDALA;AAMAC,gDANA;AAOAC,wCAPA;AAQAC,wCARA;AASAC,oCATA;AAUAC,4CAVA;AAWAC,sDAXA;AAYAC,yCAZA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA9B,0CApBA;AAqBA+B;AArBA;AAuBA;;AACA;AACA,SApCA;AAqCA;AACA,KAnEA;AAoEAC,WApEA,mBAoEAC,KApEA,EAoEAC,GApEA,EAoEA;AACA;AACAD;AACA;AACAE;AACA;;AACAA;AACA,OALA;AAMA;AACA,KA7EA;AA8EAC,mBA9EA,2BA8EAC,IA9EA,EA8EA;AACA,uCADA,CAEA;;AACA;AACA;AACAxB;AACA;AACAyB;AACA,uCARA,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA,KAlGA;AAmGAC,YAnGA,sBAmGA;AAAA;;AACA;AACA;AACA;AACA;AACAtB;AAEAC,iEACAC,IADA,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,uDACAC,4BADA,CADA;AAIAC,8BAJA;AAKAC,kDALA;AAMAC,8CANA;AAOAC,sCAPA;AAQAC,sCARA;AASAC,kCATA;AAUAC,0CAVA;AAWAC,oDAXA;AAYAC,uCAZA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA9B,wCApBA;AAqBA+B,mCArBA;AAsBAS;AAtBA;AAwBA;;AACA;AACA,OAnCA,EAoCAC,KApCA,CAoCA;AACAxB;AACA,OAtCA;AAuCA,KAjJA;AAkJAyB,eAlJA,yBAkJA;AACAzB,6BADA,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,cACA,sEACA,0DADA,IAEA,0CAHA,EAIA;AACA;AACA;AACA;AACA,WARA,MAQA,IACA,8DACA,kEADA,IAEA,wCAHA,EAIA;AACA;AACA;AACA,WAPA,MAOA,IACA,8DACA,wCAFA,EAGA;AACA;AACA,WALA,MAKA,IACA,8DACA,0CAFA,EAGA;AACA;AACA;AACA;;AACA;AACA,cACA,6BADA,EAEA;AACA;AACA;AACA;AACA;AACA,KA3MA;AA4MA0B,OA5MA,eA4MApB,YA5MA,EA4MAE,MA5MA,EA4MAG,QA5MA,EA4MAF,MA5MA,EA4MAC,IA5MA,EA4MA;AACA;AACA;AACA;AACA;;AACA;AACAiB,0CADA,CAEA;AACA;;AACAC,gDAJA,CAKA;;AACA;AACA,OAPA,MAOA;AACAC,yCADA,CAEA;AACA;;AACAC,gDAJA,CAKA;;AACA;AACA;AACA,KAhOA;AAiOAC,qBAjOA,6BAiOAC,SAjOA,EAiOA;AACA;AACA;AACA;AACA;AACA;AAEA,oDANA,CAMA;AACA;;AACA;AACA;AACA,KA5OA;AA6OAC,oBA7OA,4BA6OAC,CA7OA,EA6OA;AACA;AACAA;;AACA;AACAC;AACA,OAFA,MAEA;AACAA;AACA;;AACA;AACA,KAtPA;AAuPAC,iBAvPA,2BAuPA;AAEA,wBACA;AACAC,+BADA;AAEAC;AAFA,OADA,EAKA;AACAD,2BADA;AAEAC;AAFA,OALA,EASA;AACAD,2BADA;AAEAC;AAFA,OATA,EAaA;AACAD,4BADA;AAEAC;AAFA,OAbA,EAiBA;AACAD,sBADA;AAEAC;AAFA,OAjBA,EAqBA;AACAD,qBADA;AAEAC;AAFA,OArBA,EAyBA;AACAD,iCADA;AAEAC;AAFA,OAzBA,EA6BA;AACAD,8BADA;AAEAC;AAFA,OA7BA,EAiCA;AACAD,0BADA;AAEAC;AAFA,OAjCA,EAqCA;AACAD,0BADA;AAEAC;AAFA,OArCA;AAyCA;AACA;AAnSA;AA5BA","names":["name","data","list","itemPreviewImage","id","item","img","image","net_tax","startdate","enddate","columns","props","msg","computed","mounted","picker_date","year_range","methods","createddate","value","m","day","month","search","console","MergeLiquorReportService","then","tax_payment_date","res","no","factory_code","brand_name","number","degree","size","per_each","volume_liquor","net","colour","groupBy","array","key","result","convertdatesort","date","y","loaddata","type","catch","cal_net_tax","cal","x1","x2","x3","x4","convertdatetothai","datetimes","numberWithCommas","x","r","generateexcel","label","field"],"sourceRoot":"src/components","sources":["Report.vue"],"sourcesContent":["<template>\n  <div class=\"hello container mt-5\">\n    <div class=\"row\"> \n      <div class=\"col-6\">\n        <label for=\"exampleInputEmail1\" class=\"form-label\">วันเริ่มต้น</label>\n        <!-- <input\n          v-model=\"startdate\"\n          type=\"date\"\n          class=\"form-control\"\n          id=\"exampleInputEmail1\"\n          aria-describedby=\"emailHelp\"\n        /> -->\n        <input id=\"start_date\" class=\"form-control\" />\n      </div>\n      <div class=\"col-6\">\n        <label for=\"exampleInputEmail1\" class=\"form-label\">วันสิ้นสุด</label>\n        <!-- <input\n          v-model=\"enddate\"\n          type=\"date\"\n          class=\"form-control\"\n          id=\"exampleInputEmail1\"\n          aria-describedby=\"emailHelp\"\n        /> -->\n        <input id=\"end_date\" class=\"form-control\" />\n      </div>\n      <div class=\"col-12\" align=\"center\">\n        <button\n          @click=\"search()\"\n          type=\"submit\"\n          class=\"btn btn-primary\"\n          style=\"margin-top: 10px;text-align:right\"\n        >\n          ค้นหา\n        </button>\n      </div>\n      </div>\n      <div class=\"col-12\" align=\"right\" style=\"display:none;\">\n        <vue-excel-xlsx\n        :data=\"data\"\n        :columns=\"columns\"\n        :file-name=\"'filename'\"\n        :file-type=\"'xlsx'\"\n        :sheet-name=\"'sheetname'\"\n        >\n        Export Excel\n    </vue-excel-xlsx>\n    </div>\n    <table class=\"table mt-5\">\n      <thead>\n        <tr>\n          <th scope=\"col\">เลขรับที่</th>\n          <th scope=\"col\">วันที่ชำระภาษี</th>\n          <th scope=\"col\">รหัสโรงงาน</th>\n          <th scope=\"col\">ชื่อยี่ห้อ</th>\n          <th scope=\"col\">จำนวน (ดวง)</th>\n          <th scope=\"col\">ดีกรี</th>\n          <th scope=\"col\">ขนาด</th>\n          <th scope=\"col\">ราคาขายปลีกแนะนำ</th>\n          <th scope=\"col\">ปริมาณน้ำสุรา</th>\n          <th scope=\"col\">จำนวนเงิน</th>\n          <th scope=\"col\">ภาษีสุทธิ</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(l, i) in list\" :key=\"i\">\n          <td :class=\"l.colour\">{{ l.no }}</td>\n          <td :class=\"l.colour\">\n            {{ l.tax_payment_date }}\n          </td>\n          <td :class=\"l.colour\">{{ l.factory_code }}</td>\n          <td :class=\"l.colour\">{{ l.brand_name }}</td>\n          <td :class=\"l.colour\">{{ l.number }}</td>\n          <td :class=\"l.colour\">{{ l.degree }}</td>\n          <td :class=\"l.colour\">{{ l.size }}</td>\n          <td :class=\"l.colour\">{{ l.per_each }}</td>\n          <td :class=\"l.colour\">{{ l.volume_liquor }}</td>\n          <td :class=\"l.colour\">\n            {{ numberWithCommas(l.net) }}\n          </td>\n          <td :class=\"l.colour\">\n            {{ numberWithCommas(l.net_tax) }}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n  <script src=\"https://api-excise.ponnipa.in.th/picker_date.js\"></script>\n\n<script>\nimport MergeLiquorReportService from \"../services/MergeLiquorReportService.js\";\n\nexport default {\n  name: \"HelloWorld\",\n  data() {\n    return {\n      list: [],\n      itemPreviewImage: \"\",\n      id: \"\",\n      item: [],\n      img: \"\",\n      image: \"\",\n      net_tax: [],\n      startdate: \"\",\n      enddate: \"\",\n      columns:[],\n      data:[]\n    };\n  },\n  props: {\n    msg: String,\n  },\n  computed: {},\n  mounted() {\n    this.loaddata();\n    this.generateexcel()\n    picker_date(document.getElementById(\"start_date\"), { year_range: \"-12:+10\" });\n    picker_date(document.getElementById(\"end_date\"), { year_range: \"-12:+10\" });\n\n  },\n  methods: {\n    createddate(value) {   \n  var streetaddress = String(value);\n    var d = streetaddress.substring(0, streetaddress.indexOf(\"/\"));\n    var m = streetaddress.substring(5, streetaddress.indexOf(\"/\"));\n    m = m.substring(1, 3);\n    var y = streetaddress.substring(5);\n    var full = m + \"/\" + d + y;\n    // console.log(full);\n    var date = new Date(full);\n    // console.log(date);\n    var day = date.getDate();\n    var month = date.getMonth()+1;\n    var year = date.getFullYear();\n    if (day.toString().length == 1) {\n      day = \"0\" + day;\n    }\n    if (month.toString().length == 1) {\n      month = \"0\" + month;\n    }\n    return  year + \"-\" + month + \"-\" + day;\n  },\n    search() {\n      if(document.getElementById(\"start_date\").value == '' ||document.getElementById(\"end_date\").value ==''){\nthis.loaddata()\n      }else{\n      var startdate = this.createddate(document.getElementById(\"start_date\").value);\n      var enddate = this.createddate(document.getElementById(\"end_date\").value);\n      console.log(enddate);\n      MergeLiquorReportService.getMergeLiquorReportSortDate(\n        startdate,\n        enddate\n      ).then((res) => {\n        this.list = [];\n        //  console.log(res.data);\n        for (let i = 0; i < res.data.length; i++) {\n          console.log(res.data);\n          // if (res.data[i].factory_code == res.data[i - 1].factory_code) {\n          // sum_net_tax = res.data[i].net + res.data[i - 1].net;\n          // }\n          this.list.push({\n            tax_payment_date: this.convertdatetothai(\n              res.data[i].tax_payment_date\n            ),\n            no: res.data[i].no,\n            factory_code: res.data[i].factory_code,\n            brand_name: res.data[i].brand_name,\n            number: res.data[i].number,\n            degree: res.data[i].degree,\n            size: res.data[i].size,\n            per_each: res.data[i].per_each,\n            volume_liquor: res.data[i].volume_liquor,\n            net:res.data[i].liquor_tax,\n            // net: this.cal(\n            //   res.data[i].factory_code,\n            //   res.data[i].number,\n            //   res.data[i].per_each,\n            //   res.data[i].degree,\n            //   res.data[i].size\n            // ),\n            net_tax:res.data[i].net_tax,\n            colour: \"table-success\",\n          });\n        }\n        this.cal_net_tax();      \n            });\n      }\n    },\n     groupBy(array, key) {\n      const result = {};\n      array.forEach((item) => {\n        if (!result[item[key]]) {\n          result[item[key]] = [];\n        }\n        result[item[key]].push(item);\n      });\n      return result;\n    },\n    convertdatesort(date) {\n      var streetaddress = String(date);\n      // console.log(streetaddress);\n      var y = streetaddress.substring(0, streetaddress.indexOf(\"-\"));\n      var m = streetaddress.substring(7, streetaddress.indexOf(\"-\"));\n      m = m.substring(1, 3);\n      var d = streetaddress.substring(8, 10);\n      y = parseInt(y) + 543;\n      var full = y + \"-\" + m + \"-\" + d;\n      // console.log(d)\n      // console.log(m)\n      // console.log(y);\n      // console.log(full);\n      // var timestamp = Date.parse(full);\n      // var dateObject = new Date(timestamp);\n      // dateObject.setDate(dateObject.getDate() + 1);\n      // console.log(dateObject);\n      // const result = dateObject.toLocaleDateString(\"en-EN\");\n      // console.log(result);\n      return full;\n    },\n    loaddata() {\n      this.list = []\n      var date = new Date()\n      var month = date.getMonth()+1\n      var year = date.getFullYear()+543\n       console.log(year)\n\n      MergeLiquorReportService.getMergeLiquorReport(month,year)\n        .then((res) => {\n          // console.log(res.data);\n          // this.list = res.data;\n          // var sum_net_tax = 0;\n          for (let i = 0; i < res.data.length; i++) {\n            // if (res.data[i].factory_code == res.data[i - 1].factory_code) {\n            // sum_net_tax = res.data[i].net + res.data[i - 1].net;\n            // }\n            this.list.push({\n              tax_payment_date: this.convertdatetothai(\n                res.data[i].tax_payment_date\n              ),\n              no: res.data[i].no,\n              factory_code: res.data[i].factory_code,\n              brand_name: res.data[i].brand_name,\n              number: res.data[i].number,\n              degree: res.data[i].degree,\n              size: res.data[i].size,\n              per_each: res.data[i].per_each,\n              volume_liquor: res.data[i].volume_liquor,\n              net:res.data[i].liquor_tax,\n              // net: this.cal(\n              //   res.data[i].factory_code,\n              //   res.data[i].number,\n              //   res.data[i].per_each,\n              //   res.data[i].degree,\n              //   res.data[i].size\n              // ),\n              net_tax:res.data[i].net_tax,\n              colour: \"table-success\",\n              type: res.data[i].type,\n            });\n          }\n          this.cal_net_tax();\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n    cal_net_tax() {\n      console.log(this.list);\n      // console.log(this.group(this.list, \"tax_payment_date\"))\n      // for (let i = 0; i < this.list.length; i++) {\n      //   if (i != 0) {\n      //     if (this.list[i].tax_payment_date == this.list[i - 1].tax_payment_date &&\n      //     this.list[i].factory_code == this.list[i - 1].factory_code &&\n      //     this.list[i].brand_name == this.list[i - 1].brand_name) {\n      //       // console.log(\"i\", this.list[i].net);\n      //       // console.log(this.list[i -1].net);\n      //       this.list[i - 1].net_tax = (Math.floor(\n      //         parseFloat(this.list[i].net) + parseFloat(this.list[i - 1].net)).toFixed(2)\n      //       );\n      //     } else {\n      //       this.list[i].net_tax = Math.floor(parseFloat(this.list[i].net)).toFixed(2);\n      //     }\n      //   } else {\n      //     this.list[i].net_tax = Math.floor(parseFloat(this.list[i].net)).toFixed(2);\n      //   }\n      // }\n      for (let i = 0; i < this.list.length; i++) {\n        if (i != 0) {\n          if (\n            this.list[i].tax_payment_date == this.list[i - 1].tax_payment_date &&\n            this.list[i].factory_code == this.list[i - 1].factory_code &&\n            this.list[i - 2].colour == \"table-success\"\n          ) {\n            // console.log(this.list[i].colour);\n            this.list[i].colour = \"table-white\";\n            this.list[i - 1].colour = \"table-white\";\n          } else if (\n            this.list[i].factory_code == this.list[i - 1].factory_code &&\n            this.list[i].tax_payment_date == this.list[i - 1].tax_payment_date &&\n            this.list[i - 1].colour == \"table-white\"\n          ) {\n            this.list[i].colour = \"table-success\";\n            this.list[i - 1].colour = \"table-success\";\n          } else if (\n            this.list[i].factory_code != this.list[i - 1].factory_code &&\n            this.list[i - 1].colour == \"table-white\"\n          ) {\n            this.list[i].colour = \"table-success\";\n          } else if (\n            this.list[i].factory_code != this.list[i - 1].factory_code &&\n            this.list[i - 1].colour == \"table-success\"\n          ) {\n            this.list[i].colour = \"table-white\";\n          }          \n        }\n        for (let ll = 0; ll < this.list.length; ll++) {\n          if (\n            this.list[ll].net_tax == null\n          ) {\n            this.list[ll].colour = this.list[ll-1].colour;\n          }          \n        }\n      }\n    },\n    cal(factory_code, number, per_each, degree, size) {\n      var x1 = 0;\n      var x2 = 0;\n      var x3 = 0;\n      var x4 = 0;\n      if (factory_code == 540002) {\n        x1 = ((10 * number) / 100) * per_each;\n        // console.log(x1);\n        // var x2 = ((155*30)/100)*0.63*1500;\n        x2 = ((150 * degree) / 100) * size * number;\n        // console.log(x2);\n        return (x1 + x2).toFixed(2);\n      } else {\n        x3 = ((2 * number) / 100) * per_each;\n        // console.log(x1);\n        // var x2 = ((155*30)/100)*0.63*1500;\n        x4 = ((155 * degree) / 100) * size * number;\n        // console.log(x2);\n        return (x3 + x4).toFixed(2);\n      }\n    },\n    convertdatetothai(datetimes) {\n      if (datetimes) {\n        var d = new Date(datetimes);\n        var mm = d.getMonth() + 1;\n        var dd = d.getDate();\n        var yy = d.getFullYear();\n\n        var myDateString = dd + \"/\" + mm + \"/\" + yy; //(US)\n        // console.log(myDateString);\n        return myDateString;\n      }\n    },\n    numberWithCommas(x) {\n      var r =0\n      x = parseInt(x)\n      if (isNaN(x)) {\n        r = ''\n      }else{\n        r =  x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      }\n      return r\n    },\n    generateexcel(){\n      \n    this.columns.push(\n                    {\n                        label: \"วันที่ชำระภาษี\",\n                        field: \"tax_payment_date\",\n                    },\n                    {\n                        label: \"รหัสโรงงาน\",\n                        field: \"factory_code\",\n                    },\n                    {\n                        label: \"ชื่อยี่ห้อ\",\n                        field: \"brand_name\",\n                    },\n                    {\n                        label: \"จำนวน (ดวง)\",\n                        field: \"number\",\n                    },\n                    {\n                        label: \"ดีกรี\",\n                        field: \"degree\",\n                    },\n                    {\n                        label: \"ขนาด\",\n                        field: \"size\",\n                    },\n                    {\n                        label: \"ราคาขายปลีกแนะนำ\",\n                        field: \"per_each\",\n                    },\n                    {\n                        label: \"ปริมาณน้ำสุรา\",\n                        field: \"volume_liquor\",\n                    },\n                    {\n                        label: \"จำนวนเงิน\",\n                        field: \"net\",\n                    },\n                    {\n                        label: \"ภาษีสุทธิ\",\n                        field: \"net_tax\",\n                    })\n    this.data = this.list\n    }\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}