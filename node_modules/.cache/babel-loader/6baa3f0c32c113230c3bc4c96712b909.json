{"remainingRequest":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/babel-loader/lib/index.js!/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/producttoken.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/producttoken.vue","mtime":1699417931585},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/babel.config.js","mtime":1677654957527},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1687492401267},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/babel-loader/lib/index.js","mtime":1687492401655},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1687492401267},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js","mtime":1687492401738}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9wb25uaXBhL0RvY3VtZW50cy9HaXRIdWIvZmRhLWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS1hbGwuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7IC8vIGltcG9ydCBQcm9kdWN0c1NlcnZpY2UgZnJvbSAnLi4vc2VydmljZXMvUHJvZHVjdHNTZXJ2aWNlLmpzJwoKaW1wb3J0IERpY3RTZXJ2aWNlIGZyb20gIi4uL3NlcnZpY2VzL0RpY3RTZXJ2aWNlIjsKaW1wb3J0IFJ1bGVCYXNlZFNlcnZpY2UgZnJvbSAiLi4vc2VydmljZXMvUnVsZUJhc2VkU2VydmljZSI7CmltcG9ydCBNYXBSdWxlQmFzZWRTZXJ2aWNlIGZyb20gIi4uL3NlcnZpY2VzL01hcFJ1bGVCYXNlZFNlcnZpY2UiOwppbXBvcnQgTGlua1NlcnZpY2UgZnJvbSAiLi4vc2VydmljZXMvTGlua1NlcnZpY2UiOwppbXBvcnQgQWR2ZXJ0aXNlU2VydmljZSBmcm9tICIuLi9zZXJ2aWNlcy9BZHZlcnRpc2VTZXJ2aWNlIjsKaW1wb3J0IEtleXdvcmRTZXJ2aWNlIGZyb20gIi4uL3NlcnZpY2VzL0tleXdvcmRTZXJ2aWNlIjsKaW1wb3J0IENsaXBMb2FkZXIgZnJvbSAndnVlLXNwaW5uZXIvc3JjL0NsaXBMb2FkZXIudnVlJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJBcHAiLAogIGNvbXBvbmVudHM6IHsKICAgIENsaXBMb2FkZXI6IENsaXBMb2FkZXIKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb2xvcjogJyM1YmMwZGUnLAogICAgICBzaXplOiAnNTBweCcsCiAgICAgIG1hcmdpbjogJzJweCcsCiAgICAgIHJhZGl1czogJzJweCcsCiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICBsaXN0OiBbXSwKICAgICAgdXJsOiAiIiwKICAgICAgZmlsZTogIiIsCiAgICAgIHN0YXR1czogZmFsc2UsCiAgICAgIHVybFBhdGg6ICIiLAogICAgICBpbWFnZWxpc3RzOiAiIiwKICAgICAgdG9rZW5pemU6ICIiLAogICAgICBtYXRjaG5hbWU6ICIiLAogICAgICBtYXRjaGNhdGVnb3J5OiAiIiwKICAgICAgdHlwZTogIiIsCiAgICAgIG1hdGNobmFtZXN1bTogIiIsCiAgICAgIHN0YXR1c25hbWU6IDAsCiAgICAgIHN0YXR1c2NhdDogMCwKICAgICAgc3RhdHVzZmRhOiAwLAogICAgICBjb2xvcm5hbWU6ICJiYWNrZ3JvdW5kLWNvbG9yOiNmOWJkYmIiLAogICAgICBjb2xvcmZkYTogImJhY2tncm91bmQtY29sb3I6I2Y5YmRiYiIsCiAgICAgIGNvbG9yY2F0OiAiYmFja2dyb3VuZC1jb2xvcjojZjliZGJiIiwKICAgICAgaWQ6ICIiLAogICAgICBrZXl3b3JkOiBbXSwKICAgICAgY29sb3JrZXk6ICJiYWNrZ3JvdW5kLWNvbG9yOiNmOWJkYmIiLAogICAgICBkZXNjOiAiIiwKICAgICAgYXJyTGlzdDogW10sCiAgICAgIGFsbGRhdGE6IDAsCiAgICAgIGJhY2s6IDAsCiAgICAgIG5leHQ6IDAsCiAgICAgIGRhdGE6IHt9LAogICAgICBwcm9kdWN0X3Rva2VuOiAwLAogICAgICB0aXRsZTogIuC5gOC4nuC4tOC5iOC4oSBrZXl3b3JkIiwKICAgICAga2V5OiB7fSwKICAgICAgZmRhOiAiIiwKICAgICAgcHJvZHVjdDogW10sCiAgICAgIHByb2NoZWNrOiBbXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBjdXJyZW50VXNlcjogZnVuY3Rpb24gY3VycmVudFVzZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5hdXRoLnVzZXI7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRzdGF0dXNjaGVjazogZnVuY3Rpb24gZ2V0c3RhdHVzY2hlY2sodCwgZikgewogICAgICBjb25zb2xlLmxvZyh0LCBmKTsKICAgICAgdmFyIHRleHQgPSAnJzsKCiAgICAgIGlmICh0ID09IGYpIHsKICAgICAgICB0ZXh0ID0gJ+C5gOC4geC4tOC4meC4iOC4o+C4tOC4hyc7CiAgICAgIH0gZWxzZSBpZiAodCA+IGYpIHsKICAgICAgICB0ZXh0ID0gJ+C5gOC4geC4tOC4meC4iOC4o+C4tOC4hyc7CiAgICAgIH0gZWxzZSBpZiAoZiA+IHQpIHsKICAgICAgICB0ZXh0ID0gJ+C5hOC4oeC5iOC5gOC4geC4tOC4meC4iOC4o+C4tOC4hyc7CiAgICAgIH0KCiAgICAgIHJldHVybiB0ZXh0OwogICAgfSwKICAgIGNsZWFyOiBmdW5jdGlvbiBjbGVhcigpIHsKICAgICAgdGhpcy5kYXRhID0ge307CiAgICAgIHRoaXMucHJvZHVjdCA9IFtdOwogICAgICB0aGlzLnByb2NoZWNrID0ge307CiAgICAgIHRoaXMuc3RhdHVzID0gZmFsc2U7CiAgICB9LAogICAgY3V0OiBmdW5jdGlvbiBjdXQoZGF0YSkgewogICAgICBkYXRhID0gZGF0YS5maWx0ZXIoZnVuY3Rpb24gKGxldHRlcikgewogICAgICAgIHJldHVybiBsZXR0ZXIgIT09ICIgIjsKICAgICAgfSk7CiAgICAgIHZhciBtYXBuYW1lID0gZGF0YS50b1N0cmluZygpOwogICAgICBtYXBuYW1lID0gbWFwbmFtZS5yZXBsYWNlQWxsKCIsIiwgIiB8ICIpOwogICAgICByZXR1cm4gbWFwbmFtZTsKICAgIH0sCiAgICBzYXZlOiBmdW5jdGlvbiBzYXZlKCkgewogICAgICAvL2NvbnNvbGUubG9nKHRoaXMua2V5KTsKICAgICAgaWYgKHRoaXMua2V5Lm5hbWUgPT0gbnVsbCB8fCB0aGlzLmtleS5uYW1lID09ICIiKSB7CiAgICAgICAgYWxlcnQoIuC4geC4o+C4uOC4k+C4suC4geC4o+C4reC4geC4guC5ieC4reC4hOC4p+C4suC4oSIpOwogICAgICB9IGVsc2UgewogICAgICAgIHZhciBwcm9kYXRhID0gewogICAgICAgICAgbmFtZTogdGhpcy5rZXkubmFtZSwKICAgICAgICAgIHN0YXR1czogMQogICAgICAgIH07IC8vY29uc29sZS5sb2cocHJvZGF0YSk7CgogICAgICAgIEtleXdvcmRTZXJ2aWNlLmNyZWF0ZWtleXdvcmQocHJvZGF0YSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAvL2NvbnNvbGUubG9nKHJlcy5kYXRhKTsKICAgICAgICAgIGlmIChyZXMuZGF0YS5lcnIgPT0gMTA2MikgewogICAgICAgICAgICBhbGVydCgi4Lih4Li14LiE4Liz4LiZ4Li14LmJ4LmD4LiZ4Lij4Liw4Lia4Lia4LmB4Lil4LmJ4LinIik7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBEaWN0U2VydmljZS5jcmVhdGVkaWN0KHByb2RhdGEpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgIC8vY29uc29sZS5sb2cocmVzLmRhdGEgKTsKICAgICAgICAgICAgICAvLyBSdWxlQmFzZWRTZXJ2aWNlLmNyZWF0ZWRjb2x1bW5ydWxlX2Jhc2VkKHJlcy5kYXRhLmlkKS50aGVuKCgpID0+IHsKICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY2xvc2VkY2F0ZWdvcnkiKS5jbGljaygpOwogICAgICAgICAgICAgIGFsZXJ0KCLguJrguLHguJnguJfguLbguIHguKrguLPguYDguKPguYfguIgiKTsgLy8gfSkKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBnZXRwZXJjZW50YWdlOiBmdW5jdGlvbiBnZXRwZXJjZW50YWdlKGRhdGEpIHsKICAgICAgLy8gdmFyIGRpY3QgPSBKU09OLnBhcnNlKGRhdGEuZGljdF9pZCkKICAgICAgLy8gdmFyIHJ1bGVfYmFzZWRfaWQgPSBKU09OLnBhcnNlKGRhdGEucnVsZV9iYXNlZF9pZCkKICAgICAgLy8gdmFyIHJlID0gKDEwMCAqIGRhdGEuY291bnRfcnVsZWJhc2VkKS8gKHJ1bGVfYmFzZWRfaWQubGVuZ3RoKQogICAgICByZXR1cm4gZGF0YS5jb3VudF9ydWxlYmFzZWQ7CiAgICB9LAogICAgc2F2ZXRvcnVsZTogZnVuY3Rpb24gc2F2ZXRvcnVsZShzZW4sIGFuc3dlcikgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgLy8gY29uc29sZS5sb2coYW5zd2VyKTsKICAgICAgdmFyIGlkZGF0YSA9IFtdOwoKICAgICAgdmFyIF9sb29wID0gZnVuY3Rpb24gX2xvb3AoZCkgewogICAgICAgIC8vIGNvbnNvbGUubG9nKGRhdGFzcGxpdFtkXSk7CiAgICAgICAgRGljdFNlcnZpY2UuZ2V0ZGljdHMoIiIsIHNlbltkXSkudGhlbiggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHJlcykgewogICAgICAgICAgICB2YXIgc3FsOwogICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgaWYgKHJlcy5kYXRhLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHJlcy5kYXRhWzBdLmlkKTsKICAgICAgICAgICAgICAgICAgICAgIGlkZGF0YS5wdXNoKHJlcy5kYXRhWzBdLmlkKTsKICAgICAgICAgICAgICAgICAgICB9IC8vIGNvbnNvbGUubG9nKGQrMSAsIHNlbi5sZW5ndGgpOwogICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGlkZGF0YSk7CgoKICAgICAgICAgICAgICAgICAgICBpZiAoIShkICsgMSA9PSBzZW4ubGVuZ3RoKSkgewogICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIHNxbCA9ICJTRUxFQ1Qgci4qIEZST00gbWFwX3J1bGVfYmFzZWQgbSBqb2luIHJ1bGVfYmFzZWQgciBvbiBtLnJ1bGVfYmFzZWRfaWQgPSByLmlkIFdIRVJFIG0uc3RhdHVzID0gMSBhbmQgZGljdF9pZCA9ICdbIi5jb25jYXQoaWRkYXRhLCAiXSciKTsgLy8gY29uc29sZS5sb2coc3FsKTsKCiAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJ1bGVCYXNlZFNlcnZpY2UuZ2V0YnlkaWN0KHNxbCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzLmRhdGEubGVuZ3RoID09IDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRleHQgPSAiIjsKICAgICAgICAgICAgICAgICAgICAgICAgdGV4dCArPSAieyI7CgogICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGlkZGF0YS5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGlkZGF0YVtpXSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dCArPSAnImRpY3QnICsgaWRkYXRhW2ldICsgJyInICsgIjoiICsgMSArICIsIjsKICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgdGV4dCArPSAnImFuc3dlcicgKyAnIicgKyAiOiIgKyBhbnN3ZXIgKyAiLCI7CiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQgPSB0ZXh0LnNsaWNlKDAsIC0xKTsKICAgICAgICAgICAgICAgICAgICAgICAgdGV4dCArPSAifSI7IC8vIGNvbnNvbGUubG9nKHRleHQpOwoKICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2codGV4dCk7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBqc29uRGF0YSA9IEpTT04ucGFyc2UodGV4dCk7IC8vIGNvbnNvbGUubG9nKGpzb25EYXRhKTsKCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGpzb25EYXRhKTsKICAgICAgICAgICAgICAgICAgICAgICAgUnVsZUJhc2VkU2VydmljZS5jcmVhdGVydWxlX2Jhc2VkKGpzb25EYXRhKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbWFwcnVsZSA9IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJ1bGVfYmFzZWRfaWQ6IHJlcy5kYXRhLmlkLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGljdF9pZDogaWRkYXRhLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiAxCiAgICAgICAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICAgICAgICBNYXBSdWxlQmFzZWRTZXJ2aWNlLmNyZWF0ZW1hcF9ydWxlX2Jhc2VkKG1hcHJ1bGUpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2cocmVzLmRhdGEpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gdmFyIHBybyA9IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgbWFwX3J1bGVfYmFzZWQ6cmVzLmRhdGEuaWQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFByb2R1Y3RzU2VydmljZS5tYXBfcnVsZV9iYXNlZChpZCxwcm8pLnRoZW4oKCkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoIuC4muC4seC4meC4l+C4tuC4geC4quC4s+C5gOC4o+C5h+C4iCIpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLmdldGRhdGEoKTsgLy8gICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgbG9jYXRpb24ucmVsb2FkKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB9LCA1MDApOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gfSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHJlcy5kYXRhKTsKICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHVwZGF0ZW1hcHJ1bGUgPSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgYW5zd2VyOiBhbnN3ZXIKICAgICAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICAgICAgUnVsZUJhc2VkU2VydmljZS51cGRhdGVydWxlX2Jhc2VkKHJlcy5kYXRhWzBdLmlkLCB1cGRhdGVtYXBydWxlKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBhbGVydCgi4Lia4Lix4LiZ4LiX4Li24LiB4Liq4Liz4LmA4Lij4LmH4LiIIik7CgogICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLmdldGRhdGEoKTsKICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sIF9jYWxsZWUpOwogICAgICAgICAgfSkpOwoKICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgICAgICAgICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICAgIH07CiAgICAgICAgfSgpKTsKICAgICAgfTsKCiAgICAgIGZvciAodmFyIGQgPSAwOyBkIDwgc2VuLmxlbmd0aDsgZCsrKSB7CiAgICAgICAgX2xvb3AoZCk7CiAgICAgIH0KICAgIH0sCiAgICBzYXZldG9ydWxlX2Jhc2VkOiBmdW5jdGlvbiBzYXZldG9ydWxlX2Jhc2VkKGRhdGEsIGFuc3dlcikgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU3KCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNyQoX2NvbnRleHQ4KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0OC5wcmV2ID0gX2NvbnRleHQ4Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDgubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gTWFwUnVsZUJhc2VkU2VydmljZS5jaGVja2ludGIoZGF0YS5kaWN0X2lkKS50aGVuKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICB2YXIgX3JlZjIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU2KGNoZWNrKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIHN0YXR1c2ZhbHNlLCBzdGF0dXN0cnVlLCBtYXBydWxlOwogICAgICAgICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNiQoX2NvbnRleHQ3KSB7CiAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Ny5wcmV2ID0gX2NvbnRleHQ3Lm5leHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhjaGVjay5kYXRhKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c2ZhbHNlID0gMDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c3RydWUgPSAwOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjaGVjay5kYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c2ZhbHNlID0gY2hlY2suZGF0YS5zdGF0dXNmYWxzZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzdHJ1ZSA9IGNoZWNrLmRhdGEuc3RhdHVzdHJ1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYW5zd2VyID09IDEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzdHJ1ZSA9IHN0YXR1c3RydWUgKyBwYXJzZUludCgxKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYW5zd2VyID09IDkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzZmFsc2UgPSBzdGF0dXNmYWxzZSArIHBhcnNlSW50KDEpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcHJ1bGUgPSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleXdvcmRfaWQ6IDEsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkdmVydGlzZV9pZDogX3RoaXMyLnByb2R1Y3RfdG9rZW4sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogMSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5zd2VyOiBhbnN3ZXIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXI6IF90aGlzMi5jdXJyZW50VXNlci5pZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFwX2RpY3Q6IEpTT04ucGFyc2UoZGF0YS5kaWN0X2lkKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzZmFsc2U6IHN0YXR1c2ZhbHNlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXN0cnVlOiBzdGF0dXN0cnVlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghY2hlY2suZGF0YSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDcubmV4dCA9IDExOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDcubmV4dCA9IDk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gTWFwUnVsZUJhc2VkU2VydmljZS51cGRhdGVhbnN3ZXIoY2hlY2suZGF0YS5pZCwgbWFwcnVsZSkudGhlbiggLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIuZ2V0ZGV0YWlsKCk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoIuC4muC4seC4meC4l+C4tuC4geC4quC4s+C5gOC4o+C5h+C4iCIpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQ3Lm5leHQgPSAxMjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgTWFwUnVsZUJhc2VkU2VydmljZS5jcmVhdGVtYXBfcnVsZV9iYXNlZChtYXBydWxlKS50aGVuKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgX3JlZjQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KHJlcykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtYXBfaWQsIHNlbmRhdGEsIF9sb29wMiwgZDsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDYpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ2LnByZXYgPSBfY29udGV4dDYubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHJlcy5kYXRhKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcF9pZCA9IHJlcy5kYXRhLmlkOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VuZGF0YSA9IEpTT04ucGFyc2UoZGF0YS5kaWN0X2lkKTsgLy8gY29uc29sZS5sb2coc2VuZGF0YSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhkaWN0X25hbWUpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9sb29wMiA9IC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfbG9vcDIoZCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2xvb3AyJChfY29udGV4dDUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDI7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIERpY3RTZXJ2aWNlLmdldGRpY3Qoc2VuZGF0YVtkXSkudGhlbiggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBfcmVmNSA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoc2VuKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBydWxlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHNlbi5kYXRhKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBydWxlID0gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFwX3J1bGVfYmFzZWRfaWQ6IG1hcF9pZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpY3RfaWQ6IHNlbmRhdGFbZF0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaWN0X25hbWU6IHNlbi5kYXRhLm5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBubzogZCArIDEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9OyAvLyBjb25zb2xlLmxvZyhydWxlKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSdWxlQmFzZWRTZXJ2aWNlLmNyZWF0ZXJ1bGVfYmFzZWQocnVsZSkudGhlbiggLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIShkICsgMSA9PSBzZW5kYXRhLmxlbmd0aCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi5nZXRkZXRhaWwoKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KCLguJrguLHguJnguJfguLbguIHguKrguLPguYDguKPguYfguIgiKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSkpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgX2NhbGxlZTQpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3g0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfcmVmNS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KCkpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuc3RvcCgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgX2xvb3AyKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZCA9IDA7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghKGQgPCBzZW5kYXRhLmxlbmd0aCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQ2Lm5leHQgPSA5OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LmRlbGVnYXRlWWllbGQoX2xvb3AyKGQpLCAidDAiLCA2KTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZCsrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQ2Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ni5zdG9wKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBfY2FsbGVlNSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9yZWY0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KCkpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ3LnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sIF9jYWxsZWU2KTsKICAgICAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChfeDIpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3JlZjIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIH0oKSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0OC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNyk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGNoZWNra2V5d29yZDogZnVuY3Rpb24gY2hlY2trZXl3b3JkKG5hbWUpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICAvLyBjb25zb2xlLmxvZyhuYW1lKTsKICAgICAgLy8gICBheGlvcy5nZXQoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MS9hcGkva2V5d29yZF9kaWN0cz9uYW1lPTEnKS50aGVuKChyZXMpID0+IHsKICAgICAgLy8gICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhKTsKICAgICAgLy8gZm9yIChsZXQgciA9IDA7IHIgPCByZXMuZGF0YS5sZW5ndGg7IHIrKykgewogICAgICAvLyBuYW1lID0gbmFtZS5yZXBsYWNlQWxsKC8oW1x1RTAwMC1cdUY4RkZdfFx1RDgzQ1tcdURGMDAtXHVERkZGXXxcdUQ4M0RbXHVEQzAwLVx1RERGRl0pL2csICcnKQogICAgICAvLyAgICAgICBuYW1lID0gbmFtZS5yZXBsYWNlQWxsKC8oPzpbXHUyNzAwLVx1MjdiZl18KD86XHVkODNjW1x1ZGRlNi1cdWRkZmZdKXsyfXxbXHVkODAwLVx1ZGJmZl1bXHVkYzAwLVx1ZGZmZl18W1x1MDAyMy1cdTAwMzldXHVmZTBmP1x1MjBlM3xcdTMyOTl8XHUzMjk3fFx1MzAzZHxcdTMwMzB8XHUyNGMyfFx1ZDgzY1tcdWRkNzAtXHVkZDcxXXxcdWQ4M2NbXHVkZDdlLVx1ZGQ3Zl18XHVkODNjXHVkZDhlfFx1ZDgzY1tcdWRkOTEtXHVkZDlhXXxcdWQ4M2NbXHVkZGU2LVx1ZGRmZl18XHVkODNjW1x1ZGUwMS1cdWRlMDJdfFx1ZDgzY1x1ZGUxYXxcdWQ4M2NcdWRlMmZ8XHVkODNjW1x1ZGUzMi1cdWRlM2FdfFx1ZDgzY1tcdWRlNTAtXHVkZTUxXXxcdTIwM2N8XHUyMDQ5fFtcdTI1YWEtXHUyNWFiXXxcdTI1YjZ8XHUyNWMwfFtcdTI1ZmItXHUyNWZlXXxcdTAwYTl8XHUwMGFlfFx1MjEyMnxcdTIxMzl8XHVkODNjXHVkYzA0fFtcdTI2MDAtXHUyNkZGXXxcdTJiMDV8XHUyYjA2fFx1MmIwN3xcdTJiMWJ8XHUyYjFjfFx1MmI1MHxcdTJiNTV8XHUyMzFhfFx1MjMxYnxcdTIzMjh8XHUyM2NmfFtcdTIzZTktXHUyM2YzXXxbXHUyM2Y4LVx1MjNmYV18XHVkODNjXHVkY2NmfFx1MjkzNHxcdTI5MzV8W1x1MjE5MC1cdTIxZmZdKS9nLCAnJyk7CiAgICAgIC8vICAgICAgIG5hbWUgPSBuYW1lLnJlcGxhY2VBbGwoLyhcclxufFxufFxyKS9nbSwgIiIpOwogICAgICAvLyAgICAgICBuYW1lID0gbmFtZS5yZXBsYWNlQWxsKCJfIiwgIiIpOwogICAgICAvLyAgICAgICBuYW1lID0gbmFtZS5yZXBsYWNlQWxsKCIhIiwgIiIpOwogICAgICAvLyAgICAgICBuYW1lID0gbmFtZS5yZXBsYWNlQWxsKCIqIiwgIiIpOwogICAgICAvLyBuYW1lID0gbmFtZS5yZXBsYWNlQWxsKGBfL2xcX2AsICIiKTsvLyBlc2xpbnQtZGlzYWJsZS1saW5lCiAgICAgIC8vIGNvbnNvbGUubG9nKCdodHRwOi8vMTI3LjAuMC4xOjUwMDAvY2hlY2trZXl3b3JkP3RleHQ9JyArIG5hbWUpOwogICAgICB2YXIgZGVzYyA9IHRoaXMuZmluZGRlc2NyaXB0aW9uKG5hbWUpOyAvLyBjb25zb2xlLmxvZygnaHR0cDovLzEyNy4wLjAuMTo1MDAwL3dvcmt0b2tlbmRlc2M/dGV4dD0nK2Rlc2MpOwoKICAgICAgYXhpb3MuZ2V0KExpbmtTZXJ2aWNlLmdldHB5dGhvbmxpbmsoKSArICIvd29ya3Rva2VuZGVzYz90ZXh0PSIgKyBkZXNjKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAvLyBjb25zb2xlLmxvZyhyZXMuZGF0YSk7CiAgICAgICAgX3RoaXMzLmRlc2MgPSByZXMuZGF0YTsKICAgICAgfSk7IC8vIG5hbWUgPSAn4LiC4LmJ4Lit4Lih4Li54Lil4LiI4Liz4LmA4Lie4Liy4Liw4LiC4Lit4LiH4Liq4Li04LiZ4LiE4LmJ4LiyIOC4q+C4oeC4p+C4lOC4q+C4oeC4ueC5iCBTaG9wZWUg4LiB4Lil4Li44LmI4Lih4Lic4Lil4Li04LiV4Lig4Lix4LiT4LiR4LmM4LmA4Lie4Li34LmI4Lit4Liq4Li44LiC4Lig4Liy4LieIOC4reC4suC4q+C4suC4o+C5gOC4quC4o+C4tOC4oeC5gOC4nuC4t+C5iOC4reC4hOC4p+C4suC4oeC4h+C4suC4oSDguJzguLTguKcg4Lii4Li14LmI4Lir4LmJ4LitIEJsdWViaXJkKOC4muC4peC4ueC5gOC4muC4tOC4o+C5jOC4lCkgU3RvcmFnZSBDb25kaXRpb24gTm9ybWFsIOC4m+C4o+C4sOC5gOC4oOC4l+C4quC4suC4o+C4reC4suC4q+C4suC4oyDguKrguLLguKPguJXguYnguLLguJnguK3guJnguLjguKHguLnguKXguK3guLTguKrguKPguLAsIOC4p+C4tOC4leC4suC4oeC4tOC4meC4i+C4tSDguJvguKPguLDguYDguJfguKjguJXguYnguJnguIHguLPguYDguJnguLTguJTguKrguLTguJnguITguYnguLIg4LmE4LiX4LiiIOC4q+C4meC5ieC4suC4l+C4teC5iOC4guC4reC4h+C4reC4suC4q+C4suC4o+C5gOC4quC4o+C4tOC4oeC4quC4s+C4q+C4o+C4seC4muC4hOC4p+C4suC4oeC4h+C4suC4oSDguJTguLnguYHguKXguKrguLTguKcsIOC4m+C5ieC4reC4h+C4geC4seC4meC4o+C4tOC5ieC4p+C4o+C4reC4oiDguJvguKPguLDguYDguKDguJfguIHguLLguKPguKvguYjguK0g4Lir4LmI4Lit4Lij4Lin4Lih4LiB4Lix4LiZIOC5gOC4nuC4qCDguJfguLHguYnguIfguKrguK3guIfguYDguJ7guKgg4Lit4Liy4Lii4Li44LiB4Liy4Lij4LmA4LiB4LmH4Lia4Lij4Lix4LiB4Lip4LiyIDEyIOC5gOC4lOC4t+C4reC4mSDguJvguKPguLDguYDguKDguJfguILguK3guIfguJzguKXguLTguJXguKDguLHguJPguJHguYzguKLguLIg4LmB4LiE4Lib4LiL4Li54LilIOC4q+C4oeC4suC4ouC5gOC4peC4guC5g+C4muC4reC4meC4uOC4jeC4suC4lS/guK3guKIuIDMwLTEtMjY3NjQtNS0wMDUxIOC4iOC4s+C4meC4p+C4meC4quC4tOC4meC4hOC5ieC4siAxNzkwMSDguKrguYjguIfguIjguLLguIEg4LiI4Lix4LiH4Lir4Lin4Lix4LiU4LiZ4LiE4Lij4Lij4Liy4LiK4Liq4Li14Lih4LiyIOC4o+C4suC4ouC4peC4sOC5gOC4reC4teC4ouC4lOC4quC4tOC4meC4hOC5ieC4siDguKfguLTguJXguLLguKHguLTguJnguIvguLUg4Lie4Lil4Lix4LiqIOC4leC4o+C4siDguJrguKXguLnguYDguJrguLTguKPguYzguJQg4LiV4Lij4LiyIOC4muC4peC4ueC5gOC4muC4tOC4o+C5jOC4lCDguILguJnguLLguJQgMTAwMCDguKHguLTguKXguKXguLTguIHguKPguLHguKEgNjAg4LmB4LiE4Lib4LiL4Li54LilIOC5gOC4o+C4l+C4guC4suC4ouC4quC5iOC4hyDguIrguYjguKfguIfguKPguLLguITguLLguJfguLXguYggMSDguKrguLHguYjguIfguIvguLfguYnguK3guJXguLHguYnguIfguYHguJXguYggNSDguIHguKPguLDguJvguLjguIHguILguLbguYnguJnguYTguJsg4LiW4Li24LiHIDIwIOC4geC4o+C4sOC4m+C4uOC4gSDguKPguLLguITguLLguIHguKPguLDguJvguLjguIHguKXguLAgOTMg4Lia4Liy4LiXIOC4iuC5iOC4p+C4h+C4o+C4suC4hOC4suC4l+C4teC5iCAyIOC4quC4seC5iOC4h+C4i+C4t+C5ieC4reC4leC4seC5ieC4h+C5geC4leC5iCAyMSDguIHguKPguLDguJvguLjguIHguILguLbguYnguJnguYTguJsg4LiW4Li24LiHIDUwIOC4geC4o+C4sOC4m+C4uOC4gSDguKPguLLguITguLLguIHguKPguLDguJvguLjguIHguKXguLAgOTAg4Lia4Liy4LiXIOC4iuC5iOC4p+C4h+C4o+C4suC4hOC4suC4l+C4teC5iCAzIOC4quC4seC5iOC4h+C4i+C4t+C5ieC4reC4leC4seC5ieC4h+C5geC4leC5iCA1MSDguIHguKPguLDguJvguLjguIHguILguLbguYnguJnguYTguJsg4LiW4Li24LiHIDEwMCDguIHguKPguLDguJvguLjguIEg4Lij4Liy4LiE4Liy4LiB4Lij4Liw4Lib4Li44LiB4Lil4LiwIDg3IOC4muC4suC4lyDguIrguYjguKfguIfguKPguLLguITguLLguJfguLXguYggNCDguKrguLHguYjguIfguIvguLfguYnguK3guJXguLHguYnguIfguYHguJXguYggMTAwIOC4geC4o+C4sOC4m+C4uOC4geC4guC4tuC5ieC4meC5hOC4myAuLi4uLi4uLi4uLi4uLi4uLi4uLi4g4Lij4Liy4LiE4Liy4LiB4Lij4Liw4Lib4Li44LiB4Lil4LiwIDg1IOC4muC4suC4lyBWaXRhbWluIEMgUGx1cyBEaWV0YXJ5IFN1cHBsZW1lbnQgUHJvZHVjdCBCbHVlYmlyZCBCcmFuZCDguJzguKXguLTguJXguKDguLHguJPguJHguYzguYDguKrguKPguLTguKHguK3guLLguKvguLLguKPguKfguLTguJXguLLguKHguLTguJnguIvguLUg4Lie4Lil4Lix4LiqIOC4leC4o+C4siDguJrguKXguLnguYDguJrguLTguKPguYzguJQg4Liq4LmI4Lin4LiZ4Lib4Lij4Liw4LiB4Lit4Lia4LiX4Lix4LmJ4LiH4Lir4Lih4LiU4LmD4LiZIDEg4LmB4LiE4Lib4LiL4Li54LilIOC4quC5iOC4p+C4meC4m+C4o+C4sOC4geC4reC4muC4l+C4teC5iOC4quC4s+C4hOC4seC4jSAoQWN0aXZlIEluZ3JlZGllbnQpIFZJVEFNSU4gQyAoMTAwJSkgLSA2MCDguKHguLTguKXguKXguLTguIHguKPguLHguKEgQ0lUUlVTIEJJT0ZMQVZPTk9JRCBQT1dERVIgLSA2MzAg4Lih4Li04Lil4Lil4Li04LiB4Lij4Lix4LihIEJBUkJBRE9TQ0hFUlJZIFBPV0RFUi9BQ0VST0xBIENIRVJSWSBQT1dERVIgKOC4nOC4h+C4muC4suC4o+C5jOC5gOC4muC5guC4lOC4quC5gOC4iuC4reC4o+C5jOC4o+C4tS/guJzguIfguK3guLDguYDguIvguYLguKPguKXguLLguYDguIrguK3guKPguYzguKPguLUpIChNQUxQSUdISUEgR0xBQlJBIEwuKSDguJzguKUgLSA2MCDguKHguLTguKXguKXguLTguIHguKPguLHguKEgUk9TRUhJUCBQT1dERVIgKOC4nOC4h+C5guC4o+C4quC4ruC4tOC4m+C4quC5jCkgKFJPU0EgQ0FOSU5BIEwuKSDguJzguKUgLSA2MCDguKHguLTguKXguKXguLTguIHguKPguLHguKEgUnV0aW4gLSAzMCDguKHguLTguKXguKXguLTguIHguKPguLHguKEgSU5ESUFOIEdPT1NFQkVSUlkgUE9XREVSICjguJzguIfguKHguLDguILguLLguKHguJvguYnguK3guKEpIChQSFlMTEFOVEhVUyBFTUJMSUNBIEwuICkg4Lic4LilIC0gNjAg4Lih4Li04Lil4Lil4Li04LiB4Lij4Lix4LihIOC4quC5iOC4p+C4meC4m+C4o+C4sOC4geC4reC4muC4l+C4teC5iOC5hOC4oeC5iOC4quC4s+C4hOC4seC4jSAoSW5hY3RpdmUgSW5ncmVkaWVudCkgRURJQkxFIEdFTEFUSU4gNDI4IC0gOTguNSDguKHguLTguKXguKXguLTguIHguKPguLHguKEgVElUQU5JVU0gRElPWElERSAxNzEgLTEuOTUg4Lih4Li04Lil4Lil4Li04LiB4Lij4Lix4LihIOC4p+C4tOC4mOC4teC4o+C4seC4muC4m+C4o+C4sOC4l+C4suC4mSDguITguKPguLHguYnguIfguKXguLAgMS0yIOC5geC4hOC4m+C4i+C4ueC4pSDguKvguKXguLHguIfguK3guLLguKvguLLguKPguYDguIrguYnguLIg4LmA4Lil4LiC4LiX4Li14LmIIOC4rS7guKIuIDMwLTEtMjY3NjQtNS0wMDUxIOC4hOC4s+C5gOC4leC4t+C4reC4mSDguITguKfguKPguYDguIHguYfguJrguYPguKvguYnguJ7guYnguJnguYHguKrguIfguYHguJTguIfguYHguKXguLDguITguKfguLLguKHguIrguLfguYnguJkg4LmA4LiU4LmH4LiBIOC4quC4leC4o+C4teC4oeC4teC4hOC4o+C4o+C4oOC5jCDguYHguKXguLDguKrguJXguKPguLXguYPguKvguYnguJnguKHguJrguLjguJXguKPguYTguKHguYjguITguKfguKPguKPguLHguJrguJvguKPguLDguJfguLLguJkg4LiE4Lin4Lij4LiB4Li04LiZ4Lit4Liy4Lir4Liy4Lij4Lir4Lil4Liy4LiB4Lir4Lil4Liy4Lii4LmD4Lir4LmJ4LiE4Lij4LiaIDUg4Lir4Lih4Li54LmIIOC5g+C4meC4quC4seC4lOC4quC5iOC4p+C4meC4l+C4teC5iOC5gOC4q+C4oeC4suC4sOC4quC4oeC5gOC4m+C5h+C4meC4m+C4o+C4sOC4iOC4syDguYTguKHguYjguKHguLXguJzguKXguYPguJnguIHguLLguKPguJvguYnguK3guIfguIHguLHguJnguKvguKPguLfguK3guKPguLHguIHguKnguLLguYLguKPguIQg4Liq4Lij4Lij4Lie4LiE4Li44LiTIOC4m+C4o+C4sOC5guC4ouC4iuC4meC5jOC4guC4reC4h+C4geC4suC4o+C4geC4tOC4meC4p+C4tOC4leC4suC4oeC4tOC4meC4i+C4tSDvuI/guJfguLPguYPguKvguYnguKvguJnguYnguLLguYTguKHguYjguYLguJfguKPguKEg4Lir4LiZ4LmJ4Liy4LiV4Liy4Liq4LiU4LmD4LiqIO+4j+C4iuC5iOC4p+C4ouC4n+C4t+C5ieC4meC4n+C4ueC4nOC4tOC4p+C4q+C4meC5ieC4siDguKrguLTguKcg4Lid4LmJ4LiyIOC4geC4o+C4sCDguKPguLTguYnguKfguKPguK3guKIg4LiU4Li54LiI4Liy4LiH4Lil4LiHIO+4j+C4nOC4tOC4p+C4nuC4o+C4o+C4k+C4meC4uOC5iOC4oeC5gOC4o+C4teC4ouC4muC5gOC4meC4teC4ouC4miDguIrguLjguYjguKHguIrguLfguYjguJkg77iP4Lir4LiZ4LmJ4Liy4LiV4Liy4LiU4Li54LmA4LiU4LmH4LiB4LmB4Lil4Liw4LmA4LiU4LmJ4LiH4LiC4Li24LmJ4LiZIO+4j+C4nOC4tOC4p+C4q+C4meC5ieC4suC4guC4suC4p+C4reC4oeC4iuC4oeC4nuC4uSDguKrguLTguJnguITguYnguLLguJXguLHguJTguKPguK3guJrguJfguLjguIHguKfguLHguJnguYDguKfguKXguLIg4LiV4Lix4LiU4Lij4Lit4Lia4LmA4Lin4Lil4LiyIDEyLjAwIOC4mSDguILguK3guIfguJfguLjguIHguKfguLHguJkg4LmB4LiI4LmJ4LiH4LmC4Lit4LiZ4LmA4LiB4Li04LiZ4LmA4Lin4Lil4LiyIOC4quC5iOC4h+C4o+C4reC4muC4p+C4seC4meC4luC4seC4lOC5hOC4m+C4meC4sOC4iOC5iuC4sCDguKrguYjguIfguJ7guLHguKrguJTguLjguJfguLjguIHguKfguLHguJkg4LmA4Lin4LmJ4LiZ4Lin4Lix4LiZ4Lit4Liy4LiX4Li04LiV4Lii4LmMIOC5geC4peC4sOC4p+C4seC4meC4q+C4ouC4uOC4lOC4meC4seC4geC4guC4seC4leC4pOC4geC4qeC5jCDguILguK3guJrguJ7guKPguLDguITguLjguJPguKXguLnguIHguITguYnguLLguJfguLjguIHguJfguYjguLLguJkg4LiX4Li14LmI4LmE4Lin4LmJ4Lin4Liy4LiH4LmD4LiI4Lic4Lil4Li04LiV4Lig4Lix4LiT4LiR4LmM4LiC4Lit4LiH4LmA4Lij4Liy4LmA4Liq4Lih4Lit4Lih4LiyXy9sXF8nCiAgICAgIC8vIGNvbnNvbGUubG9nKCdodHRwOi8vMTI3LjAuMC4xOjUwMDAvY2hlY2trZXl3b3JkP3RleHQ9JyArIGRlc2MpOwoKICAgICAgdmFyIGNvbiA9IHsKICAgICAgICBjb250ZW50OiBkZXNjCiAgICAgIH07CiAgICAgIGF4aW9zLnBvc3QoTGlua1NlcnZpY2UuZ2V0cHl0aG9ubGluaygpICsgIi9jaGVja2tleXdvcmQ/dGV4dD0iLCBjb24pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIC8vIGNvbnNvbGUubG9nKHJlcy5kYXRhKTsKICAgICAgICBpZiAocmVzLmRhdGEubGVuZ3RoID4gMCkgewogICAgICAgICAgLy8gdGhpcy5rZXl3b3JkLnB1c2gocmVzLmRhdGEpCiAgICAgICAgICBfdGhpczMua2V5d29yZCA9IHJlcy5kYXRhOwogICAgICAgIH0KICAgICAgfSk7IC8vICAgICB9CiAgICAgIC8vIH0pOwogICAgICAvLyAgICAgICB2YXIgbGlzdGtleXdvcmRzID0gW10KICAgICAgLy8gICAgICAgdmFyIG5hbWVzcGxpdCA9IG5hbWUuc3BsaXQoIiAiKQogICAgICAvLyAgICAgICAvLyBjb25zb2xlLmxvZyhuYW1lc3BsaXQpOwogICAgICAvLyAgICAgICBheGlvcy5nZXQoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MS9hcGkva2V5d29yZF9kaWN0cz9uYW1lPTEnKS50aGVuKChyZXMpID0+IHsKICAgICAgLy8gICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YSk7CiAgICAgIC8vICAgICAgICAgdmFyIGtleWxpc3QgPSBbXQogICAgICAvLyAgICAgICAgIGZvciAobGV0IHIgPSAwOyByIDwgcmVzLmRhdGEubGVuZ3RoOyByKyspIHsKICAgICAgLy8gICAgICAgICAgIHJlcy5kYXRhW3JdLm5hbWUgPSByZXMuZGF0YVtyXS5uYW1lLnJlcGxhY2VBbGwoIi4iLCIiKQogICAgICAvLyAgICAgICAgICAgdmFyIGtrID0gcmVzLmRhdGFbcl0ubmFtZS5zcGxpdCgiICIpCiAgICAgIC8vICAgICAgICAgICBmb3IgKGxldCBrID0gMDsgayA8IGtrLmxlbmd0aDsgaysrKSB7CiAgICAgIC8vICAgICAgICAgICAgIGtleWxpc3QucHVzaChra1trXSkKICAgICAgLy8gICAgICAgICAgIH0KICAgICAgLy8gICAgICAgICB9CiAgICAgIC8vICAgICAgICAgZm9yIChsZXQga2V5ID0gMDsga2V5IDwga2V5bGlzdC5sZW5ndGg7IGtleSsrKSB7CiAgICAgIC8vICAgICAgICAgICBmb3IgKGxldCBuID0gMDsgbiA8IG5hbWVzcGxpdC5sZW5ndGg7IG4rKykgewogICAgICAvLyAgICAgICAgICAgICBpZiAobmFtZXNwbGl0W25dID09IGtleWxpc3Rba2V5XSAmJiBrZXlsaXN0W2tleV0gIT0gJycgJiYgaXNOYU4oa2V5bGlzdFtrZXldKSkgewogICAgICAvLyAgICAgICAgICAgICAgIGxpc3RrZXl3b3Jkcy5wdXNoKGtleWxpc3Rba2V5XSkKICAgICAgLy8gICAgICAgICAgICAgfQogICAgICAvLyAgICAgICAgICAgfQogICAgICAvLyAgICAgICAgIH0KICAgICAgLy8gICAgICAgICAvLyBjb25zb2xlLmxvZyhrZXlsaXN0KTsKICAgICAgLy8gICAgICAgICAvLyBjb25zb2xlLmxvZyhsaXN0a2V5d29yZHMpOwogICAgICAvLyAgICAgICBjb25zb2xlLmxvZyhsaXN0a2V5d29yZHMubGVuZ3RoKTsKICAgICAgLy8gICAgICAgICBpZiAobGlzdGtleXdvcmRzLmxlbmd0aCA9PSAwKSB7CiAgICAgIC8vICAgICAgICAgICB0aGlzLmNvbG9ya2V5ID0gImJhY2tncm91bmQtY29sb3I6I2EzZTlhNCIKICAgICAgLy8gICAgICAgICB9CiAgICAgIC8vICAgICAgICAgdmFyIHJlc3VsdCA9IFtdOwogICAgICAvLyAgICAgICAgIGxpc3RrZXl3b3Jkcy5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0pIHsKICAgICAgLy8gICAgICBpZihyZXN1bHQuaW5kZXhPZihpdGVtKSA8IDApIHsKICAgICAgLy8gICAgICAgICAgcmVzdWx0LnB1c2goaXRlbSk7CiAgICAgIC8vICAgICAgfQogICAgICAvLyB9KTsKICAgICAgLy8gY29uc29sZS5sb2cocmVzdWx0KTsKICAgICAgLy8gbGlzdGtleXdvcmRzID0gcmVzdWx0CiAgICAgIC8vICAgICAgICAgZm9yIChsZXQgbCA9IDA7IGwgPCBsaXN0a2V5d29yZHMubGVuZ3RoOyBsKyspIHsKICAgICAgLy8gICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdodHRwOi8vMTI3LjAuMC4xOjUwMDAvY2hlY2trZXl3b3JkP25hbWU9JyArIG5hbWUrJyYmbmFtZV9yZWFsPScpOwogICAgICAvLyAgICAgICAgICAgYXhpb3MuZ2V0KCdodHRwOi8vMTI3LjAuMC4xOjUwMDAvY2hlY2trZXl3b3JkP25hbWU9JyArIG5hbWUrJyYmbmFtZV9yZWFsPScgKyBsaXN0a2V5d29yZHNbbF0pLnRoZW4oKHJlcykgPT4gewogICAgICAvLyAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhyZXMuZGF0YSk7CiAgICAgIC8vICAgICAgICAgdGhpcy5rZXl3b3JkLnB1c2gocmVzLmRhdGEpCiAgICAgIC8vICAgICAgIH0pOwogICAgICAvLyAgICAgICAgIH0KICAgICAgLy8gICAgICAgfSk7CiAgICB9LAogICAgZmluZGRlc2NyaXB0aW9uOiBmdW5jdGlvbiBmaW5kZGVzY3JpcHRpb24oZGF0YSkgewogICAgICAvLyBjb25zb2xlLmxvZyhkYXRhKTsKICAgICAgdmFyIHRleHQgPSBbIuC4o+C4suC4ouC4peC4sOC5gOC4reC4teC4ouC4lCJdOwogICAgICB2YXIgZmluZGZkYSA9IGRhdGE7CgogICAgICBmb3IgKHZhciB0ID0gMDsgdCA8IHRleHQubGVuZ3RoOyB0KyspIHsKICAgICAgICBpZiAoZmluZGZkYS5pbmRleE9mKHRleHRbdF0pICE9IC0xKSB7CiAgICAgICAgICBmaW5kZmRhID0gZmluZGZkYS5zdWJzdHJpbmcoZmluZGZkYS5pbmRleE9mKHRleHRbdF0pKTsKICAgICAgICB9CiAgICAgIH0gLy8gaWYgKGZpbmRmZGEgPT0gJ+C4reC4suC4q+C4suC4oycpIHsKICAgICAgLy8gICBmaW5kZmRhID0gZmluZGZkYSsgZmluZGZkYSsn4LmA4Liq4Lij4Li04LihJwogICAgICAvLyB9CiAgICAgIC8vIGNvbnNvbGUubG9nKGZpbmRmZGEpOwoKCiAgICAgIHJldHVybiBmaW5kZmRhOwogICAgfSwKICAgIGxvYWRkaWN0OiBmdW5jdGlvbiBsb2FkZGljdCgpIHsKICAgICAgYXhpb3MuZ2V0KExpbmtTZXJ2aWNlLmdldHB5dGhvbmxpbmsoKSArICIvbG9hZGRpY3QiKS50aGVuKCAvKiNfX1BVUkVfXyovX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlOCgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTgkKF9jb250ZXh0OSkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDkucHJldiA9IF9jb250ZXh0OS5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ5LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU4KTsKICAgICAgfSkpKTsKICAgIH0sCiAgICBnZXRkZXRhaWw6IGZ1bmN0aW9uIGdldGRldGFpbCgpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICAvLyB2YXIgdXJsID0gdGhpcy5kYXRhLnVybC5zcGxpdCgiLWkuIik7CiAgICAgIC8vIHZhciB1cmwgPSB0aGlzLmRhdGEudXJsLnNwbGl0KCItaS4iKTsKICAgICAgLy8gdGhpcy5kYXRhLnVybCA9IHVybFswXTsKICAgICAgdmFyIHNlbGVjdHBybyA9IHsKICAgICAgICAvLyB1cmw6IHRoaXMuZGF0YS51cmwsCiAgICAgICAgaWQ6IHRoaXMucHJvZHVjdF90b2tlbgogICAgICB9OwogICAgICBNYXBSdWxlQmFzZWRTZXJ2aWNlLmdldHByb2R1Y3RfdG9rZW4oc2VsZWN0cHJvKS50aGVuKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBfcmVmOCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTkocmVzKSB7CiAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTkkKF9jb250ZXh0MTApIHsKICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTAucHJldiA9IF9jb250ZXh0MTAubmV4dCkgewogICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YSk7IC8vIHZhciBiZXN0ID0gdGhpcy5nZXRNYXgocmVzLmRhdGEua2V5d29yZCwnY291bnRfcnVsZWJhc2VkJykKICAgICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhiZXN0KTsKCiAgICAgICAgICAgICAgICAgIF90aGlzNC5saXN0ID0gcmVzLmRhdGE7CiAgICAgICAgICAgICAgICAgIF90aGlzNC5zdGF0dXMgPSB0cnVlOwogICAgICAgICAgICAgICAgICBfdGhpczQubG9hZGluZyA9IGZhbHNlOyAvLyB2YXIgZGF0YSA9IHsKICAgICAgICAgICAgICAgICAgLy8gICBhZHZlcnRpc2VfaWQ6IHJlcy5kYXRhLmtleXdvcmRbMF0ucHJvZHVjdF90b2tlbl9pZCwKICAgICAgICAgICAgICAgICAgLy8gfTsKICAgICAgICAgICAgICAgICAgLy8gTWFwUnVsZUJhc2VkU2VydmljZS51cGRhdGV3ZWlnaHQoCiAgICAgICAgICAgICAgICAgIC8vICAgcmVzLmRhdGEua2V5d29yZFswXS5tYXBfcnVsZV9iYXNlZF9pZCwKICAgICAgICAgICAgICAgICAgLy8gICBkYXRhCiAgICAgICAgICAgICAgICAgIC8vICkudGhlbigoKSA9PiB7fSk7CiAgICAgICAgICAgICAgICAgIC8vIHRoaXMubGlzdC5rZXl3b3JkID0gW2Jlc3RdCiAgICAgICAgICAgICAgICAgIC8vIHRoaXMuc3RhdHVzID0gdHJ1ZQoKICAgICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDEwLnN0b3AoKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sIF9jYWxsZWU5KTsKICAgICAgICB9KSk7CgogICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3g1KSB7CiAgICAgICAgICByZXR1cm4gX3JlZjguYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICB9OwogICAgICB9KCkpOwogICAgfSwKICAgIHNlYXJjaDogZnVuY3Rpb24gc2VhcmNoKCkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxOCgpIHsKICAgICAgICB2YXIgY29uLCBjb250ZW50OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTgkKF9jb250ZXh0MjApIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyMC5wcmV2ID0gX2NvbnRleHQyMC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXM1LmxvYWRpbmcgPSB0cnVlOyAvLyB2YXIgdXJsID0gdGhpcy5kYXRhLnVybC5yZXBsYWNlQWxsKCIuIiwnJyk7CiAgICAgICAgICAgICAgICAvLyB1cmwgPSB1cmwuc3BsaXQoIi1pIik7CiAgICAgICAgICAgICAgICAvLyB0aGlzLmRhdGEudXJsID0gdXJsWzBdOwogICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5kYXRhLnVybCk7CgogICAgICAgICAgICAgICAgX3RoaXM1LnByb2NoZWNrID0ge307CiAgICAgICAgICAgICAgICBfdGhpczUucHJvZHVjdCA9IFtdOwogICAgICAgICAgICAgICAgX3RoaXM1LnByb2R1Y3RfdG9rZW4gPSAwOwogICAgICAgICAgICAgICAgY29uID0ge307CiAgICAgICAgICAgICAgICBfY29udGV4dDIwLm5leHQgPSA3OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNS5sb2FkZGljdCgpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBfdGhpczUuc3RhdHVzID0gZmFsc2U7IC8vIGlmICh0aGlzLmRhdGEudXJsID09IG51bGwgfHwgdGhpcy5kYXRhLnVybCA9PSAiIikgewogICAgICAgICAgICAgICAgLy8gICBhbGVydCgi4LiB4Lij4Li44LiT4Liy4LiB4Lij4Lit4LiBIFVSTCIpOwogICAgICAgICAgICAgICAgLy8gfSBlbHNlIAoKICAgICAgICAgICAgICAgIGlmICghKF90aGlzNS5kYXRhLmNvbnRlbnQgPT0gbnVsbCB8fCBfdGhpczUuZGF0YS5jb250ZW50ID09ICIiKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDIwLm5leHQgPSAxMjsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgYWxlcnQoIuC4geC4o+C4uOC4k+C4suC4geC4o+C4reC4geC4guC5ieC4reC4hOC4p+C4suC4oeC5guC4huC4qeC4k+C4siIpOwogICAgICAgICAgICAgICAgX2NvbnRleHQyMC5uZXh0ID0gMzM7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgIGNvbnRlbnQgPSAiIjsKICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBfdGhpczUuZGF0YS5jb250ZW50LnJlcGxhY2VBbGwoLyhbXHVFMDAwLVx1RjhGRl18XHVEODNDW1x1REYwMC1cdURGRkZdfFx1RDgzRFtcdURDMDAtXHVEREZGXSkvZywgIiIpOwogICAgICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQucmVwbGFjZUFsbCgvKD86W1x1MjcwMC1cdTI3YmZdfCg/Olx1ZDgzY1tcdWRkZTYtXHVkZGZmXSl7Mn18W1x1ZDgwMC1cdWRiZmZdW1x1ZGMwMC1cdWRmZmZdfFtcdTAwMjMtXHUwMDM5XVx1ZmUwZj9cdTIwZTN8XHUzMjk5fFx1MzI5N3xcdTMwM2R8XHUzMDMwfFx1MjRjMnxcdWQ4M2NbXHVkZDcwLVx1ZGQ3MV18XHVkODNjW1x1ZGQ3ZS1cdWRkN2ZdfFx1ZDgzY1x1ZGQ4ZXxcdWQ4M2NbXHVkZDkxLVx1ZGQ5YV18XHVkODNjW1x1ZGRlNi1cdWRkZmZdfFx1ZDgzY1tcdWRlMDEtXHVkZTAyXXxcdWQ4M2NcdWRlMWF8XHVkODNjXHVkZTJmfFx1ZDgzY1tcdWRlMzItXHVkZTNhXXxcdWQ4M2NbXHVkZTUwLVx1ZGU1MV18XHUyMDNjfFx1MjA0OXxbXHUyNWFhLVx1MjVhYl18XHUyNWI2fFx1MjVjMHxbXHUyNWZiLVx1MjVmZV18XHUwMGE5fFx1MDBhZXxcdTIxMjJ8XHUyMTM5fFx1ZDgzY1x1ZGMwNHxbXHUyNjAwLVx1MjZGRl18XHUyYjA1fFx1MmIwNnxcdTJiMDd8XHUyYjFifFx1MmIxY3xcdTJiNTB8XHUyYjU1fFx1MjMxYXxcdTIzMWJ8XHUyMzI4fFx1MjNjZnxbXHUyM2U5LVx1MjNmM118W1x1MjNmOC1cdTIzZmFdfFx1ZDgzY1x1ZGNjZnxcdTI5MzR8XHUyOTM1fFtcdTIxOTAtXHUyMWZmXSkvZywgIiAiKTsKICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50LnJlcGxhY2VBbGwoL1x1ZDgzZFtcdWRlMDAtXHVkZTRmXS9nLCAiICIpOwogICAgICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQucmVwbGFjZUFsbCgvKFxyXG58XG58XHIpL2dtLCAiICIpOwogICAgICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQucmVwbGFjZUFsbCgiXyIsICIiKTsKICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50LnJlcGxhY2VBbGwoIiEiLCAiIik7CiAgICAgICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5yZXBsYWNlQWxsKCIqIiwgIiIpOwogICAgICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQucmVwbGFjZUFsbCgiJiIsICIiKTsKICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50LnJlcGxhY2VBbGwoIiMiLCAiIik7CiAgICAgICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5yZXBsYWNlQWxsKCLigKIiLCAiIik7CiAgICAgICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5yZXBsYWNlQWxsKCIrIiwgIiIpOwogICAgICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQucmVwbGFjZUFsbCgiXy9sXyIsICIiKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZQoKICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50LnJlcGxhY2VBbGwoLyhbXHUyNzAwLVx1MjdCRl18W1x1RTAwMC1cdUY4RkZdfFx1RDgzQ1tcdURDMDAtXHVERkZGXXxcdUQ4M0RbXHVEQzAwLVx1REZGRl18W1x1MjAxMS1cdTI2RkZdfFx1RDgzRVtcdUREMTAtXHVEREZGXSkvZywgIiAiKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0MjAubmV4dCA9IDI4OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNS5maW5kZmRhKGNvbnRlbnQpOwoKICAgICAgICAgICAgICBjYXNlIDI4OgogICAgICAgICAgICAgICAgX3RoaXM1LmZkYSA9IF9jb250ZXh0MjAuc2VudDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzNS5mZGEpOyAvLyB2YXIgc2VsZWN0cHJvID0gewogICAgICAgICAgICAgICAgLy8gICB1cmw6IHRoaXMuZGF0YS51cmwsCiAgICAgICAgICAgICAgICAvLyAgIC8vIGlkOiB0aGlzLmN1cnJlbnRVc2VyLmlkLAogICAgICAgICAgICAgICAgLy8gfTsKICAgICAgICAgICAgICAgIC8vIGF3YWl0IE1hcFJ1bGVCYXNlZFNlcnZpY2UuZ2V0cHJvZHVjdF90b2tlbihzZWxlY3Rwcm8pLnRoZW4oYXN5bmMgKHJlcykgPT4gewogICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2cocmVzLmRhdGEpOwogICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coY29udGVudCk7CiAgICAgICAgICAgICAgICAvLyBpZiAocmVzLmRhdGEuaWQpIHsKICAgICAgICAgICAgICAgIC8vICAgdGhpcy5wcm9kdWN0X3Rva2VuID0gcmVzLmRhdGEuaWQ7CiAgICAgICAgICAgICAgICAvLyB9CiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLnByb2R1Y3RfdG9rZW4pOwogICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coTGlua1NlcnZpY2UuZ2V0cHl0aG9ubGluaygpKycvd29ya3Rva2VuZGVzYz90ZXh0PScgKyBjb250ZW50KTsKCiAgICAgICAgICAgICAgICBjb24gPSB7CiAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IGNvbnRlbnQKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBfY29udGV4dDIwLm5leHQgPSAzMzsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5wb3N0KExpbmtTZXJ2aWNlLmdldHB5dGhvbmxpbmsoKSArICIvd29yZHRva2VuZGVzYyIsIGNvbikudGhlbiggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgdmFyIF9yZWY5ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMTcocmVzKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIGRlczsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTE3JChfY29udGV4dDE5KSB7CiAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTkucHJldiA9IF9jb250ZXh0MTkubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHZhciBzZW50ZW5jZSA9IHJlcy5kYXRhLnNlbnRlbnQucmVwbGFjZUFsbCgiPHNwYW5zdHlsZSIsICI8c3BhbiBzdHlsZSIpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzID0gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IF90aGlzNS5kYXRhLnVybCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VudGVuY2U6IGNvbnRlbnQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbnRlbmNlX2tleXdvcmQ6IHJlcy5kYXRhLnNlbnRlbnQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleXdvcmRfaWQ6IHJlcy5kYXRhLmtleXdvcmRJZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiAxCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGVzKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIShfdGhpczUucHJvZHVjdF90b2tlbiA9PSAwKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDE5Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDE5Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIE1hcFJ1bGVCYXNlZFNlcnZpY2UuY3JlYXRlcHJvZHVjdF90b2tlbihkZXMpLnRoZW4oIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBfcmVmMTAgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxMyhwcm9kdWN0dG9rZW4pIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTEzJChfY29udGV4dDE1KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTUucHJldiA9IF9jb250ZXh0MTUubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHByb2R1Y3R0b2tlbik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpczUucHJvZHVjdF90b2tlbiA9IHByb2R1Y3R0b2tlbi5kYXRhLmlkOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQxNS5uZXh0ID0gNDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczUuY2hlY2tmZGEoY29udGVudCwgX3RoaXM1LnByb2R1Y3RfdG9rZW4pOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhwcm9kdWN0dG9rZW4pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXM1LnByb2R1Y3RfdG9rZW4gPSBwcm9kdWN0dG9rZW4uZGF0YS5pZDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbiA9IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogY29udGVudAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTsgLy9jb25zb2xlLmxvZyhjb24pOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0MTUubmV4dCA9IDg7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdChMaW5rU2VydmljZS5nZXRweXRob25saW5rKCkgKyAiL2NoZWNra2V5d29yZCIsIGNvbikudGhlbiggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIF9yZWYxMSA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTEyKHJlcykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBfbG9vcDMsIHIsIHNlbnRlbmNldG9rZW4sIGFkdmVydGlzZTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxMiQoX2NvbnRleHQxNCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDE0LnByZXYgPSBfY29udGV4dDE0Lm5leHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEocmVzLmRhdGEubGVuZ3RoID4gMCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQxNC5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9sb29wMyA9IC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfbG9vcDMocikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2xvb3AzJChfY29udGV4dDEzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQxMy5wcmV2ID0gX2NvbnRleHQxMy5uZXh0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZW50ZW5jZXRva2VuID0gcmVzLmRhdGFbcl0uc2VudGVudC5yZXBsYWNlQWxsKCciJywgIiIpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZW50ZW5jZXRva2VuID0gc2VudGVuY2V0b2tlbi5yZXBsYWNlQWxsKCI8c3BhbnN0eWxlIiwgIjxzcGFuIHN0eWxlIik7IC8vIHNlbnRlbmNldG9rZW4gPSBzZW50ZW5jZXRva2VuLnJlcGxhY2VBbGwoJyJjb2xvcjpyZWRcIicsJyJjb2xvcjpyZWQiJykKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gc2VudGVuY2V0b2tlbiA9IHNlbnRlbmNldG9rZW4ucmVwbGFjZUFsbCgnImNvbG9yOnJlZFwiJywnImNvbG9yOnJlZCInKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkdmVydGlzZSA9IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2R1Y3RfdG9rZW5faWQ6IF90aGlzNS5wcm9kdWN0X3Rva2VuLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5d29yZF9kaWN0X2lkOiByZXMuZGF0YVtyXS5rZXl3b3JkX2RpY3RfaWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaWN0X2lkOiByZXMuZGF0YVtyXS5kaWN0X2lkLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGljdF9uYW1lOiByZXMuZGF0YVtyXS5kaWN0X25hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZW50ZW50OiBzZW50ZW5jZXRva2VuLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VuOiByZXMuZGF0YVtyXS5zZW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9OyAvLyBjb25zb2xlLmxvZyh0aGlzLnByb2R1Y3RfdG9rZW4pOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDEzLm5leHQgPSA1OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBBZHZlcnRpc2VTZXJ2aWNlLmNyZWF0ZWFkdmVydGlzZShhZHZlcnRpc2UpLnRoZW4oIC8qI19fUFVSRV9fKi9fYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxMSgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBnZXRwcm90b2tlbjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTEkKF9jb250ZXh0MTIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTIucHJldiA9IF9jb250ZXh0MTIubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIShyICsgMSA9PSByZXMuZGF0YS5sZW5ndGgpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQxMi5uZXh0ID0gNDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0cHJvdG9rZW4gPSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBfdGhpczUucHJvZHVjdF90b2tlbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDEyLm5leHQgPSA0OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gTWFwUnVsZUJhc2VkU2VydmljZS5nZXRwcm9kdWN0a2V5d29yZChnZXRwcm90b2tlbikudGhlbiggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgX3JlZjEzID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMTAocHJvKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTEwJChfY29udGV4dDExKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDExLnByZXYgPSBfY29udGV4dDExLm5leHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQxMS5uZXh0ID0gMjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNS50b2tlbmRhdGEocHJvLmRhdGEpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDExLnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIF9jYWxsZWUxMCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94OSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9yZWYxMy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0oKSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTIuc3RvcCgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgX2NhbGxlZTExKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSkpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDEzLnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIF9sb29wMyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHIgPSAwOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIShyIDwgcmVzLmRhdGEubGVuZ3RoKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDE0Lm5leHQgPSA5OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxNC5kZWxlZ2F0ZVlpZWxkKF9sb29wMyhyKSwgInQwIiwgNik7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHIrKzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0MTQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQxNC5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0MTQubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNS5nZXRkZXRhaWwoKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTQuc3RvcCgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgX2NhbGxlZTEyKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChfeDgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3JlZjExLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KCkpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDE1LnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIF9jYWxsZWUxMyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3g3KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9yZWYxMC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSgpKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQxOS5uZXh0ID0gOTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDE5Lm5leHQgPSA5OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEFkdmVydGlzZVNlcnZpY2UuZGVsZXRlYWR2ZXJ0aXNlKF90aGlzNS5wcm9kdWN0X3Rva2VuKS50aGVuKCAvKiNfX1BVUkVfXyovX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMTYoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTYkKF9jb250ZXh0MTgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDE4LnByZXYgPSBfY29udGV4dDE4Lm5leHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0MTgubmV4dCA9IDI7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIE1hcFJ1bGVCYXNlZFNlcnZpY2UudXBkYXRwcm9kdWN0X3Rva2VuKF90aGlzNS5wcm9kdWN0X3Rva2VuLCBkZXMpLnRoZW4oIC8qI19fUFVSRV9fKi9fYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxNSgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTUkKF9jb250ZXh0MTcpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTcucHJldiA9IF9jb250ZXh0MTcubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDE3Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXM1LmNoZWNrZmRhKGNvbnRlbnQsIF90aGlzNS5wcm9kdWN0X3Rva2VuKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbiA9IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBjb250ZW50CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07IC8vY29uc29sZS5sb2coY29uKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coY29uKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXhpb3MucG9zdChMaW5rU2VydmljZS5nZXRweXRob25saW5rKCkgKyAiL2NoZWNra2V5d29yZCIsIGNvbikudGhlbiggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgX3JlZjE2ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMTQocmVzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgX2xvb3A0LCByLCBzZW50ZW5jZXRva2VuLCBhZHZlcnRpc2U7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxNCQoX2NvbnRleHQxNikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQxNi5wcmV2ID0gX2NvbnRleHQxNi5uZXh0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2cocmVzLmRhdGEpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzLmRhdGEubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9sb29wNCA9IGZ1bmN0aW9uIF9sb29wNChyKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZW50ZW5jZXRva2VuID0gcmVzLmRhdGFbcl0uc2VudGVudC5yZXBsYWNlQWxsKCciJywgIiIpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbGluZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VudGVuY2V0b2tlbiA9IHNlbnRlbmNldG9rZW4ucmVwbGFjZUFsbCgiPHNwYW5zdHlsZSIsICI8c3BhbiBzdHlsZSIpOyAvLyBzZW50ZW5jZXRva2VuID0gc2VudGVuY2V0b2tlbi5yZXBsYWNlQWxsKCciY29sb3I6cmVkXCInLCciY29sb3I6cmVkIicpCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gc2VudGVuY2V0b2tlbiA9IHNlbnRlbmNldG9rZW4ucmVwbGFjZUFsbCgnImNvbG9yOnJlZFwiJywnImNvbG9yOnJlZCInKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWR2ZXJ0aXNlID0gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9kdWN0X3Rva2VuX2lkOiBfdGhpczUucHJvZHVjdF90b2tlbiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5d29yZF9kaWN0X2lkOiByZXMuZGF0YVtyXS5rZXl3b3JkX2RpY3RfaWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpY3RfaWQ6IHJlcy5kYXRhW3JdLmRpY3RfaWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpY3RfbmFtZTogcmVzLmRhdGFbcl0uZGljdF9uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZW50ZW50OiBzZW50ZW5jZXRva2VuLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZW46IHJlcy5kYXRhW3JdLnNlbiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiAxCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9OyAvLyBjb25zb2xlLmxvZyh0aGlzLnByb2R1Y3RfdG9rZW4pOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMucHJvZHVjdF90b2tlbik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBZHZlcnRpc2VTZXJ2aWNlLmNyZWF0ZWFkdmVydGlzZShhZHZlcnRpc2UpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAociArIDEgPT0gcmVzLmRhdGEubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGdldHByb3Rva2VuID0gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBfdGhpczUucHJvZHVjdF90b2tlbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTWFwUnVsZUJhc2VkU2VydmljZS5nZXRwcm9kdWN0a2V5d29yZChnZXRwcm90b2tlbikudGhlbihmdW5jdGlvbiAocHJvKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhwcm8uZGF0YSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpczUudG9rZW5kYXRhKHByby5kYXRhKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChyID0gMDsgciA8IHJlcy5kYXRhLmxlbmd0aDsgcisrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfbG9vcDQocik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTYuc3RvcCgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgX2NhbGxlZTE0KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gxMCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9yZWYxNi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0oKSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTcuc3RvcCgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgX2NhbGxlZTE1KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSkpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDE4LnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIF9jYWxsZWUxNik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSkpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDE5LnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sIF9jYWxsZWUxNyk7CiAgICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3g2KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9yZWY5LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICB9KCkpOwoKICAgICAgICAgICAgICBjYXNlIDMzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyMC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMTgpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBnZXRNYXg6IGZ1bmN0aW9uIGdldE1heChhcnIsIHByb3ApIHsKICAgICAgdmFyIG1heDsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaWYgKG1heCA9PSBudWxsIHx8IHBhcnNlSW50KGFycltpXVtwcm9wXSkgPiBwYXJzZUludChtYXhbcHJvcF0pKSBtYXggPSBhcnJbaV07CiAgICAgIH0KCiAgICAgIHJldHVybiBtYXg7CiAgICB9LAogICAgZ2V0TWF4bGVuZ3RoOiBmdW5jdGlvbiBnZXRNYXhsZW5ndGgoYXJyLCBwcm9wKSB7CiAgICAgIHZhciBtYXg7CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykgewogICAgICAgIGlmIChtYXggPT0gbnVsbCB8fCBwYXJzZUludChhcnJbaV1bcHJvcF0pID4gcGFyc2VJbnQobWF4W3Byb3BdKSkgbWF4ID0gYXJyW2ldOwogICAgICB9CgogICAgICByZXR1cm4gbWF4OwogICAgfSwKICAgIGdldEFsbE1heEFycmF5OiBmdW5jdGlvbiBnZXRBbGxNYXhBcnJheShhcnIsIHZhbHVlKSB7CiAgICAgIHZhciBhcnJheSA9IFtdOwogICAgICBhcnIubWFwKGZ1bmN0aW9uIChudW0sIGlkeCkgewogICAgICAgIGlmIChudW0uYWxsY291bnQgPT0gdmFsdWUpIHsKICAgICAgICAgIGFycmF5LnB1c2goYXJyW2lkeF0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHJldHVybiBhcnJheTsKICAgIH0sCiAgICB0b2tlbmRhdGE6IGZ1bmN0aW9uIHRva2VuZGF0YShsaXN0KSB7CiAgICAgIHZhciBfdGhpczYgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIzKCkgewogICAgICAgIHZhciBfbG9vcDUsIGwsIG1hcDsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyMyQoX2NvbnRleHQyNikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDI2LnByZXYgPSBfY29udGV4dDI2Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpZiAoIShsaXN0LmtleXdvcmQubGVuZ3RoID4gMCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyNi5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9sb29wNSA9IC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfbG9vcDUobCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2xvb3A1JChfY29udGV4dDI1KSB7CiAgICAgICAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyNS5wcmV2ID0gX2NvbnRleHQyNS5uZXh0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWxpc3Qua2V5d29yZFtsXS5rZXl3b3JkX2RpY3RfaWQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0MjUubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgIG1hcCA9IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBsaXN0LmtleXdvcmRbbF0uaWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IGxpc3Qua2V5d29yZFtsXS5rZXl3b3JkX2RpY3RfaWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXl3b3JkX2lkOiBsaXN0LmtleXdvcmRbbF0uZGljdF9pZAogICAgICAgICAgICAgICAgICAgICAgICAgIH07IC8vIGNvbnNvbGUubG9nKG1hcCk7CgogICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0MjUubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIE1hcFJ1bGVCYXNlZFNlcnZpY2UuZ2V0bWFwcHJvZHVjdChtYXApLnRoZW4oIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgX3JlZjE3ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMjIocmVzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBtYXh2YWx1ZSwgaSwgYmVzdGRhdGEsIGJlc3QsIHJ1bGVfYmFzZWRfbmFtZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyMiQoX2NvbnRleHQyNCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MjQucHJldiA9IF9jb250ZXh0MjQubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2cocmVzLmRhdGEpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1heHZhbHVlID0gX3RoaXM2LmdldE1heChyZXMuZGF0YSwgImFsbGNvdW50Iik7IC8vIGNvbnNvbGUubG9nKG1heHZhbHVlLmFsbGNvdW50KTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2cobWF4dmFsdWUuYWxsY291bnQpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGkgPSBfdGhpczYuZ2V0QWxsTWF4QXJyYXkocmVzLmRhdGEsIG1heHZhbHVlLmFsbGNvdW50KTsgLy8gY29uc29sZS5sb2coaSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJlc3RkYXRhID0gX3RoaXM2LmdldE1heChpLCAibGVuZ3RoIik7IC8vIGNvbnNvbGUubG9nKGJlc3RkYXRhKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBnZXRBbGxJbmRleGVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coYmVzdGRhdGEpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhiZXN0ZGF0YSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZ2V0QWxsSW5kZXhlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGJlc3RkYXRhKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiZXN0ID0gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IGxpc3Qua2V5d29yZFtsXS5pZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbnRlbmNlOiBiZXN0ZGF0YQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coYmVzdCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcnVsZV9iYXNlZF9uYW1lID0gYmVzdGRhdGEubmFtZS50b1N0cmluZygpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJ1bGVfYmFzZWRfbmFtZSA9IHJ1bGVfYmFzZWRfbmFtZS5yZXBsYWNlQWxsKCIsIiwgIiIpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJ1bGVfYmFzZWRfbmFtZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQyNC5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChMaW5rU2VydmljZS5nZXRweXRob25saW5rKCkgKyAiL2xvYWRkaWN0P3dvcmQ9IiArIHJ1bGVfYmFzZWRfbmFtZSkudGhlbiggLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIxKCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyMSQoX2NvbnRleHQyMykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyMy5wcmV2ID0gX2NvbnRleHQyMy5uZXh0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0MjMubmV4dCA9IDI7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBNYXBSdWxlQmFzZWRTZXJ2aWNlLmdldGJlc3RydWxlYmFzZWQoYmVzdCkudGhlbiggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgX3JlZjE5ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMjAocmVzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcnVsZWJhc2VkOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyMCQoX2NvbnRleHQyMikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyMi5wcmV2ID0gX2NvbnRleHQyMi5uZXh0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcnVsZWJhc2VkID0gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50X3J1bGViYXNlZDogcmVzLmRhdGEuY291bnQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VudGVuY2VfcnVsZWJhc2U6IHJlcy5kYXRhLnNlbnRlbmNlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJ1bGVfYmFzZWRfaWQ6IHJlcy5kYXRhLnJ1bGVfYmFzZWRfaWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcnVsZV9iYXNlZF9uYW1lOiByZXMuZGF0YS5ydWxlX2Jhc2VkX25hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFwX3J1bGVfYmFzZWRfaWQ6IHJlcy5kYXRhLm1hcF9pZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhydWxlYmFzZWQpOyAvLyBjb25zb2xlLmxvZyhsaXN0LmtleXdvcmRbbF0uaWQpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQyMi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIE1hcFJ1bGVCYXNlZFNlcnZpY2UudXBkYXRlcnVsZWJhc2VkKGxpc3Qua2V5d29yZFtsXS5pZCwgcnVsZWJhc2VkKS50aGVuKCAvKiNfX1BVUkVfXyovX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMTkoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxOSQoX2NvbnRleHQyMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIxLnByZXYgPSBfY29udGV4dDIxLm5leHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIShsICsgMSA9PSBsaXN0LmtleXdvcmQubGVuZ3RoKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDIxLm5leHQgPSAzOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDIxLm5leHQgPSAzOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNi5nZXRkZXRhaWwoKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyMS5zdG9wKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBfY2FsbGVlMTkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSkpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIyLnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIF9jYWxsZWUyMCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94MTIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfcmVmMTkuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KCkpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIzLnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIF9jYWxsZWUyMSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MjQuc3RvcCgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgX2NhbGxlZTIyKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94MTEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9yZWYxNy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICAgICAgICB9KCkpOwoKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDI1LnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sIF9sb29wNSk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGwgPSAwOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBpZiAoIShsIDwgbGlzdC5rZXl3b3JkLmxlbmd0aCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyNi5uZXh0ID0gODsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MjYuZGVsZWdhdGVZaWVsZChfbG9vcDUobCksICJ0MCIsIDUpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBsKys7CiAgICAgICAgICAgICAgICBfY29udGV4dDI2Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIF9jb250ZXh0MjYubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfY29udGV4dDI2Lm5leHQgPSAxMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczYuZ2V0ZGV0YWlsKCk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDI2LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyMyk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGNvbXBhcmU6IGZ1bmN0aW9uIGNvbXBhcmUobGlzdCkgewogICAgICB2YXIgX3RoaXM3ID0gdGhpczsKCiAgICAgIHZhciBfbG9vcDYgPSBmdW5jdGlvbiBfbG9vcDYoaykgewogICAgICAgIC8vIGNvbnNvbGUubG9nKGxpc3Qua2V5d29yZFtrXSk7CiAgICAgICAgZGljdF9pZCA9IEpTT04ucGFyc2UobGlzdC5rZXl3b3JkW2tdLmRpY3RfaWQpOyAvLyB2YXIgcnVsZWJhc2VkID0gSlNPTi5wYXJzZShsaXN0LmtleXdvcmRba10ucnVsZWJhc2UpCiAgICAgICAgLy8gY29uc29sZS5sb2cobGlzdC5rZXl3b3JkW2tdLnJ1bGViYXNlZCk7CgogICAgICAgIGlmIChsaXN0LmtleXdvcmRba10ucnVsZWJhc2UpIHsKICAgICAgICAgIHZhciB1bmlxdWVDaGFyc3J1bGUgPSBsaXN0LmtleXdvcmRba10ucnVsZWJhc2UuZmlsdGVyKGZ1bmN0aW9uIChjLCBpbmRleCkgewogICAgICAgICAgICByZXR1cm4gbGlzdC5rZXl3b3JkW2tdLnJ1bGViYXNlLmluZGV4T2YoYykgPT09IGluZGV4OwogICAgICAgICAgfSk7CiAgICAgICAgICBmaWx0ZXJlZEFycmF5ID0gZGljdF9pZC5maWx0ZXIoZnVuY3Rpb24gKG4pIHsKICAgICAgICAgICAgcmV0dXJuIHVuaXF1ZUNoYXJzcnVsZS5pbmRleE9mKG4pICE9PSAtMTsKICAgICAgICAgIH0pOyAvLyBjb25zb2xlLmxvZyhmaWx0ZXJlZEFycmF5KTsKICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdmaWx0ZXJlZEFycmF5JyxmaWx0ZXJlZEFycmF5KTsKICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdkaWN0X2lkJyxkaWN0X2lkLmxlbmd0aCk7CiAgICAgICAgICAvLyBjb25zb2xlLmxvZyhzdW1kaWN0SWQubGVuZ3RoKTsKCiAgICAgICAgICBwZXJjZW50YWdlID0gMTAwICogcGFyc2VJbnQoZmlsdGVyZWRBcnJheS5sZW5ndGgpIC8gcGFyc2VJbnQoZGljdF9pZC5sZW5ndGgpOyAvLyBjb25zb2xlLmxvZyhwZXJjZW50YWdlKTsKCiAgICAgICAgICBsaXN0LmtleXdvcmRba10ucGVyY2VudGFnZSA9IHBlcmNlbnRhZ2U7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGxpc3Qua2V5d29yZFtrXS5wZXJjZW50YWdlID0gMDsKICAgICAgICB9CgogICAgICAgIGlmIChrICsgMSA9PSBsaXN0LmtleXdvcmQubGVuZ3RoKSB7CiAgICAgICAgICBfdGhpczcubGlzdCA9IGxpc3Q7IC8vIHRoaXMuc3RhdHVzID0gdHJ1ZTsKICAgICAgICB9CiAgICAgIH07CgogICAgICBmb3IgKHZhciBrID0gMDsgayA8IGxpc3Qua2V5d29yZC5sZW5ndGg7IGsrKykgewogICAgICAgIHZhciBkaWN0X2lkOwogICAgICAgIHZhciBmaWx0ZXJlZEFycmF5OwogICAgICAgIHZhciBwZXJjZW50YWdlOwoKICAgICAgICBfbG9vcDYoayk7CiAgICAgIH0KICAgIH0sCiAgICBnZXRBbGxJbmRleGVzOiBmdW5jdGlvbiBnZXRBbGxJbmRleGVzKGFyciwgdmFsKSB7CiAgICAgIHZhciBpbmRleGVzID0gW10sCiAgICAgICAgICBpID0gLTE7CgogICAgICB3aGlsZSAoKGkgPSBhcnIuaW5kZXhPZih2YWwsIGkgKyAxKSkgIT0gLTEpIHsKICAgICAgICBpbmRleGVzLnB1c2goaSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBpbmRleGVzOwogICAgfSwKICAgIGZpbmRmZGE6IGZ1bmN0aW9uIGZpbmRmZGEoZGF0YSkgewogICAgICB2YXIgdGV4dCA9IFsi4Lir4Lih4Liy4Lii4LmA4Lil4LiC4LmD4Lia4Lit4LiZ4Li44LiN4Liy4LiVL+C4reC4oi4iXTsgLy8gdmFyIGVuZCA9IFsnJ10KCiAgICAgIHZhciBmaW5kZmRhID0gZGF0YTsKCiAgICAgIGZvciAodmFyIHQgPSAwOyB0IDwgdGV4dC5sZW5ndGg7IHQrKykgewogICAgICAgIGZpbmRmZGEgPSBmaW5kZmRhLnN1YnN0cmluZyhmaW5kZmRhLmluZGV4T2YodGV4dFt0XSksIGRhdGEubGVuZ3RoKTsKICAgICAgICB2YXIgZW5kaW5kZXggPSB0aGlzLmdldEFsbEluZGV4ZXMoZmluZGZkYSwgIiAiKTsKICAgICAgICBmaW5kZmRhID0gZmluZGZkYS5zdWJzdHJpbmcoZmluZGZkYS5pbmRleE9mKHRleHRbdF0pLCBlbmRpbmRleFsxXSk7CiAgICAgIH0gLy8gY29uc29sZS5sb2coZmluZGZkYSk7CgoKICAgICAgZmluZGZkYSA9IGZpbmRmZGEucmVwbGFjZUFsbCgi4Lir4Lih4Liy4Lii4LmA4Lil4LiC4LmD4Lia4Lit4LiZ4Li44LiN4Liy4LiVL+C4reC4oi4iLCAiIik7CiAgICAgIGZpbmRmZGEgPSBmaW5kZmRhLnJlcGxhY2VBbGwoIi0iLCAiIik7CiAgICAgIGZpbmRmZGEgPSBmaW5kZmRhLnJlcGxhY2VBbGwoIuKAkyIsICIiKTsKICAgICAgZmluZGZkYSA9IGZpbmRmZGEucmVwbGFjZUFsbCgiICIsICIiKTsgLy8gY29uc29sZS5sb2coZmluZGZkYSk7CiAgICAgIC8vIHZhciByZWdleCA9IC9cZCsvZzsKICAgICAgLy8gdmFyIG1hdGNoZXMgPSBmaW5kZmRhLm1hdGNoKHJlZ2V4KTsgIC8vIGNyZWF0ZXMgYXJyYXkgZnJvbSBtYXRjaGVzCiAgICAgIC8vIGNvbnNvbGUubG9nKG1hdGNoZXNbMF0pOwoKICAgICAgcmV0dXJuIGZpbmRmZGE7CiAgICB9LAogICAgY2hlY2tmZGE6IGZ1bmN0aW9uIGNoZWNrZmRhKGNvbnRlbnQsIGlkKSB7CiAgICAgIHZhciBfdGhpczggPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTI2KCkgewogICAgICAgIHZhciBmZGEsIHByb2R1Y3Rfc3RhdHVzLCB1cmwsIGRhdGEsIG9wdGlvbnM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyNiQoX2NvbnRleHQyOSkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDI5LnByZXYgPSBfY29udGV4dDI5Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfdGhpczguZmRhKTsKCiAgICAgICAgICAgICAgICBpZiAoIV90aGlzOC5mZGEpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyOS5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGZkYSA9IF90aGlzOC5mZGE7CiAgICAgICAgICAgICAgICBwcm9kdWN0X3N0YXR1cyA9IDA7CiAgICAgICAgICAgICAgICB1cmwgPSAiaHR0cHM6Ly90YXdhaWZvcmhlYWx0aC5vcmcvYXBpL29yeW9yL2NoZWNrLXByb2R1Y3QiOwogICAgICAgICAgICAgICAgZGF0YSA9IHsKICAgICAgICAgICAgICAgICAgbnVtYmVyX3NyYzogZmRhCiAgICAgICAgICAgICAgICB9OyAvLyBjb25zb2xlLmxvZyhkYXRhKTsKCiAgICAgICAgICAgICAgICBvcHRpb25zID0gewogICAgICAgICAgICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgIEFjY2VwdDogImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgICAgICAgICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PVVURi04IgogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIF9jb250ZXh0MjkubmV4dCA9IDk7CiAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2godXJsLCBvcHRpb25zKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwogICAgICAgICAgICAgICAgfSkudGhlbiggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgdmFyIF9yZWYyMSA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTI1KGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgY29uOwogICAgICAgICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMjUkKF9jb250ZXh0MjgpIHsKICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyOC5wcmV2ID0gX2NvbnRleHQyOC5uZXh0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFkYXRhLm1lc3NhZ2UpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQyOC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXM4LnByb2R1Y3QucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICItIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGV0YWlsOiBjb250ZW50LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmZGE6IF90aGlzOC5mZGEsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNuY25tOiAiLSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGVwcm86ICItIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGNubm86ICItIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvZHVjdGhhOiAiLSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2R1Y2VuZzogIi0iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaWNlbjogIi0iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBZGRyOiAiLSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5ld2NvZGU6ICItIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiAiLSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRva2VuOiAiIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXM4LnByb2NoZWNrID0gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmZGE6IF90aGlzOC5mZGEsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcGZkYTogIi0iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbmNubTogIi0iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9kdWN0aGE6ICItIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvZHVjZW5nOiAiLSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICItIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvZHVjdF9zdGF0dXM6IDAsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhdF9zdGF0dXM6IDAsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZkYV9zdGF0dXM6IDAsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWVfc3RhdHVzOiAwLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlcHJvOiAiLSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICItIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfTsgLy8gdGhpcy5zdGF0dXMgPSB0cnVlCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQyOC5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coZGF0YSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhkYXRhLmNuY25tLmluY2x1ZGVzKCLguITguIfguK3guKLguLnguYgiKSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLmNuY25tLmluY2x1ZGVzKCLguITguIfguK3guKLguLnguYgiKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9kdWN0X3N0YXR1cyA9IDE7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzOC5jb2xvcmZkYSA9ICJiYWNrZ3JvdW5kLWNvbG9yOiNhM2U5YTQiOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvZHVjdF9zdGF0dXMgPSAzOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzOC5jb2xvcmZkYSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb24gPSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZkYTogZmRhLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9kdWN0aGE6IGRhdGEucHJvZHVjdGhhLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9kdWNlbmc6IGRhdGEucHJvZHVjZW5nLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlcHJvOiBkYXRhLnR5cGVwcm8sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IGNvbnRlbnQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDI4Lm5leHQgPSAxMDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5wb3N0KExpbmtTZXJ2aWNlLmdldHB5dGhvbmxpbmsoKSArICIvY2hlY2tmZGEiLCBjb24pLnRoZW4oIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBfcmVmMjIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyNChyZXMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcHJvOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMjQkKF9jb250ZXh0MjcpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyNy5wcmV2ID0gX2NvbnRleHQyNy5uZXh0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2cocmVzLmRhdGEpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvID0gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiByZXMuZGF0YS5uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmZGE6IGZkYSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvZHVjdF9zdGF0dXM6IHByb2R1Y3Rfc3RhdHVzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXRfc3RhdHVzOiByZXMuZGF0YS5tYXBjYXRzdGF0dXMsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZkYV9zdGF0dXM6IHByb2R1Y3Rfc3RhdHVzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lX3N0YXR1czogcmVzLmRhdGEubWFwbmFtZXN0YXR1cwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTsgLy8gY29uc29sZS5sb2cocHJvKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDI3Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIE1hcFJ1bGVCYXNlZFNlcnZpY2UudXBkYXRlbWFwKGlkLCBwcm8pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhyZXMuZGF0YSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzOC5wcm9kdWN0LnB1c2goewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IGRhdGEucHJvZHVjdGhhICsgIiAiICsgZGF0YS5wcm9kdWNlbmcsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGV0YWlsOiBjb250ZW50LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZkYTogZmRhLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNuY25tOiBkYXRhLmNuY25tLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGVwcm86IGRhdGEudHlwZXBybywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsY25ubzogZGF0YS5sY25ubywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9kdWN0aGE6IGRhdGEucHJvZHVjdGhhLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2R1Y2VuZzogZGF0YS5wcm9kdWNlbmcsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGljZW46IGRhdGEubGljZW4sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQWRkcjogZGF0YS5BZGRyLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5ld2NvZGU6IGRhdGEuTmV3Y29kZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHByb2R1Y3Rfc3RhdHVzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRva2VuOiByZXMuZGF0YS50b2tlbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzOC5wcm9jaGVjayA9IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmZGE6IGZkYSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXBmZGE6IGRhdGEubGNubm8sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY25jbm06IGRhdGEuY25jbm0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvZHVjdGhhOiBkYXRhLnByb2R1Y3RoYSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9kdWNlbmc6IGRhdGEucHJvZHVjZW5nLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHJlcy5kYXRhLm5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvZHVjdF9zdGF0dXM6IHByb2R1Y3Rfc3RhdHVzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhdF9zdGF0dXM6IHJlcy5kYXRhLm1hcGNhdHN0YXR1cywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmZGFfc3RhdHVzOiBwcm9kdWN0X3N0YXR1cywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lX3N0YXR1czogcmVzLmRhdGEubWFwbmFtZXN0YXR1cywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlcHJvOiBkYXRhLnR5cGVwcm8sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogcmVzLmRhdGEuY2F0ZWdvcnkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXM4LmNvbG9yY2F0ID0gcmVzLmRhdGEuY29sb3JjYXQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzOC5jb2xvcm5hbWUgPSByZXMuZGF0YS5jb2xvcm5hbWU7IC8vIGNvbnNvbGUubG9nKHRoaXMucHJvZHVjdCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMucHJvY2hlY2spOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLmZkYSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyNy5zdG9wKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBfY2FsbGVlMjQpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94MTQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3JlZjIyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KCkpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyOC5zdG9wKCk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9LCBfY2FsbGVlMjUpOwogICAgICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94MTMpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3JlZjIxLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICB9KCkpOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBfY29udGV4dDI5Lm5leHQgPSAxMzsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgX3RoaXM4LnByb2R1Y3QucHVzaCh7CiAgICAgICAgICAgICAgICAgIG5hbWU6ICItIiwKICAgICAgICAgICAgICAgICAgZGV0YWlsOiBjb250ZW50LAogICAgICAgICAgICAgICAgICBmZGE6IF90aGlzOC5mZGEsCiAgICAgICAgICAgICAgICAgIGNuY25tOiAiLSIsCiAgICAgICAgICAgICAgICAgIHR5cGVwcm86ICItIiwKICAgICAgICAgICAgICAgICAgbGNubm86ICItIiwKICAgICAgICAgICAgICAgICAgcHJvZHVjdGhhOiAiLSIsCiAgICAgICAgICAgICAgICAgIHByb2R1Y2VuZzogIi0iLAogICAgICAgICAgICAgICAgICBsaWNlbjogIi0iLAogICAgICAgICAgICAgICAgICBBZGRyOiAiLSIsCiAgICAgICAgICAgICAgICAgIE5ld2NvZGU6ICItIiwKICAgICAgICAgICAgICAgICAgc3RhdHVzOiAiLSIsCiAgICAgICAgICAgICAgICAgIHRva2VuOiAiIgogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgX3RoaXM4LnByb2NoZWNrID0gewogICAgICAgICAgICAgICAgICBmZGE6IF90aGlzOC5mZGEsCiAgICAgICAgICAgICAgICAgIG1hcGZkYTogIi0iLAogICAgICAgICAgICAgICAgICBjbmNubTogIi0iLAogICAgICAgICAgICAgICAgICBwcm9kdWN0aGE6ICItIiwKICAgICAgICAgICAgICAgICAgcHJvZHVjZW5nOiAiLSIsCiAgICAgICAgICAgICAgICAgIG5hbWU6ICItIiwKICAgICAgICAgICAgICAgICAgcHJvZHVjdF9zdGF0dXM6IDAsCiAgICAgICAgICAgICAgICAgIGNhdF9zdGF0dXM6IDAsCiAgICAgICAgICAgICAgICAgIGZkYV9zdGF0dXM6IDAsCiAgICAgICAgICAgICAgICAgIG5hbWVfc3RhdHVzOiAwLAogICAgICAgICAgICAgICAgICB0eXBlcHJvOiAiLSIsCiAgICAgICAgICAgICAgICAgIHR5cGU6ICItIgogICAgICAgICAgICAgICAgfTsgLy8gdGhpcy5zdGF0dXMgPSB0cnVlCgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDI5LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyNik7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsvLyAgICAgdmFyIGJlc3QgPSB7CiAgICAvLyAgICAgImlkIjogNjcsCiAgICAvLyAgICAgInNlbnRlbmNlIjogewogICAgLy8gICAgICAgICAibGVuZ3RoIjogMiwKICAgIC8vICAgICAgICAgImFsbGNvdW50IjogMTAwLAogICAgLy8gICAgICAgICAicnVsZSI6IFsKICAgIC8vICAgICAgICAgICAgIDg4OTksCiAgICAvLyAgICAgICAgICAgICA1NwogICAgLy8gICAgICAgICBdLAogICAgLy8gICAgICAgICAibmFtZSI6IFsKICAgIC8vICAgICAgICAgICAgICLguITguKfguJrguITguLjguKEiLAogICAgLy8gICAgICAgICAgICAgIuC4meC5ieC4s+C4q+C4meC4seC4gSIKICAgIC8vICAgICAgICAgXSwKICAgIC8vICAgICAgICAgIm1hcF9pZCI6IDc1CiAgICAvLyAgICAgfQogICAgLy8gfQogICAgLy8gICAgICAgICAgICAgICAgICAgTWFwUnVsZUJhc2VkU2VydmljZS5nZXRiZXN0cnVsZWJhc2VkKGJlc3QpLnRoZW4oCiAgICAvLyAgICAgICAgICAgICAgICAgICAgICAocmVzKSA9PiB7CiAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzLmRhdGEpOwogICAgLy8gICAgICAgICAgICAgICAgICAgICB9KTsKICAgIC8vIHZhciB0ZXh0ID0gJ+C4q+C4oeC4suC4ouC5gOC4peC4guC5g+C4muC4reC4meC4uOC4jeC4suC4lS/guK3guKIuIDEzLTEtMTM0NjUtNS0wMDUyIOC4iOC4s+C4meC4p+C4meC4quC4tOC4meC4hOC5ieC4siA0MTUg4Liq4LmI4LiH4LiI4Liy4LiBJwogICAgLy8gY29uc29sZS5sb2codGhpcy5maW5kZmRhKHRleHQpKTsKICAgIC8vIHRoaXMuZGF0YS51cmwgPQogICAgLy8gICAiaHR0cHM6Ly9zaG9wZWUuY28udGgvJUUyJTk5JUE2JUVGJUI4JThGJUUwJUI5JTgyJUUwJUI4JTg5JUUwJUI4JUExJUUwJUI5JTgzJUUwJUI4JUFCJUUwJUI4JUExJUUwJUI5JTg4LSVFMCVCOCU4MiVFMCVCOCVBRCVFMCVCOCU4NyVFMCVCOSU4MSVFMCVCOCU5NyVFMCVCOSU4OSVFMiU5OSVBNiVFRiVCOCU4Ri0lRTAlQjglODIlRTAlQjglQjIlRTAlQjglQTIlRTAlQjglOTQlRTAlQjglQjUlRTAlQjglQTElRTAlQjglQjIlRTAlQjglODEtJUUwJUI4JTgxJUUwJUI4JUIyJUUwJUI5JTgxJUUwJUI4JTlGLSVFMCVCOCVBNSVFMCVCOCVCNCVFMCVCOSU4MiVFMCVCOCU4QiVFMCVCOSU4OC0lRTAlQjglOUUlRTAlQjglQTUlRTAlQjglQjElRTAlQjglQUEtJUUyJTgwJThCLWNvZmZlZS1saXNob3UtJUUwJUI4JTgxJUUwJUI4JUIyJUUwJUI5JTgxJUUwJUI4JTlGJUUwJUI4JTg0JUUwJUI4JUE3JUUwJUI4JTlBJUUwJUI4JTg0JUUwJUI4JUI4JUUwJUI4JUExJUUwJUI4JTk5JUUwJUI5JTg5JUUwJUI4JUIzJUUwJUI4JUFCJUUwJUI4JTk5JUUwJUI4JUIxJUUwJUI4JTgxLSVFMCVCOCU4MSVFMCVCOCVCMiVFMCVCOSU4MSVFMCVCOCU5RiVFMCVCOCU4NCVFMCVCOCVCOCVFMCVCOCVBMSVFMCVCOCVBQiVFMCVCOCVCNCVFMCVCOCVBNy0lRTAlQjglODElRTAlQjglQjIlRTAlQjklODElRTAlQjglOUYlRTAlQjglQTUlRTAlQjglOTQlRTAlQjglOTklRTAlQjklODklRTAlQjglQjMlRTAlQjglQUIlRTAlQjglOTklRTAlQjglQjElRTAlQjglODEtJUUwJUI4JTgxJUUwJUI4JUIyJUUwJUI5JTgxJUUwJUI4JTlGJUUwJUI4JUE1JUUwJUI4JTk0JUUwJUI4JTg0JUUwJUI4JUE3JUUwJUI4JUIyJUUwJUI4JUExJUUwJUI4JUFEJUUwJUI5JTg5JUUwJUI4JUE3JUUwJUI4JTk5IjsKICAgIC8vIHRoaXMuZGF0YS5jb250ZW50ID0KICAgIC8vICAgIu+4j+C4luC5ieC4suC5gOC4m+C5h+C4meC4peC4ueC4geC4hOC5ieC4suC4nuC4tOC4oeC5geC4peC5ieC4pyDguJTguLnguYHguKXguIjguJnguJnguYnguLPguKvguJnguLHguIHguKXguJTguYDguKXguKLguITguYjguLAg4Liq4Lix4LmI4LiH4LiL4Li34LmJ4Lit4Liq4Li04LiZ4LiE4LmJ4Liy4LmB4Lil4LmJ4LinIOC4l+C4seC4geC5geC4iuC4l+C4oeC4suC4hOC4uOC4ouC4geC4seC4meC5hOC4lOC5ieC5gOC4peC4ouC4hOC5iOC4sCI7CiAgICAvLyAvLyB2YXIgdXJsID0gdGhpcy5kYXRhLnVybC5zcGxpdCgnLWkuJykKICAgIC8vIHZhciBjb250ZW50ID0gdGhpcy5kYXRhLmNvbnRlbnQucmVwbGFjZUFsbCgKICAgIC8vICAgLyhbXHVFMDAwLVx1RjhGRl18XHVEODNDW1x1REYwMC1cdURGRkZdfFx1RDgzRFtcdURDMDAtXHVEREZGXSkvZywKICAgIC8vICAgIiIKICAgIC8vICk7CiAgICAvLyBjb250ZW50ID0gY29udGVudC5yZXBsYWNlQWxsKAogICAgLy8gICAvKD86W1x1MjcwMC1cdTI3YmZdfCg/Olx1ZDgzY1tcdWRkZTYtXHVkZGZmXSl7Mn18W1x1ZDgwMC1cdWRiZmZdW1x1ZGMwMC1cdWRmZmZdfFtcdTAwMjMtXHUwMDM5XVx1ZmUwZj9cdTIwZTN8XHUzMjk5fFx1MzI5N3xcdTMwM2R8XHUzMDMwfFx1MjRjMnxcdWQ4M2NbXHVkZDcwLVx1ZGQ3MV18XHVkODNjW1x1ZGQ3ZS1cdWRkN2ZdfFx1ZDgzY1x1ZGQ4ZXxcdWQ4M2NbXHVkZDkxLVx1ZGQ5YV18XHVkODNjW1x1ZGRlNi1cdWRkZmZdfFx1ZDgzY1tcdWRlMDEtXHVkZTAyXXxcdWQ4M2NcdWRlMWF8XHVkODNjXHVkZTJmfFx1ZDgzY1tcdWRlMzItXHVkZTNhXXxcdWQ4M2NbXHVkZTUwLVx1ZGU1MV18XHUyMDNjfFx1MjA0OXxbXHUyNWFhLVx1MjVhYl18XHUyNWI2fFx1MjVjMHxbXHUyNWZiLVx1MjVmZV18XHUwMGE5fFx1MDBhZXxcdTIxMjJ8XHUyMTM5fFx1ZDgzY1x1ZGMwNHxbXHUyNjAwLVx1MjZGRl18XHUyYjA1fFx1MmIwNnxcdTJiMDd8XHUyYjFifFx1MmIxY3xcdTJiNTB8XHUyYjU1fFx1MjMxYXxcdTIzMWJ8XHUyMzI4fFx1MjNjZnxbXHUyM2U5LVx1MjNmM118W1x1MjNmOC1cdTIzZmFdfFx1ZDgzY1x1ZGNjZnxcdTI5MzR8XHUyOTM1fFtcdTIxOTAtXHUyMWZmXSkvZywKICAgIC8vICAgIiIKICAgIC8vICk7CiAgICAvLyBjb250ZW50ID0gY29udGVudC5yZXBsYWNlQWxsKC8oXHJcbnxcbnxccikvZ20sICIiKTsKICAgIC8vIGNvbnRlbnQgPSBjb250ZW50LnJlcGxhY2VBbGwoIl8iLCAiIik7CiAgICAvLyBjb250ZW50ID0gY29udGVudC5yZXBsYWNlQWxsKCIhIiwgIiIpOwogICAgLy8gY29udGVudCA9IGNvbnRlbnQucmVwbGFjZUFsbCgiKiIsICIiKTsKICAgIC8vIGNvbnRlbnQgPSBjb250ZW50LnJlcGxhY2VBbGwoIiYiLCAiIik7CiAgICAvLyBjb250ZW50ID0gY29udGVudC5yZXBsYWNlQWxsKCIjIiwgIiIpOwogICAgLy8gY29udGVudCA9IGNvbnRlbnQucmVwbGFjZUFsbChgXy9sXF9gLCAiIik7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUKICAgIC8vIC8vIGNvbnNvbGUubG9nKExpbmtTZXJ2aWNlLmdldHB5dGhvbmxpbmsoKSsnL3dvcmR0b2tlbmRlc2M/dGV4dD0nICsgY29udGVudCk7CiAgICAvLyAvLyBheGlvcy5nZXQoTGlua1NlcnZpY2UuZ2V0cHl0aG9ubGluaygpKycvd29yZHRva2VuZGVzYz90ZXh0PScrY29udGVudCkudGhlbihhc3luYyAocmVzKSA9PiB7CiAgICAvLyAvLyAgIGNvbnNvbGUubG9nKHJlcy5kYXRhKTsKICAgIC8vIC8vIH0pCiAgICAvLyBjb25zb2xlLmxvZyhMaW5rU2VydmljZS5nZXRweXRob25saW5rKCkgKyAiL2NoZWNra2V5d29yZD90ZXh0PSIgKyBjb250ZW50KTsKICAgIC8vIHZhciBjb24gPSB7CiAgICAvLyAgIGNvbnRlbnQ6IGNvbnRlbnQsCiAgICAvLyB9OwogICAgLy8gYXhpb3MKICAgIC8vICAgLnBvc3QoTGlua1NlcnZpY2UuZ2V0cHl0aG9ubGluaygpICsgIi9jaGVja2tleXdvcmQ/dGV4dD0iICsgY29udGVudCwgY29uKQogICAgLy8gICAudGhlbihhc3luYyAocmVzKSA9PiB7CiAgICAvLyAgICAgY29uc29sZS5sb2cocmVzLmRhdGEpOwogICAgLy8gICAgIC8vICAgICAgIGZvciAobGV0IHIgPSAwOyByIDwgcmVzLmRhdGEubGVuZ3RoOyByKyspIHsKICAgIC8vICAgICAvLyAgICAgICAgIHZhciBhZHZlcnRpc2UgPSB7CiAgICAvLyAgICAgLy8gICAgICAgICAgIHByb2R1Y3RfdG9rZW5faWQ6MSwKICAgIC8vICAgICAvLyAgICAgICAgICAga2V5d29yZF9kaWN0X2lkOnJlcy5kYXRhW3JdLmtleXdvcmRfZGljdF9pZCwKICAgIC8vICAgICAvLyAgICAgICAgICAgZGljdF9pZDpyZXMuZGF0YVtyXS5kaWN0X2lkLAogICAgLy8gICAgIC8vICAgICAgICAgICBkaWN0X25hbWU6cmVzLmRhdGFbcl0uZGljdF9uYW1lLAogICAgLy8gICAgIC8vICAgICAgICAgICBzZW46cmVzLmRhdGFbcl0uc2VuLAogICAgLy8gICAgIC8vICAgICAgICAgICBzZW50ZW50OnJlcy5kYXRhW3JdLnNlbnRlbnQsCiAgICAvLyAgICAgLy8gICAgICAgICB9CiAgICAvLyAgICAgLy8gICAgICAgICBBZHZlcnRpc2VTZXJ2aWNlLmNyZWF0ZWFkdmVydGlzZShhZHZlcnRpc2UpLnRoZW4oKHJlcyk9PnsKICAgIC8vICAgICAvLyAgICAgICAgICAgY29uc29sZS5sb2cocmVzLmRhdGEpOwogICAgLy8gICAgIC8vICAgICAgICAgfSkKICAgIC8vICAgICAvLyAgICAgICB9CiAgICAvLyAgIH0pOwogICAgLy8gLy8gIGNvbnNvbGUubG9nKHVybCk7CiAgICAvLyAvLyAgICAgdmFyIHNlbGVjdHBybyA9IHsKICAgIC8vIC8vICAgICAgIHVybDp1cmxbMF0KICAgIC8vIC8vICAgICAgfQogICAgLy8gLy8gICAgICBNYXBSdWxlQmFzZWRTZXJ2aWNlLmdldHByb2R1Y3RfdG9rZW4oc2VsZWN0cHJvKS50aGVuKChyZXMpPT57CiAgICAvLyAvLyAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YSk7CiAgICAvLyAvLyB2YXIgbGlzdCA9IHJlcy5kYXRhCiAgICAvLyAvLyB0aGlzLnRva2VuZGF0YShsaXN0KQogICAgLy8gLy8gZm9yIChsZXQgbCA9IDA7IGwgPCBsaXN0LmtleXdvcmQubGVuZ3RoOyBsKyspIHsKICAgIC8vIC8vICAgLy8gY29uc29sZS5sb2codGhpcy5saXN0LmtleXdvcmRbbF0ubWFwKTsKICAgIC8vIC8vICAgLy8gZm9yIChsZXQgbSA9IDA7IG0gPCB0aGlzLmxpc3Qua2V5d29yZFtsXS5sZW5ndGg7IG0rKykgewogICAgLy8gLy8gICAgIGlmIChsaXN0LmtleXdvcmRbbF0ubWFwKSB7CiAgICAvLyAvLyAgICAgICB2YXIgbWFwID0gewogICAgLy8gLy8gICAgIHVybDpKU09OLnN0cmluZ2lmeShsaXN0LmtleXdvcmRbbF0ubWFwKQogICAgLy8gLy8gICAgICB9CiAgICAvLyAvLyAgICAgLy8gIGNvbnNvbGUubG9nKG1hcCk7CiAgICAvLyAvLyAgICAgIE1hcFJ1bGVCYXNlZFNlcnZpY2UuZ2V0bWFwcHJvZHVjdChtYXApLnRoZW4oKHJlcyk9PnsKICAgIC8vIC8vICAgICAgIGxpc3Qua2V5d29yZFtsXS5ydWxlYmFzZSA9IHJlcy5kYXRhCiAgICAvLyAvLyAgICAgICBpZiAobCsxID09IGxpc3Qua2V5d29yZC5sZW5ndGgpIHsKICAgIC8vIC8vICAgICAgICAgdGhpcy5jb21wYXJlKGxpc3QpCiAgICAvLyAvLyAgICAgICB9CiAgICAvLyAvLyAgICAgIH0pOwogICAgLy8gLy8gICAgIH0KICAgIC8vIC8vICAgfQogICAgLy8gLy8gfQogICAgLy8gLy8gY29uc29sZS5sb2codGhpcy5saXN0KTsKICAgIC8vIHRoaXMuc3RhdHVzID0gdHJ1ZTsKICAgIC8vIC8vICB9KQogIH0KfTs="},{"version":3,"mappings":"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NA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAbA,CAcA;;AACAuF,YACAC,GADA,CACAC,2DADA,EAEApB,IAFA,CAEA;AACA;AACA;AACA,OALA,EAfA,CAqBA;AACA;;AACA;AACAqB;AADA;AAGAH,YACAI,IADA,CACAF,mDADA,EACAG,GADA,EAEAvB,IAFA,CAEA;AACA;AACA;AACA;AACA;AACA;AACA,OARA,EA1BA,CAmCA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,KAxSA;AAySAwB,mBAzSA,2BAySA1F,IAzSA,EAySA;AACA;AACA;AACA;;AACA;AACA;AACA2F;AACA;AACA,OARA,CASA;AACA;AACA;AACA;;;AACA;AACA,KAvTA;AAwTAC,YAxTA,sBAwTA;AACAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,KA1TA;AA2TAS,aA3TA,uBA2TA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACAtE;AAFA;AAIAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AACApB,wCADA,CAEA;AACA;;AACA;AACA;AACA,yCANA,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAiBA,KApVA;AAqVAmD,UArVA,oBAqVA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,sCADA,CAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACAL,mBATA,GASA,EATA;AAAA;AAAA,uBAUA,iBAVA;;AAAA;AAWA,sCAXA,CAYA;AACA;AACA;;AAdA,sBAeA,wDAfA;AAAA;AAAA;AAAA;;AAgBAxC;AAhBA;AAAA;;AAAA;AAkBAsC,uBAlBA,GAkBA,EAlBA;AAmBAA,yDACA,gEADA,EAEA,EAFA;AAIAA,6CACA,gmBADA,EAEA,GAFA;AAKAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA,yDArCA,CAqCA;;AACAA,6CACA,sHADA,EAEA,GAFA;AAtCA;AAAA,uBA2CA,uBA3CA;;AAAA;AA2CA,0BA3CA;AA4CA5C,wCA5CA,CA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA8C;AACAF;AADA;AAzDA;AAAA,uBA4DAH,MACAI,IADA,CACAF,8CADA,EACAG,GADA,EAEAvB,IAFA;AAAA,sFAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA6B,+BAFA,GAEA;AACAxF,kDADA;AAEAyF,+CAFA;AAGAC,gEAHA;AAIA1B,4DAJA;AAKA9D;AALA,6BAFA;AASAkC;;AATA,kCAUA,yBAVA;AAAA;AAAA;AAAA;;AAAA;AAAA,mCAWAoB;AAAA,mGACA;AAAA;AAAA;AAAA;AAAA;AACApB;AACA;AAFA;AAAA,+CAGA,8CAHA;;AAAA;AAIA;AACA;AACA8C;AACAF;AADA,0CANA,CASA;;AATA;AAAA,+CAUAH,MACAI,IADA,CACAF,6CADA,EACAG,GADA,EAEAvB,IAFA;AAAA,+GAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACAvB;;AADA,0DAEAqB,mBAFA;AAAA;AAAA;AAAA;;AAAA,kHAGAkC,CAHA;AAAA;AAAA;AAAA;AAAA;AAIAC,6GACA,GADA,EAEA,EAFA,CAJA,EAOA;;AAAA;AACAA,uGACA,YADA,EAEA,aAFA,EARA,CAaA;;AAAA;AACAC;AACAC,sGADA;AAEAC,4GAFA;AAGAxC,4FAHA;AAIAmB,gGAJA;AAKAsB,sFALA;AAMAhD;AANA,+DAdA,EAsBA;;AAtBA;AAAA,qEAuBAiD,uHACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EACAN,wBADA;AAAA;AAAA;AAAA;;AAEAO,mFAFA,GAEA;AACAlG;AADA,yEAFA;AAAA;AAAA,+EAKAwD,sCACA0C,WADA,EAEAvC,IAFA;AAAA,+IAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FAEA,0BAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAFA;;AAAA;AAAA;AAAA;AAAA,4EALA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DADA,GAvBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGAgC,qDAHA,GAGA,CAHA;;AAAA;AAAA,0DAGAA,mBAHA;AAAA;AAAA;AAAA;;AAAA,2FAGAA,CAHA;;AAAA;AAGAA,uDAHA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,2DAwCA,kBAxCA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAFA;;AAAA;AAAA;AAAA;AAAA,4CAVA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADA;;AAAA;AAAA;AAAA;AAAA,gCAXA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mCAsEAM,kIACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACAzC,uCACA,oBADA,EAEAgC,GAFA,EAGA7B,IAHA,uEAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAGA,8CAHA;;AAAA;AAIAuB;AACAF;AADA,kDAJA,CAOA;;AAAA;AACAH,sDACAI,IADA,CAEAF,6CAFA,EAGAG,GAHA,EAKAvB,IALA;AAAA,uHAKA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA,uFACAgC,CADA;AAEAC,yFACAD,CADA,EAEAK,OAFA,CAEAG,UAFA,CAEA,GAFA,EAEA,EAFA,CAFA,EAIA;;AAAA;AACAP,yGACA,YADA,EAEA,aAFA,EALA,CAUA;;AAAA;AACAC;AACAC,wGADA;AAEAC,8GAFA;AAGAxC,8FAHA;AAIAmB,kGAJA;AAKAsB,wFALA;AAMAhD,sFANA;AAOA9C;AAPA,iEAXA,EAoBA;;AAAA;AACA+F,iHACA;AACA;AACA;AACAjG;AADA;AAGAwD,0GACA0C,WADA,EAEAvC,IAFA,CAEA;AACA;AACA;AACA,qEALA;AAMA;AACA,iEAbA;AArBA;;AACA;AAAA;AAmCA;AACA;;AAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDALA;;AAAA;AAAA;AAAA;AAAA;;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAHA,GADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADA,GAtEA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFA;;AAAA;AAAA;AAAA;AAAA,oBA5DA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsMA,KA3hBA;AA4hBAyC,UA5hBA,kBA4hBAC,GA5hBA,EA4hBAC,IA5hBA,EA4hBA;AACA;;AACA;AACA,yEACAC;AACA;;AACA;AACA,KAniBA;AAoiBAC,gBApiBA,wBAoiBAH,GApiBA,EAoiBAC,IApiBA,EAoiBA;AACA;;AACA;AACA,yEACAC;AACA;;AACA;AACA,KA3iBA;AA4iBAE,kBA5iBA,0BA4iBAJ,GA5iBA,EA4iBAK,KA5iBA,EA4iBA;AACA;AACAL;AACA;AACAM;AACA;AACA,OAJA;AAKA;AACA,KApjBA;AAqjBAC,aArjBA,qBAqjBA7G,IArjBA,EAqjBA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEAA,uBAFA;AAAA;AAAA;AAAA;;AAAA,8EAGA8G,CAHA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAKA9G,+BALA;AAAA;AAAA;AAAA;;AAMA+G;AACA9F,kDADA;AAEAhB,gEAFA;AAGAgE;AAHA,2BANA,EAWA;;AAXA;AAAA,iCAYAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACAuD,8CAFA,GAEA,mCAFA,EAGA;;AAAA;AACAC,uCAJA,GAIA,kDAJA,EAKA;;AAAA;AACAC,8CANA,GAMA,0BANA,EAOA;AACA;AACA;;AAFA;AACA;AACA;AACAC,0CAVA,GAUA;AACAlG,8DADA;AAEAyE;AAFA,uCAVA;AAcArD;AACA+E,qDAfA,GAeAF,wBAfA;AAgBAE;AACA/E;AAjBA;AAAA,6CAkBAyC,MACAC,GADA,CAEAC,8BACA,iBADA,GAEAoC,eAJA,EAMAxD,IANA,uEAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDACAH;AAAA,uHACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACApB;AAEAgF,qEAHA,GAGA;AACAC,6FADA;AAEAC,kGAFA;AAGAhE,mGAHA;AAIA6D,uGAJA;AAKA1C;AALA,6DAHA;AAUArC,mFAVA,CAWA;;AAXA;AAAA,mEAYAoB,oCACAzD,kBADA,EAEAqH,SAFA,EAGAzD,IAHA,uEAGA;AAAA;AAAA;AAAA;AAAA;AAAA,4EACAkD,4BADA;AAAA;AAAA;AAAA;;AAAA;AAAA,6EAEA,kBAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAHA,GAZA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADA;;AAAA;AAAA;AAAA;AAAA,oDADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCANA,GAlBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,8BAZA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGAA,iBAHA,GAGA,CAHA;;AAAA;AAAA,sBAGAA,uBAHA;AAAA;AAAA;AAAA;;AAAA,uDAGAA,CAHA;;AAAA;AAGAA,mBAHA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAuEA,kBAvEA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyEA,KA9nBA;AA+nBAU,WA/nBA,mBA+nBAxH,IA/nBA,EA+nBA;AAAA;;AAAA,mCACAyH,CADA;AAEA;AACAjE,qDAHA,EAIA;AACA;;AACA;AACA;AACA;AACA,WAFA;AAGAkE;AACA;AACA,WAFA,CAJA,EAOA;AACA;AACA;AACA;;AACAC,uBACA,+DAZA,EAaA;;AACA3H;AACA,SAfA,MAeA;AACAA;AACA;;AACA;AACA,6BADA,CAEA;AACA;AA3BA;;AACA;AAAA,YAEAwD,OAFA;AAAA,YASAkE,aATA;AAAA,YAgBAC,UAhBA;;AAAA;AA2BA;AACA,KA5pBA;AA6pBAC,iBA7pBA,yBA6pBAtB,GA7pBA,EA6pBAuB,GA7pBA,EA6pBA;AACA;AAAA,UACAZ,MADA;;AAEA;AACAa;AACA;;AACA;AACA,KApqBA;AAqqBAzC,WArqBA,mBAqqBA3F,IArqBA,EAqqBA;AACA,yCADA,CAEA;;AACA;;AACA;AACA2F;AACA;AACAA;AACA,OARA,CASA;;;AAEAA;AACAA;AACAA;AACAA,4CAdA,CAeA;AACA;AACA;AACA;;AACA;AACA,KAzrBA;AA0rBA0C,YA1rBA,oBA0rBA9C,OA1rBA,EA0rBAhE,EA1rBA,EA0rBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAoB;;AADA,qBAEA,UAFA;AAAA;AAAA;AAAA;;AAGAT,mBAHA,GAGA,UAHA;AAIAoG,8BAJA,GAIA,CAJA;AAKA/H,mBALA,GAKA,oDALA;AAMAP,oBANA,GAMA;AAAAuI;AAAA,iBANA,EAOA;;AACAC,uBARA,GAQA;AACAC,gCADA;AAEAC;AACAC,8CADA;AAEA;AAFA,mBAFA;AAMAC;AANA,iBARA;AAAA;AAAA,uBAiBAC,oBACA3E,IADA,CACA;AAAA;AAAA,iBADA,EAEAA,IAFA;AAAA,uFAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACAlE,YADA;AAAA;AAAA;AAAA;;AAEA;AACAH,uCADA;AAEAiJ,6CAFA;AAGA5G,6CAHA;AAIA6G,wCAJA;AAKAC,0CALA;AAMAC,wCANA;AAOAC,4CAPA;AAQAC,4CARA;AASAC,wCATA;AAUAC,uCAVA;AAWAC,0CAXA;AAYA7I,yCAZA;AAaA8I;AAbA;;AAeA;AACArH,6CADA;AAEAsH,yCAFA;AAGAT,wCAHA;AAIAG,4CAJA;AAKAC,4CALA;AAMAtJ,uCANA;AAOAyI,+CAPA;AAQAmB,2CARA;AASAC,2CATA;AAUAC,4CAVA;AAWAX,0CAXA;AAYAjI;AAZA,8BAjBA,CAgCA;;AAhCA;AAAA;;AAAA;AAkCA;AACA;AACA;AACAuH;AACA;AACA,6BAHA,MAGA;AACAA;AACA;;AACA3F;AACA8C,+BA3CA,GA2CA;AACAvD,sCADA;AAEAgH,uDAFA;AAGAC,uDAHA;AAIAH,mDAJA;AAKAzD;AALA,6BA3CA;AAAA;AAAA,mCAkDAH,MACAI,IADA,CACAF,yCADA,EACAG,GADA,EAEAvB,IAFA;AAAA,mGAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA0F,2CAFA,GAEA;AACA/J,6DADA;AAEAqC,kDAFA;AAGAoG,wEAHA;AAIAmB,2EAJA;AAKAC,oEALA;AAMAC;AANA,yCAFA,EAUA;;AAVA;AAAA,+CAWA5F;AACA;AACA;AACAlE,uFADA;AAEAiJ,2DAFA;AAGA5G,oDAHA;AAIA6G,6DAJA;AAKAC,iEALA;AAMAC,6DANA;AAOAC,qEAPA;AAQAC,qEARA;AASAC,6DATA;AAUAC,2DAVA;AAWAC,iEAXA;AAYA7I,kEAZA;AAaA8I;AAbA;;AAeA;AACArH,oDADA;AAEAsH,8DAFA;AAGAT,6DAHA;AAIAG,qEAJA;AAKAC,qEALA;AAMAtJ,+DANA;AAOAyI,0EAPA;AAQAmB,6EARA;AASAC,sEATA;AAUAC,+EAVA;AAWAX,iEAXA;AAYAjI;AAZA;AAcA;AACA,gFAhCA,CAiCA;AACA;AACA;AACA,yCApCA,CAXA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFA;;AAAA;AAAA;AAAA;AAAA,gCAlDA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFA;;AAAA;AAAA;AAAA;AAAA,oBAjBA;;AAAA;AAAA;AAAA;;AAAA;AA6HA;AACAlB,2BADA;AAEAiJ,iCAFA;AAGA5G,iCAHA;AAIA6G,4BAJA;AAKAC,8BALA;AAMAC,4BANA;AAOAC,gCAPA;AAQAC,gCARA;AASAC,4BATA;AAUAC,2BAVA;AAWAC,8BAXA;AAYA7I,6BAZA;AAaA8I;AAbA;;AAeA;AACArH,iCADA;AAEAsH,6BAFA;AAGAT,4BAHA;AAIAG,gCAJA;AAKAC,gCALA;AAMAtJ,2BANA;AAOAyI,mCAPA;AAQAmB,+BARA;AASAC,+BATA;AAUAC,gCAVA;AAWAX,8BAXA;AAYAjI;AAZA,kBA5IA,CA2JA;;AA3JA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6JA;AAv1BA,GAnDA;AA44BA8I,SA54BA,qnames":["name","components","ClipLoader","data","color","size","margin","radius","loading","list","url","file","status","urlPath","imagelists","tokenize","matchname","matchcategory","type","matchnamesum","statusname","statuscat","statusfda","colorname","colorfda","colorcat","id","keyword","colorkey","desc","arrList","alldata","back","next","product_token","title","key","fda","product","procheck","computed","currentUser","methods","getstatuscheck","t","f","console","text","clear","cut","mapname","save","alert","KeywordService","DictService","document","getpercentage","savetorule","sen","answer","d","iddata","sql","RuleBasedService","rule_based_id","dict_id","MapRuleBasedService","res","updatemaprule","then","savetorule_based","statusfalse","statustrue","maprule","keyword_id","advertise_id","user","map_dict","check","map_id","sendata","JSON","rule","map_rule_based_id","dict_name","no","checkkeyword","axios","get","LinkService","content","post","con","finddescription","findfda","loaddict","getdetail","search","des","sentence","sentence_keyword","r","sentencetoken","advertise","product_token_id","keyword_dict_id","sentent","AdvertiseService","getprotoken","replaceAll","getMax","arr","prop","max","getMaxlength","getAllMaxArray","value","array","tokendata","l","map","maxvalue","i","bestdata","best","rule_based_name","rulebased","count_rulebased","sentence_rulebase","compare","k","filteredArray","percentage","getAllIndexes","val","indexes","checkfda","product_status","number_src","options","method","headers","Accept","body","fetch","detail","cncnm","typepro","lcnno","productha","produceng","licen","Addr","Newcode","token","mapfda","cat_status","fda_status","name_status","pro","mounted"],"sourceRoot":"src/components","sources":["producttoken.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div>\n        <!-- <div class=\"form-group mt-5\">\n          <label for=\"exampleFormControlTextarea1\">URL</label>\n          <textarea\n            v-model=\"data.url\"\n            class=\"form-control\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n          ></textarea>\n        </div> -->\n        <div class=\"form-group mt-5\">\n          <label for=\"exampleFormControlTextarea1\">Content</label>\n          <textarea\n            v-model=\"data.content\"\n            class=\"form-control\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"7\"\n          ></textarea>\n        </div>\n        <button @click=\"search()\" type=\"submit\" class=\"mb-3 btn btn-success\">\n          ค้นหา</button\n        >&nbsp;\n        <button @click=\"clear()\" type=\"submit\" class=\"mb-3 btn btn-danger\">\n          ล้างข้อมูล\n        </button>\n      </div>\n      <table class=\"table table-bordered\" v-if=\"status\">\n        <thead>\n          <tr>\n            <th\n              scope=\"col\"\n              style=\"\n                text-align: center;\n                vertical-align: middle;\n                background-color: #ffb454;\n              \"\n            >\n              เงื่อนไขการตรวจสอบข้อที่ 1\n            </th>\n            <th\n              scope=\"col\"\n              style=\"\n                text-align: center;\n                vertical-align: middle;\n                background-color: #ffb454;\n              \"\n            >\n              ข้อมูลจากฐานข้อมูลอย.\n            </th>\n            <th\n              scope=\"col\"\n              style=\"\n                text-align: center;\n                vertical-align: middle;\n                background-color: #ffb454;\n              \"\n            >\n              ข้อมูลจากเว็บไซต์\n            </th>\n            <th\n              scope=\"col\"\n              style=\"\n                text-align: center;\n                vertical-align: middle;\n                background-color: #ffb454;\n              \"\n            >\n              ผลการตรวจสอบ\n            </th>\n            <th\n              scope=\"col\"\n              style=\"\n                text-align: center;\n                vertical-align: middle;\n                background-color: #ffb454;\n              \"\n            >\n              ข้อสรุป\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td :style=\"colorfda\">เลขที่อนุญาต</td>\n            <td :style=\"colorfda\">{{ procheck.mapfda }}</td>\n            <td :style=\"colorfda\">{{ procheck.fda }}</td>\n            <td :style=\"colorfda\">{{ procheck.cncnm }}</td>\n            <td\n              v-if=\"\n                procheck.cat_status &&\n                procheck.name_status &&\n                procheck.fda_status == 1\n              \"\n              rowspan=\"3\"\n              style=\"\n                text-align: center;\n                vertical-align: middle;\n                background-color: #a3e9a4;\n              \"\n            >\n              <span>ผ่าน</span>\n            </td>\n            <td\n              v-else\n              rowspan=\"3\"\n              style=\"\n                text-align: center;\n                vertical-align: middle;\n                background-color: #f9bdbb;\n              \"\n            >\n              <span>ไม่ผ่าน</span>\n            </td>\n          </tr>\n          <tr>\n            <td :style=\"colorcat\">ประเภทผลิตภัณฑ์</td>\n            <td :style=\"colorcat\">{{ procheck.typepro }}</td>\n            <td :style=\"colorcat\">\n              <span v-if=\"procheck.typepro\">{{ procheck.type }}</span\n              ><span v-else>-</span>\n            </td>\n            <td :style=\"colorcat\">\n              <span v-if=\"procheck.cat_status\">ผ่าน</span\n              ><span v-else>ไม่ผ่าน</span>\n            </td>\n          </tr>\n          <tr>\n            <td :style=\"colorname\">ชื่อผลิตภัณฑ์</td>\n            <td :style=\"colorname\">\n              {{ procheck.productha }}<br />{{ procheck.produceng }}\n            </td>\n            <td :style=\"colorname\"><span v-html=\"procheck.name\"></span></td>\n            <td :style=\"colorname\">\n              <span v-if=\"procheck.name_status\">ผ่าน</span\n              ><span v-else>ไม่ผ่าน</span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <table class=\"table table-bordered mt-3 mb-5\" v-if=\"status\">\n        <tbody>\n          <tr>\n            <th style=\"background-color: #ffb454; vertical-align: middle\">\n              เงื่อนไขการตรวจสอบข้อที่ 2\n            </th>\n            <th style=\"background-color: #ffb454; vertical-align: middle\">\n              ข้อความโฆษณา\n            </th>\n            <th style=\"background-color: #ffb454; vertical-align: middle\">\n              ข้อความโฆษณาเกินจริง\n            </th>\n          </tr>\n          <tr>\n            <td :style=\"colorkey\">รายละเอียดสินค้า</td>\n            <td :style=\"colorkey\" style=\"width: 40%\">\n              <span v-html=\"list.sentence_keyword\"></span>\n            </td>\n            <!-- <th :style=\"colorkey\">ข้อความโฆษณา</th> -->\n            <!-- {{list}} -->\n            <td :style=\"colorkey\" v-if=\"list.keyword != 1\">\n              <tr v-for=\"(k, i) in list.keyword\" :key=\"i\">\n                <td>\n                  <span v-html=\"k.sentence_rulebase\"></span><br /><br />\n                  <span v-for=\"(s, idx) in k.rule_based_name\" :key=\"idx\">{{\n                    s\n                  }}</span>\n                  <br /><br />\n                  <span>{{getstatuscheck(k.statustrue,k.statusfalse)}}</span>\n                  <span v-if=\"k.count_rulebased\"\n                    > {{ getpercentage(k) }}%</span\n                  ><br /><br />\n                  <div style=\"text-align: left\">\n                    <button\n                      data-bs-toggle=\"modal\"\n                      data-bs-target=\"#AddScopusToken\"\n                      type=\"submit\"\n                      class=\"mb-3 btn btn-success\"\n                    >\n                      <i class=\"fa fa-plus\" aria-hidden=\"true\">\n                        เพิ่ม keyword</i\n                      >\n                    </button>\n                  </div>\n                </td>\n                <td>\n                  <span v-if=\"k.answer == 1\">เกินจริง</span\n                  ><span v-if=\"k.answer == 9\">ไม่เกินจริง</span\n                  ><span v-if=\"k.answer == 0\"></span>\n                </td>\n\n                <td>\n                  <button\n                    @click=\"savetorule_based(k, 1)\"\n                    type=\"submit\"\n                    class=\"mb-3 btn btn-success\"\n                  >\n                    <i class=\"fa fa-check\"></i></button\n                  >&nbsp;\n                  <button\n                    @click=\"savetorule_based(k, 9)\"\n                    type=\"submit\"\n                    class=\"mb-3 btn btn-danger\"\n                  >\n                    <i class=\"fa fa-times\"></i>\n                  </button>\n                </td>\n              </tr>\n            </td>\n            <td :style=\"colorkey\" v-else>\n              <tr>\n                ไม่พบข้อความโฆษณาเกินจริง\n              </tr>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <table class=\"table mt-3\" v-if=\"status\">\n        <thead>\n          <tr>\n            <th scope=\"col\">สินค้า</th>\n            <th scope=\"col\">ข้อมูล</th>\n            <th scope=\"col\">FDA</th>\n            <th scope=\"col\">ตัดคำ</th>\n            <th scope=\"col\">ข้อมูลจากฐานข้อมูลอย.</th>\n            <!-- <th scope=\"col\"></th> -->\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(l, i) in product\" :key=\"i\">\n            <td :style=\"l.bg\">{{ l.name }}</td>\n            <td :style=\"l.bg\">{{ l.detail }}</td>\n            <!-- <td :style=\"l.bg\">\n              <div class=\"row\">\n          <div class=\"col-md-2\" v-for=\"(im ,i) in imagelists\" :key=\"i\">\n            <img :src=\"im\" width=\"100%\"/>\n          </div>\n        </div>\n            </td> -->\n            <td :style=\"l.bg\" style=\"width: 300px\">\n              <div>\n                เลขที่อนุญาต : {{ l.fda }}<br />\n                <!-- ชื่อผลิตภัณฑ์: <span v-html=\"matchname\"></span> -->\n                <!-- ชื่อผลิตภัณฑ์: {{l.productha}} -->\n              </div>\n            </td>\n            <td :style=\"l.bg\">{{ cut(l.token) }}</td>\n            <td\n              style=\"background-color: #bdedff\"\n              v-if=\"l.status == 1 || l.status == 3\"\n            >\n              <p class=\"card-text\">สถานะ : {{ l.cncnm || \"\" }}</p>\n              <p class=\"card-text\">\n                ประเภทผลิตภัณฑ์ :<span> {{ l.typepro }}</span>\n              </p>\n              <p class=\"card-text\">\n                ใบสำคัญ/เลขที่อนุญาต : <span> {{ l.lcnno }}</span>\n              </p>\n              <p class=\"card-text\">\n                ชื่อผลิตภัณฑ์ (TH) : <span> {{ l.productha }}</span>\n              </p>\n              <p class=\"card-text\">\n                ชื่อผลิตภัณฑ์ (EN) : <span> {{ l.produceng }}</span>\n              </p>\n              <p class=\"card-text\">ชื่อผู้รับอนุญาต : {{ l.licen }}</p>\n              <p class=\"card-text\">สถานที่ผลิต : {{ l.Addr }}</p>\n              <p class=\"card-text\">Newcode : {{ l.Newcode }}</p>\n            </td>\n            <td :style=\"l.bg\" v-else>ไม่พบข้อมูล</td>\n            <!-- <td :style=\"l.bg\">\n            <i class=\"fa fa-circle\" :style=\"l.icon\" aria-hidden=\"true\"></i>\n          </td> -->\n          </tr>\n        </tbody>\n      </table>\n      <clip-loader :loading=\"loading\" :color=\"color\" :size=\"size\"></clip-loader>\n      <!-- Modal -->\n      <div\n        class=\"modal fade\"\n        id=\"AddScopusToken\"\n        tabindex=\"-1\"\n        aria-labelledby=\"exampleModalLabel\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"exampleModalLabel\">{{ title }}</h5>\n            </div>\n            <div class=\"modal-body\">\n              <form>\n                <div class=\"card-body mt-3\">\n                  <div class=\"form-group mt-3\">\n                    <label>ข้อความ</label>\n                    <input\n                      v-model=\"key.name\"\n                      type=\"text\"\n                      min=\"1\"\n                      class=\"form-control form-control-sm\"\n                    />\n                  </div>\n                </div>\n              </form>\n            </div>\n            <div class=\"modal-footer mt-3\">\n              <button type=\"button\" class=\"btn btn-success\" @click=\"save()\">\n                บันทึก\n              </button>\n              <button\n                id=\"closedcategory\"\n                type=\"button\"\n                class=\"btn btn-secondary\"\n                data-bs-dismiss=\"modal\"\n              >\n                ปิด\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n// import ProductsService from '../services/ProductsService.js'\nimport DictService from \"../services/DictService\";\nimport RuleBasedService from \"../services/RuleBasedService\";\nimport MapRuleBasedService from \"../services/MapRuleBasedService\";\nimport LinkService from \"../services/LinkService\";\nimport AdvertiseService from \"../services/AdvertiseService\";\nimport KeywordService from \"../services/KeywordService\";\nimport ClipLoader from 'vue-spinner/src/ClipLoader.vue'\n\nexport default {\n  name: \"App\",\n  components: {\n    ClipLoader\n  },\n  data() {\n    return {\n      color: '#5bc0de',\n      size: '50px',\n      margin: '2px',\n      radius: '2px',\n      loading:false,\n      list: [],\n      url: \"\",\n      file: \"\",\n      status: false,\n      urlPath: \"\",\n      imagelists: \"\",\n      tokenize: \"\",\n      matchname: \"\",\n      matchcategory: \"\",\n      type: \"\",\n      matchnamesum: \"\",\n      statusname: 0,\n      statuscat: 0,\n      statusfda: 0,\n      colorname: \"background-color:#f9bdbb\",\n      colorfda: \"background-color:#f9bdbb\",\n      colorcat: \"background-color:#f9bdbb\",\n      id: \"\",\n      keyword: [],\n      colorkey: \"background-color:#f9bdbb\",\n      desc: \"\",\n      arrList: [],\n      alldata: 0,\n      back: 0,\n      next: 0,\n      data: {},\n      product_token: 0,\n      title: \"เพิ่ม keyword\",\n      key: {},\n      fda: \"\",\n      product: [],\n      procheck: [],\n    };\n  },\n  computed: {\n    currentUser() {\n      return this.$store.state.auth.user;\n    },\n  },\n  methods: {\n    getstatuscheck(t,f){\n      console.log(t,f);\n      var text = ''\nif (t == f) {\n  text = 'เกินจริง'\n}else if (t > f) {\n  text = 'เกินจริง'\n}else if (f > t) {\n  text = 'ไม่เกินจริง'\n}\nreturn text\n    },\n    clear() {\n      this.data = {};\n      this.product = [];\n      this.procheck = {};\n      this.status = false;\n    },\n    cut(data) {\n      data = data.filter((letter) => letter !== \" \");\n      var mapname = data.toString();\n\n      mapname = mapname.replaceAll(\",\", \" | \");\n      return mapname;\n    },\n    save() {\n      //console.log(this.key);\n      if (this.key.name == null || this.key.name == \"\") {\n        alert(\"กรุณากรอกข้อความ\");\n      } else {\n        var prodata = {\n          name: this.key.name,\n          status: 1,\n        };\n        //console.log(prodata);\n        KeywordService.createkeyword(prodata).then((res) => {\n          //console.log(res.data);\n          if (res.data.err == 1062) {\n            alert(\"มีคำนี้ในระบบแล้ว\");\n          } else {\n            DictService.createdict(prodata).then(() => {\n              //console.log(res.data );\n              // RuleBasedService.createdcolumnrule_based(res.data.id).then(() => {\n\n              document.getElementById(\"closedcategory\").click();\n              alert(\"บันทึกสำเร็จ\");\n              // })\n            });\n          }\n        });\n      }\n    },\n    getpercentage(data) {\n      // var dict = JSON.parse(data.dict_id)\n      // var rule_based_id = JSON.parse(data.rule_based_id)\n      // var re = (100 * data.count_rulebased)/ (rule_based_id.length)\n      return data.count_rulebased;\n    },\n    savetorule(sen, answer) {\n      // console.log(answer);\n      var iddata = [];\n\n      for (let d = 0; d < sen.length; d++) {\n        // console.log(datasplit[d]);\n        DictService.getdicts(\"\", sen[d]).then(async (res) => {\n          if (res.data.length > 0) {\n            // console.log(res.data[0].id);\n            iddata.push(res.data[0].id);\n          }\n          // console.log(d+1 , sen.length);\n          // console.log(iddata);\n          if (d + 1 == sen.length) {\n            var sql = `SELECT r.* FROM map_rule_based m join rule_based r on m.rule_based_id = r.id WHERE m.status = 1 and dict_id = '[${iddata}]'`;\n            // console.log(sql);\n\n            await RuleBasedService.getbydict(sql).then((res) => {\n              if (res.data.length == 0) {\n                let text = \"\";\n                text += \"{\";\n                for (let i = 0; i < iddata.length; i++) {\n                  // console.log(iddata[i]);\n                  text += '\"dict' + iddata[i] + '\"' + \":\" + 1 + \",\";\n                }\n                text += '\"answer' + '\"' + \":\" + answer + \",\";\n                text = text.slice(0, -1);\n                text += \"}\";\n                // console.log(text);\n                let jsonData = JSON.parse(text);\n                // console.log(jsonData);\n                RuleBasedService.createrule_based(jsonData).then((res) => {\n                  var maprule = {\n                    rule_based_id: res.data.id,\n                    dict_id: iddata,\n                    status: 1,\n                  };\n                  MapRuleBasedService.createmap_rule_based(maprule).then(() => {\n                    // console.log(res.data);\n                    // var pro = {\n                    //   map_rule_based:res.data.id\n                    // }\n                    // ProductsService.map_rule_based(id,pro).then(() => {\n                    alert(\"บันทึกสำเร็จ\");\n\n                    this.getdata();\n                    //               setTimeout(function () {\n                    //   location.reload();\n                    // }, 500);\n                    // });\n                  });\n                });\n              } else {\n                // console.log(res.data);\n                var updatemaprule = {\n                  answer: answer,\n                };\n                RuleBasedService.updaterule_based(\n                  res.data[0].id,\n                  updatemaprule\n                ).then(() => {\n                  alert(\"บันทึกสำเร็จ\");\n\n                  this.getdata();\n                });\n              }\n            });\n          }\n        });\n      }\n    },\n    async savetorule_based(data, answer) {\n      // console.log(sen.length);\n      // console.log('answer',answer);\n      // console.log(data);\n\n      \n      // if (!data.mapId) {\n        await MapRuleBasedService.checkintb(data.dict_id).then(async (check) => {\n          // console.log(check.data);\n          var statusfalse = 0\n          var statustrue = 0\n          if (check.data) {\n            \n          statusfalse = check.data.statusfalse\n          statustrue = check.data.statustrue\n          }\n          if (answer == 1) {\n            statustrue = statustrue+ parseInt(1)\n          }\n          if (answer == 9) {\n            statusfalse = statusfalse + parseInt(1)\n          }\n          var maprule = {\n        keyword_id: 1,\n        advertise_id: this.product_token,\n        status: 1,\n        answer: answer,\n        user: this.currentUser.id,\n        map_dict: JSON.parse(data.dict_id),\n        statusfalse:statusfalse,\n        statustrue:statustrue,\n      };\n          if (check.data) {\n            await MapRuleBasedService.updateanswer(check.data.id, maprule).then(\n          async () => {\n            // console.log(res.data);\n            await this.getdetail();\n            alert(\"บันทึกสำเร็จ\");\n          }\n        );\n          } else {\n            MapRuleBasedService.createmap_rule_based(maprule).then(\n              async (res) => {\n                // console.log(res.data);\n                var map_id = res.data.id;\n                var sendata = JSON.parse(data.dict_id);\n                // console.log(sendata);\n                // console.log(dict_name);\n                for (let d = 0; d < sendata.length; d++) {\n                  // console.log(sendata[d]);\n                  await DictService.getdict(sendata[d]).then(async (sen) => {\n                    // console.log(sen.data);\n                    var rule = {\n                      map_rule_based_id: map_id,\n                      dict_id: sendata[d],\n                      dict_name: sen.data.name,\n                      no: d + 1,\n                    };\n                    // console.log(rule);\n                    await RuleBasedService.createrule_based(rule).then(async () => {\n                      if (d + 1 == sendata.length) {\n                        await this.getdetail();\n\n                        alert(\"บันทึกสำเร็จ\");\n                      }\n                    });\n                  });\n                }\n              }\n            );\n          }\n        });\n      // } else {\n      //   MapRuleBasedService.deletemap_rule_based(data.mapId, maprule).then(\n      //     async () => {\n      //       // console.log(res.data);\n      //       this.getdetail();\n      //       alert(\"บันทึกสำเร็จ\");\n      //     }\n      //   );\n      // }\n    },\n    checkkeyword(name) {\n      // console.log(name);\n      //   axios.get('http://localhost:8081/api/keyword_dicts?name=1').then((res) => {\n      //     console.log(res.data);\n      // for (let r = 0; r < res.data.length; r++) {\n      // name = name.replaceAll(/([\\uE000-\\uF8FF]|\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDDFF])/g, '')\n      //       name = name.replaceAll(/(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|\\ud83c[\\ude32-\\ude3a]|\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])/g, '');\n      //       name = name.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"\");\n      //       name = name.replaceAll(\"_\", \"\");\n      //       name = name.replaceAll(\"!\", \"\");\n      //       name = name.replaceAll(\"*\", \"\");\n      // name = name.replaceAll(`_/l\\_`, \"\");// eslint-disable-line\n      // console.log('http://127.0.0.1:5000/checkkeyword?text=' + name);\n      var desc = this.finddescription(name);\n      // console.log('http://127.0.0.1:5000/worktokendesc?text='+desc);\n      axios\n        .get(LinkService.getpythonlink() + \"/worktokendesc?text=\" + desc)\n        .then((res) => {\n          // console.log(res.data);\n          this.desc = res.data;\n        });\n      // name = 'ข้อมูลจำเพาะของสินค้า หมวดหมู่ Shopee กลุ่มผลิตภัณฑ์เพื่อสุขภาพ อาหารเสริมเพื่อความงาม ผิว ยี่ห้อ Bluebird(บลูเบิร์ด) Storage Condition Normal ประเภทสารอาหาร สารต้านอนุมูลอิสระ, วิตามินซี ประเทศต้นกำเนิดสินค้า ไทย หน้าที่ของอาหารเสริมสำหรับความงาม ดูแลสิว, ป้องกันริ้วรอย ประเภทการห่อ ห่อรวมกัน เพศ ทั้งสองเพศ อายุการเก็บรักษา 12 เดือน ประเภทของผลิตภัณฑ์ยา แคปซูล หมายเลขใบอนุญาต/อย. 30-1-26764-5-0051 จำนวนสินค้า 17901 ส่งจาก จังหวัดนครราชสีมา รายละเอียดสินค้า วิตามินซี พลัส ตรา บลูเบิร์ด ตรา บลูเบิร์ด ขนาด 1000 มิลลิกรัม 60 แคปซูล เรทขายส่ง ช่วงราคาที่ 1 สั่งซื้อตั้งแต่ 5 กระปุกขึ้นไป ถึง 20 กระปุก ราคากระปุกละ 93 บาท ช่วงราคาที่ 2 สั่งซื้อตั้งแต่ 21 กระปุกขึ้นไป ถึง 50 กระปุก ราคากระปุกละ 90 บาท ช่วงราคาที่ 3 สั่งซื้อตั้งแต่ 51 กระปุกขึ้นไป ถึง 100 กระปุก ราคากระปุกละ 87 บาท ช่วงราคาที่ 4 สั่งซื้อตั้งแต่ 100 กระปุกขึ้นไป ..................... ราคากระปุกละ 85 บาท Vitamin C Plus Dietary Supplement Product Bluebird Brand ผลิตภัณฑ์เสริมอาหารวิตามินซี พลัส ตรา บลูเบิร์ด ส่วนประกอบทั้งหมดใน 1 แคปซูล ส่วนประกอบที่สำคัญ (Active Ingredient) VITAMIN C (100%) - 60 มิลลิกรัม CITRUS BIOFLAVONOID POWDER - 630 มิลลิกรัม BARBADOSCHERRY POWDER/ACEROLA CHERRY POWDER (ผงบาร์เบโดสเชอร์รี/ผงอะเซโรลาเชอร์รี) (MALPIGHIA GLABRA L.) ผล - 60 มิลลิกรัม ROSEHIP POWDER (ผงโรสฮิปส์) (ROSA CANINA L.) ผล - 60 มิลลิกรัม Rutin - 30 มิลลิกรัม INDIAN GOOSEBERRY POWDER (ผงมะขามป้อม) (PHYLLANTHUS EMBLICA L. ) ผล - 60 มิลลิกรัม ส่วนประกอบที่ไม่สำคัญ (Inactive Ingredient) EDIBLE GELATIN 428 - 98.5 มิลลิกรัม TITANIUM DIOXIDE 171 -1.95 มิลลิกรัม วิธีรับประทาน ครั้งละ 1-2 แคปซูล หลังอาหารเช้า เลขที่ อ.ย. 30-1-26764-5-0051 คำเตือน ควรเก็บให้พ้นแสงแดงและความชื้น เด็ก สตรีมีครรภ์ และสตรีให้นมบุตรไม่ควรรับประทาน ควรกินอาหารหลากหลายให้ครบ 5 หมู่ ในสัดส่วนที่เหมาะสมเป็นประจำ ไม่มีผลในการป้องกันหรือรักษาโรค สรรพคุณ ประโยชน์ของการกินวิตามินซี ️ทำให้หน้าไม่โทรม หน้าตาสดใส ️ช่วยฟื้นฟูผิวหน้า สิว ฝ้า กระ ริ้วรอย ดูจางลง ️ผิวพรรณนุ่มเรียบเนียบ ชุ่มชื่น ️หน้าตาดูเด็กและเด้งขึ้น ️ผิวหน้าขาวอมชมพู สินค้าตัดรอบทุกวันเวลา ตัดรอบเวลา 12.00 น ของทุกวัน แจ้งโอนเกินเวลา ส่งรอบวันถัดไปนะจ๊ะ ส่งพัสดุทุกวัน เว้นวันอาทิตย์ และวันหยุดนักขัตฤกษ์ ขอบพระคุณลูกค้าทุกท่าน ที่ไว้วางใจผลิตภัณฑ์ของเราเสมอมา_/l\\_'\n      // console.log('http://127.0.0.1:5000/checkkeyword?text=' + desc);\n      var con = {\n        content: desc,\n      };\n      axios\n        .post(LinkService.getpythonlink() + \"/checkkeyword?text=\", con)\n        .then((res) => {\n          // console.log(res.data);\n          if (res.data.length > 0) {\n            // this.keyword.push(res.data)\n            this.keyword = res.data;\n          }\n        });\n      //     }\n\n      // });\n      //       var listkeywords = []\n      //       var namesplit = name.split(\" \")\n      //       // console.log(namesplit);\n      //       axios.get('http://localhost:8081/api/keyword_dicts?name=1').then((res) => {\n      //         console.log(res.data);\n      //         var keylist = []\n      //         for (let r = 0; r < res.data.length; r++) {\n      //           res.data[r].name = res.data[r].name.replaceAll(\".\",\"\")\n      //           var kk = res.data[r].name.split(\" \")\n      //           for (let k = 0; k < kk.length; k++) {\n      //             keylist.push(kk[k])\n      //           }\n      //         }\n      //         for (let key = 0; key < keylist.length; key++) {\n      //           for (let n = 0; n < namesplit.length; n++) {\n      //             if (namesplit[n] == keylist[key] && keylist[key] != '' && isNaN(keylist[key])) {\n      //               listkeywords.push(keylist[key])\n      //             }\n\n      //           }\n      //         }\n      //         // console.log(keylist);\n      //         // console.log(listkeywords);\n\n      //       console.log(listkeywords.length);\n      //         if (listkeywords.length == 0) {\n\n      //           this.colorkey = \"background-color:#a3e9a4\"\n      //         }\n      //         var result = [];\n      //         listkeywords.forEach(function(item) {\n      //      if(result.indexOf(item) < 0) {\n      //          result.push(item);\n      //      }\n      // });\n      // console.log(result);\n      // listkeywords = result\n      //         for (let l = 0; l < listkeywords.length; l++) {\n      //           // console.log('http://127.0.0.1:5000/checkkeyword?name=' + name+'&&name_real=');\n      //           axios.get('http://127.0.0.1:5000/checkkeyword?name=' + name+'&&name_real=' + listkeywords[l]).then((res) => {\n      //             // console.log(res.data);\n      //         this.keyword.push(res.data)\n      //       });\n\n      //         }\n      //       });\n    },\n    finddescription(data) {\n      // console.log(data);\n      var text = [\"รายละเอียด\"];\n      var findfda = data;\n      for (let t = 0; t < text.length; t++) {\n        if (findfda.indexOf(text[t]) != -1) {\n          findfda = findfda.substring(findfda.indexOf(text[t]));\n        }\n      }\n      // if (findfda == 'อาหาร') {\n      //   findfda = findfda+ findfda+'เสริม'\n      // }\n      // console.log(findfda);\n      return findfda;\n    },\n    loaddict() {\n      axios.get(LinkService.getpythonlink() + \"/loaddict\").then(async () => {});\n    },\n    getdetail() {\n      // var url = this.data.url.split(\"-i.\");\n      // var url = this.data.url.split(\"-i.\");\n      // this.data.url = url[0];\n      var selectpro = {\n        // url: this.data.url,\n        id: this.product_token,\n      };\n      MapRuleBasedService.getproduct_token(selectpro).then(async (res) => {\n        console.log(res.data);\n        // var best = this.getMax(res.data.keyword,'count_rulebased')\n        //console.log(best);\n        this.list = res.data;\n        this.status = true;\n        this.loading = false\n        // var data = {\n        //   advertise_id: res.data.keyword[0].product_token_id,\n        // };\n        // MapRuleBasedService.updateweight(\n        //   res.data.keyword[0].map_rule_based_id,\n        //   data\n        // ).then(() => {});\n        // this.list.keyword = [best]\n        // this.status = true\n      });\n    },\n    async search() {\n      this.loading = true\n      // var url = this.data.url.replaceAll(\".\",'');\n      // url = url.split(\"-i\");\n      // this.data.url = url[0];\n      // console.log(this.data.url);\n      this.procheck = {};\n      this.product = [];\n      this.product_token = 0;\n      var con = {};\n      await this.loaddict();\n      this.status = false;\n      // if (this.data.url == null || this.data.url == \"\") {\n      //   alert(\"กรุณากรอก URL\");\n      // } else \n      if (this.data.content == null || this.data.content == \"\") {\n        alert(\"กรุณากรอกข้อความโฆษณา\");\n      } else {\n        var content = \"\";\n        content = this.data.content.replaceAll(\n          /([\\uE000-\\uF8FF]|\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDDFF])/g,\n          \"\"\n        );\n        content = content.replaceAll(\n          /(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|\\ud83c[\\ude32-\\ude3a]|\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])/g,\n          \" \"\n        );\n\n        content = content.replaceAll(/\\ud83d[\\ude00-\\ude4f]/g, \" \");\n        content = content.replaceAll(/(\\r\\n|\\n|\\r)/gm, \" \");\n        content = content.replaceAll(\"_\", \"\");\n        content = content.replaceAll(\"!\", \"\");\n        content = content.replaceAll(\"*\", \"\");\n        content = content.replaceAll(\"&\", \"\");\n        content = content.replaceAll(\"#\", \"\");\n        content = content.replaceAll(\"•\", \"\");\n        content = content.replaceAll(\"+\", \"\");\n        content = content.replaceAll(`_/l\\_`, \"\"); // eslint-disable-line\n        content = content.replaceAll(\n          /([\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF])/g,\n          \" \"\n        );\n\n        this.fda = await this.findfda(content);\n        console.log(this.fda);\n        // var selectpro = {\n        //   url: this.data.url,\n        //   // id: this.currentUser.id,\n        // };\n        // await MapRuleBasedService.getproduct_token(selectpro).then(async (res) => {\n          // console.log(res.data);\n          // console.log(content);\n          // if (res.data.id) {\n          //   this.product_token = res.data.id;\n          // }\n          // console.log(this.product_token);\n          // console.log(LinkService.getpythonlink()+'/worktokendesc?text=' + content);\n          con = {\n            content: content,\n          };\n          await axios\n            .post(LinkService.getpythonlink() + \"/wordtokendesc\", con)\n            .then(async (res) => {\n              // var sentence = res.data.sentent.replaceAll(\"<spanstyle\", \"<span style\");\n              var des = {\n                url: this.data.url,\n                sentence: content,\n                sentence_keyword: res.data.sentent,\n                keyword_id: res.data.keywordId,\n                status: 1,\n              };\n              console.log(des);\n              if (this.product_token == 0) {\n                await MapRuleBasedService.createproduct_token(des).then(\n                  async (producttoken) => {\n                    console.log(producttoken);\n                    this.product_token = producttoken.data.id;\n                    await this.checkfda(content, this.product_token);\n                    // console.log(producttoken);\n                    this.product_token = producttoken.data.id;\n                    con = {\n                      content: content,\n                    };\n                    //console.log(con);\n                    await axios\n                      .post(LinkService.getpythonlink() + \"/checkkeyword\", con)\n                      .then(async (res) => {\n                        console.log(res.data);\n                        if (res.data.length > 0) {\n                          for (let r = 0; r < res.data.length; r++) {\n                            var sentencetoken = res.data[r].sentent.replaceAll(\n                              '\"',\n                              \"\"\n                            ); // eslint-disable-line\n                            sentencetoken = sentencetoken.replaceAll(\n                              \"<spanstyle\",\n                              \"<span style\"\n                            );\n\n                            // sentencetoken = sentencetoken.replaceAll('\"color:red\\\"','\"color:red\"')\n                            var advertise = {\n                              product_token_id: this.product_token,\n                              keyword_dict_id: res.data[r].keyword_dict_id,\n                              dict_id: res.data[r].dict_id,\n                              dict_name: res.data[r].dict_name,\n                              sentent: sentencetoken,\n                              sen: res.data[r].sen,\n                            };\n                            // console.log(this.product_token);\n                            await AdvertiseService.createadvertise(advertise).then(\n                              async () => {\n                                if (r + 1 == res.data.length) {\n                                  var getprotoken = {\n                                    url: this.product_token,\n                                  };\n                                  await MapRuleBasedService.getproductkeyword(\n                                    getprotoken\n                                  ).then(async (pro) => {\n                                    // console.log(pro.data);\n                                   await this.tokendata(pro.data);\n                                  });\n                                }\n                              }\n                            );\n                          }\n                        } else {\n                          await this.getdetail();\n                        }\n                      });\n                  }\n                );\n              } else {\n                await AdvertiseService.deleteadvertise(this.product_token).then(\n                  async () => {\n                    await MapRuleBasedService.updatproduct_token(\n                      this.product_token,\n                      des\n                    ).then(async () => {\n                      // await AdvertiseService.deleteadvertise(this.product_token).then(async ()=>{\n                      // console.log(del);\n                      await this.checkfda(content, this.product_token);\n                      con = {\n                        content: content,\n                      };\n                      //console.log(con);\n                      axios\n                        .post(\n                          LinkService.getpythonlink() + \"/checkkeyword\",\n                          con\n                        )\n                        .then(async (res) => {\n                          //console.log(res.data);\n                          if (res.data.length > 0) {\n                            for (let r = 0; r < res.data.length; r++) {\n                              var sentencetoken = res.data[\n                                r\n                              ].sentent.replaceAll('\"', \"\"); // eslint-disable-line\n                              sentencetoken = sentencetoken.replaceAll(\n                                \"<spanstyle\",\n                                \"<span style\"\n                              );\n\n                              // sentencetoken = sentencetoken.replaceAll('\"color:red\\\"','\"color:red\"')\n                              var advertise = {\n                                product_token_id: this.product_token,\n                                keyword_dict_id: res.data[r].keyword_dict_id,\n                                dict_id: res.data[r].dict_id,\n                                dict_name: res.data[r].dict_name,\n                                sentent: sentencetoken,\n                                sen: res.data[r].sen,\n                                status: 1,\n                              };\n                              // console.log(this.product_token);\n                              AdvertiseService.createadvertise(advertise).then(\n                                () => {\n                                  if (r + 1 == res.data.length) {\n                                    var getprotoken = {\n                                      url: this.product_token,\n                                    };\n                                    MapRuleBasedService.getproductkeyword(\n                                      getprotoken\n                                    ).then((pro) => {\n                                      // console.log(pro.data);\n                                      this.tokendata(pro.data);\n                                    });\n                                  }\n                                }\n                              );\n                            }\n                          }\n                        });\n                    });\n                  }\n                );\n              }\n            });\n        // });\n      }\n    },\n    getMax(arr, prop) {\n      var max;\n      for (var i = 0; i < arr.length; i++) {\n        if (max == null || parseInt(arr[i][prop]) > parseInt(max[prop]))\n          max = arr[i];\n      }\n      return max;\n    },\n    getMaxlength(arr, prop) {\n      var max;\n      for (var i = 0; i < arr.length; i++) {\n        if (max == null || parseInt(arr[i][prop]) > parseInt(max[prop]))\n          max = arr[i];\n      }\n      return max;\n    },\n    getAllMaxArray(arr, value) {\n      var array = [];\n      arr.map(function (num, idx) {\n        if (num.allcount == value) {\n          array.push(arr[idx]);\n        }\n      });\n      return array;\n    },\n    async tokendata(list) {\n      //console.log(list);\n      if (list.keyword.length > 0) {\n        for (let l = 0; l < list.keyword.length; l++) {\n          //console.log(list.keyword[l].keyword_dict_id);\n          if (list.keyword[l].keyword_dict_id) {\n            var map = {\n              id: list.keyword[l].id,\n              url: list.keyword[l].keyword_dict_id,\n              keyword_id: list.keyword[l].dict_id,\n            };\n            // console.log(map);\n            await MapRuleBasedService.getmapproduct(map).then(async (res) => {\n              // console.log(res.data);\n              var maxvalue = this.getMax(res.data, \"allcount\");\n              // console.log(maxvalue.allcount);\n              var i = this.getAllMaxArray(res.data, maxvalue.allcount);\n              // console.log(i);\n              var bestdata = this.getMax(i, \"length\");\n              // console.log(bestdata);\n              // getAllIndexes\n              // console.log(bestdata);\n              var best = {\n                id: list.keyword[l].id,\n                sentence: bestdata,\n              };\n              console.log(best);\n              var rule_based_name = bestdata.name.toString();\n              rule_based_name = rule_based_name.replaceAll(\",\", \"\");\n              console.log(rule_based_name);\n              await axios\n                .get(\n                  LinkService.getpythonlink() +\n                    \"/loaddict?word=\" +\n                    rule_based_name\n                )\n                .then(async () => {\n                  await MapRuleBasedService.getbestrulebased(best).then(\n                    async (res) => {\n                      console.log(res.data);\n\n                      var rulebased = {\n                        count_rulebased: res.data.count,\n                        sentence_rulebase: res.data.sentence,\n                        rule_based_id: res.data.rule_based_id,\n                        rule_based_name: res.data.rule_based_name,\n                        map_rule_based_id: res.data.map_id,\n                      };\n                      console.log(rulebased);\n                      // console.log(list.keyword[l].id);\n                      await MapRuleBasedService.updaterulebased(\n                        list.keyword[l].id,\n                        rulebased\n                      ).then(async () => {\n                        if (l + 1 == list.keyword.length) {\n                          await this.getdetail();\n                        }\n                      });\n                    }\n                  );\n                });\n              // list.keyword[l].rulebase = res.data;\n              // if (l + 1 == list.keyword.length) {\n              //   this.compare(list);\n              // }\n            });\n          }\n\n          // }\n        }\n      } else {\n        await this.getdetail();\n      }\n    },\n    compare(list) {\n      for (let k = 0; k < list.keyword.length; k++) {\n        // console.log(list.keyword[k]);\n        var dict_id = JSON.parse(list.keyword[k].dict_id);\n        // var rulebased = JSON.parse(list.keyword[k].rulebase)\n        // console.log(list.keyword[k].rulebased);\n        if (list.keyword[k].rulebase) {\n          let uniqueCharsrule = list.keyword[k].rulebase.filter((c, index) => {\n            return list.keyword[k].rulebase.indexOf(c) === index;\n          });\n          var filteredArray = dict_id.filter(function (n) {\n            return uniqueCharsrule.indexOf(n) !== -1;\n          });\n          // console.log(filteredArray);\n          // console.log('filteredArray',filteredArray);\n          // console.log('dict_id',dict_id.length);\n          // console.log(sumdictId.length);\n          var percentage =\n            (100 * parseInt(filteredArray.length)) / parseInt(dict_id.length);\n          // console.log(percentage);\n          list.keyword[k].percentage = percentage;\n        } else {\n          list.keyword[k].percentage = 0;\n        }\n        if (k + 1 == list.keyword.length) {\n          this.list = list;\n          // this.status = true;\n        }\n      }\n    },\n    getAllIndexes(arr, val) {\n      var indexes = [],\n        i = -1;\n      while ((i = arr.indexOf(val, i + 1)) != -1) {\n        indexes.push(i);\n      }\n      return indexes;\n    },\n    findfda(data) {\n      var text = [\"หมายเลขใบอนุญาต/อย.\"];\n      // var end = ['']\n      var findfda = data;\n      for (let t = 0; t < text.length; t++) {\n        findfda = findfda.substring(findfda.indexOf(text[t]), data.length);\n        var endindex = this.getAllIndexes(findfda, \" \");\n        findfda = findfda.substring(findfda.indexOf(text[t]), endindex[1]);\n      }\n      // console.log(findfda);\n\n      findfda = findfda.replaceAll(\"หมายเลขใบอนุญาต/อย.\", \"\");\n      findfda = findfda.replaceAll(\"-\", \"\");\n      findfda = findfda.replaceAll(\"–\", \"\");\n      findfda = findfda.replaceAll(\" \", \"\");\n      // console.log(findfda);\n      // var regex = /\\d+/g;\n      // var matches = findfda.match(regex);  // creates array from matches\n      // console.log(matches[0]);\n      return findfda;\n    },\n    async checkfda(content, id) {\n      console.log(this.fda);\n      if (this.fda) {\n        var fda = this.fda;\n        var product_status = 0;\n        const url = \"https://tawaiforhealth.org/api/oryor/check-product\";\n        const data = { number_src: fda };\n        // console.log(data);\n        const options = {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json;charset=UTF-8\",\n          },\n          body: JSON.stringify(data),\n        };\n\n        await fetch(url, options)\n          .then((response) => response.json())\n          .then(async (data) => {\n            if (data.message) {\n              this.product.push({\n                name: \"-\",\n                detail: content,\n                fda: this.fda,\n                cncnm: \"-\",\n                typepro: \"-\",\n                lcnno: \"-\",\n                productha: \"-\",\n                produceng: \"-\",\n                licen: \"-\",\n                Addr: \"-\",\n                Newcode: \"-\",\n                status: \"-\",\n                token: \"\",\n              });\n              this.procheck = {\n                fda: this.fda,\n                mapfda: \"-\",\n                cncnm: \"-\",\n                productha: \"-\",\n                produceng: \"-\",\n                name: \"-\",\n                product_status: 0,\n                cat_status: 0,\n                fda_status: 0,\n                name_status: 0,\n                typepro: \"-\",\n                type: \"-\",\n              };\n\n              // this.status = true\n            } else {\n              // console.log(data);\n              // console.log(data.cncnm.includes(\"คงอยู่\"))\n              if (data.cncnm.includes(\"คงอยู่\")) {\n                product_status = 1;\n                this.colorfda = \"background-color:#a3e9a4\";\n              } else {\n                product_status = 3;\n              }\n              console.log(this.colorfda);\n              var con = {\n                fda: fda,\n                productha: data.productha,\n                produceng: data.produceng,\n                typepro: data.typepro,\n                content: content,\n              };\n              await axios\n                .post(LinkService.getpythonlink() + \"/checkfda\", con)\n                .then(async (res) => {\n                  // console.log(res.data);\n                  var pro = {\n                    name: res.data.name,\n                    fda: fda,\n                    product_status: product_status,\n                    cat_status: res.data.mapcatstatus,\n                    fda_status: product_status,\n                    name_status: res.data.mapnamestatus,\n                  };\n                  // console.log(pro);\n                  await MapRuleBasedService.updatemap(id, pro).then(() => {\n                    // console.log(res.data);\n                    this.product.push({\n                      name: data.productha + \" \" + data.produceng,\n                      detail: content,\n                      fda: fda,\n                      cncnm: data.cncnm,\n                      typepro: data.typepro,\n                      lcnno: data.lcnno,\n                      productha: data.productha,\n                      produceng: data.produceng,\n                      licen: data.licen,\n                      Addr: data.Addr,\n                      Newcode: data.Newcode,\n                      status: product_status,\n                      token: res.data.token,\n                    });\n                    this.procheck = {\n                      fda: fda,\n                      mapfda: data.lcnno,\n                      cncnm: data.cncnm,\n                      productha: data.productha,\n                      produceng: data.produceng,\n                      name: res.data.name,\n                      product_status: product_status,\n                      cat_status: res.data.mapcatstatus,\n                      fda_status: product_status,\n                      name_status: res.data.mapnamestatus,\n                      typepro: data.typepro,\n                      type: res.data.category,\n                    };\n                    this.colorcat = res.data.colorcat;\n                    this.colorname = res.data.colorname;\n                    // console.log(this.product);\n                    // console.log(this.procheck);\n                    // console.log(this.fda);\n                  });\n                });\n\n              // this.status = true\n            }\n          });\n      } else {\n        this.product.push({\n          name: \"-\",\n          detail: content,\n          fda: this.fda,\n          cncnm: \"-\",\n          typepro: \"-\",\n          lcnno: \"-\",\n          productha: \"-\",\n          produceng: \"-\",\n          licen: \"-\",\n          Addr: \"-\",\n          Newcode: \"-\",\n          status: \"-\",\n          token: \"\",\n        });\n        this.procheck = {\n          fda: this.fda,\n          mapfda: \"-\",\n          cncnm: \"-\",\n          productha: \"-\",\n          produceng: \"-\",\n          name: \"-\",\n          product_status: 0,\n          cat_status: 0,\n          fda_status: 0,\n          name_status: 0,\n          typepro: \"-\",\n          type: \"-\",\n        };\n\n        // this.status = true\n      }\n    },\n  },\n  mounted() {\n//     var best = {\n//     \"id\": 67,\n//     \"sentence\": {\n//         \"length\": 2,\n//         \"allcount\": 100,\n//         \"rule\": [\n//             8899,\n//             57\n//         ],\n//         \"name\": [\n//             \"ควบคุม\",\n//             \"น้ำหนัก\"\n//         ],\n//         \"map_id\": 75\n//     }\n// }\n//                   MapRuleBasedService.getbestrulebased(best).then(\n//                      (res) => {\n//                       console.log(res.data);\n//                     });\n    // var text = 'หมายเลขใบอนุญาต/อย. 13-1-13465-5-0052 จำนวนสินค้า 415 ส่งจาก'\n    // console.log(this.findfda(text));\n    // this.data.url =\n    //   \"https://shopee.co.th/%E2%99%A6%EF%B8%8F%E0%B9%82%E0%B8%89%E0%B8%A1%E0%B9%83%E0%B8%AB%E0%B8%A1%E0%B9%88-%E0%B8%82%E0%B8%AD%E0%B8%87%E0%B9%81%E0%B8%97%E0%B9%89%E2%99%A6%EF%B8%8F-%E0%B8%82%E0%B8%B2%E0%B8%A2%E0%B8%94%E0%B8%B5%E0%B8%A1%E0%B8%B2%E0%B8%81-%E0%B8%81%E0%B8%B2%E0%B9%81%E0%B8%9F-%E0%B8%A5%E0%B8%B4%E0%B9%82%E0%B8%8B%E0%B9%88-%E0%B8%9E%E0%B8%A5%E0%B8%B1%E0%B8%AA-%E2%80%8B-coffee-lishou-%E0%B8%81%E0%B8%B2%E0%B9%81%E0%B8%9F%E0%B8%84%E0%B8%A7%E0%B8%9A%E0%B8%84%E0%B8%B8%E0%B8%A1%E0%B8%99%E0%B9%89%E0%B8%B3%E0%B8%AB%E0%B8%99%E0%B8%B1%E0%B8%81-%E0%B8%81%E0%B8%B2%E0%B9%81%E0%B8%9F%E0%B8%84%E0%B8%B8%E0%B8%A1%E0%B8%AB%E0%B8%B4%E0%B8%A7-%E0%B8%81%E0%B8%B2%E0%B9%81%E0%B8%9F%E0%B8%A5%E0%B8%94%E0%B8%99%E0%B9%89%E0%B8%B3%E0%B8%AB%E0%B8%99%E0%B8%B1%E0%B8%81-%E0%B8%81%E0%B8%B2%E0%B9%81%E0%B8%9F%E0%B8%A5%E0%B8%94%E0%B8%84%E0%B8%A7%E0%B8%B2%E0%B8%A1%E0%B8%AD%E0%B9%89%E0%B8%A7%E0%B8%99\";\n    // this.data.content =\n    //   \"️ถ้าเป็นลูกค้าพิมแล้ว ดูแลจนน้ำหนักลดเลยค่ะ สั่งซื้อสินค้าแล้ว ทักแชทมาคุยกันได้เลยค่ะ\";\n    // // var url = this.data.url.split('-i.')\n    // var content = this.data.content.replaceAll(\n    //   /([\\uE000-\\uF8FF]|\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDDFF])/g,\n    //   \"\"\n    // );\n    // content = content.replaceAll(\n    //   /(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|\\ud83c[\\ude32-\\ude3a]|\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])/g,\n    //   \"\"\n    // );\n    // content = content.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"\");\n    // content = content.replaceAll(\"_\", \"\");\n    // content = content.replaceAll(\"!\", \"\");\n    // content = content.replaceAll(\"*\", \"\");\n    // content = content.replaceAll(\"&\", \"\");\n    // content = content.replaceAll(\"#\", \"\");\n    // content = content.replaceAll(`_/l\\_`, \"\"); // eslint-disable-line\n    // // console.log(LinkService.getpythonlink()+'/wordtokendesc?text=' + content);\n    // // axios.get(LinkService.getpythonlink()+'/wordtokendesc?text='+content).then(async (res) => {\n    // //   console.log(res.data);\n    // // })\n    // console.log(LinkService.getpythonlink() + \"/checkkeyword?text=\" + content);\n    // var con = {\n    //   content: content,\n    // };\n    // axios\n    //   .post(LinkService.getpythonlink() + \"/checkkeyword?text=\" + content, con)\n    //   .then(async (res) => {\n    //     console.log(res.data);\n    //     //       for (let r = 0; r < res.data.length; r++) {\n    //     //         var advertise = {\n    //     //           product_token_id:1,\n    //     //           keyword_dict_id:res.data[r].keyword_dict_id,\n    //     //           dict_id:res.data[r].dict_id,\n    //     //           dict_name:res.data[r].dict_name,\n    //     //           sen:res.data[r].sen,\n    //     //           sentent:res.data[r].sentent,\n    //     //         }\n    //     //         AdvertiseService.createadvertise(advertise).then((res)=>{\n    //     //           console.log(res.data);\n    //     //         })\n    //     //       }\n    //   });\n    // //  console.log(url);\n    // //     var selectpro = {\n    // //       url:url[0]\n    // //      }\n    // //      MapRuleBasedService.getproduct_token(selectpro).then((res)=>{\n    // //       console.log(res.data);\n    // // var list = res.data\n    // // this.tokendata(list)\n    // // for (let l = 0; l < list.keyword.length; l++) {\n    // //   // console.log(this.list.keyword[l].map);\n    // //   // for (let m = 0; m < this.list.keyword[l].length; m++) {\n    // //     if (list.keyword[l].map) {\n    // //       var map = {\n    // //     url:JSON.stringify(list.keyword[l].map)\n    // //      }\n    // //     //  console.log(map);\n    // //      MapRuleBasedService.getmapproduct(map).then((res)=>{\n    // //       list.keyword[l].rulebase = res.data\n    // //       if (l+1 == list.keyword.length) {\n    // //         this.compare(list)\n    // //       }\n    // //      });\n    // //     }\n    // //   }\n    // // }\n    // // console.log(this.list);\n    // this.status = true;\n    // //  })\n  },\n};\n</script>\n\n<style>\nhtml,\nbody {\n  height: 100%;\n  margin: 0px;\n}\n</style>\n"]}]}