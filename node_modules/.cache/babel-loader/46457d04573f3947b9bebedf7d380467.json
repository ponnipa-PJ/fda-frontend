{"remainingRequest":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/babel-loader/lib/index.js!/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/User.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/User.vue","mtime":1677654957536},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/babel.config.js","mtime":1677654957527},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1687492401267},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/babel-loader/lib/index.js","mtime":1687492401655},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1687492401267},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js","mtime":1687492401738}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFVzZXJTZXJ2aWNlIGZyb20gIi4uL3NlcnZpY2VzL1VzZXJTZXJ2aWNlIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJIZWxsb1dvcmxkIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbGlzdDogW10sCiAgICAgIGl0ZW1QcmV2aWV3SW1hZ2U6ICIiLAogICAgICBpZDogIiIsCiAgICAgIGl0ZW06IFtdLAogICAgICBpbWc6ICIiLAogICAgICBpbWFnZTogIiIsCiAgICAgIGV4Y2lzZV9uYW1lOiAiIiwKICAgICAgZXhjaXNlX2J5OiAiIiwKICAgICAgc29ydGlkOiAwLAogICAgICBkYXRlOiAiIiwKICAgICAgY291bnRhbGw6IDAKICAgIH07CiAgfSwKICBwcm9wczogewogICAgbXNnOiBTdHJpbmcKICB9LAogIGNvbXB1dGVkOiB7fSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5sb2FkZGF0YSgpOwogIH0sCiAgbWV0aG9kczogewogICAgbG9hZGRhdGE6IGZ1bmN0aW9uIGxvYWRkYXRhKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgVXNlclNlcnZpY2UuZ2V0VXNlcnMoKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpcy5saXN0ID0gcmVzLmRhdGE7CiAgICAgIH0pOwogICAgfSwKICAgIG1ha2VpZDogZnVuY3Rpb24gbWFrZWlkKGxlbmd0aCkgewogICAgICB2YXIgcmVzdWx0ID0gIiI7CiAgICAgIHZhciBjaGFyYWN0ZXJzID0gIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5IjsKICAgICAgdmFyIGNoYXJhY3RlcnNMZW5ndGggPSBjaGFyYWN0ZXJzLmxlbmd0aDsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKICAgICAgICByZXN1bHQgKz0gY2hhcmFjdGVycy5jaGFyQXQoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY2hhcmFjdGVyc0xlbmd0aCkpOwogICAgICB9CgogICAgICByZXR1cm4gcmVzdWx0OwogICAgfSwKICAgIGdlbmVyYXRlOiBmdW5jdGlvbiBnZW5lcmF0ZSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgZGF0YSA9IHsKICAgICAgICB1c2VyX2tleTogdGhpcy5tYWtlaWQoNSksCiAgICAgICAgc3RhdHVzOiAwLAogICAgICAgIGNyZWF0ZWRfYnk6IDEsCiAgICAgICAgdXBkYXRlZF9ieTogMQogICAgICB9OwogICAgICBVc2VyU2VydmljZS5jcmVhdGVVc2VyKGRhdGEpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGNvbnNvbGUubG9nKHJlcy5kYXRhKTsKCiAgICAgICAgX3RoaXMyLmxvYWRkYXRhKCk7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AAEA;AACAA,oBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,cADA;AAEAC,0BAFA;AAGAC,YAHA;AAIAC,cAJA;AAKAC,aALA;AAMAC,eANA;AAOAC,qBAPA;AAQAC,mBARA;AASAC,eATA;AAUAC,cAVA;AAWAC;AAXA;AAaA,GAhBA;AAiBAC;AACAC;AADA,GAjBA;AAoBAC,cApBA;AAqBAC,SArBA,qBAqBA;AACA;AACA,GAvBA;AAwBAC;AACAC,YADA,sBACA;AAAA;;AACAC;AACA;AACA,OAFA;AAGA,KALA;AAMAC,UANA,kBAMAC,MANA,EAMA;AACA;AACA,uBACA,gEADA;AAEA;;AACA;AACAC,oCACAC,4CADA;AAGA;;AACA;AACA,KAjBA;AAkBAC,YAlBA,sBAkBA;AAAA;;AACA;AACAC,gCADA;AAEAC,iBAFA;AAGAC,qBAHA;AAIAC;AAJA;AAMAT;AACAU;;AACA;AACA,OAHA;AAIA;AA7BA;AAxBA","names":["name","data","list","itemPreviewImage","id","item","img","image","excise_name","excise_by","sortid","date","countall","props","msg","computed","mounted","methods","loaddata","UserService","makeid","length","result","Math","generate","user_key","status","created_by","updated_by","console"],"sourceRoot":"src/components","sources":["User.vue"],"sourcesContent":["<template>\n  <div class=\"hello container mt-5\">\n    <div class=\"row\">\n      <div class=\"col-md-12\" style=\"text-align: center\">รายการผู้ใช้</div>\n      <div class=\"col-md-10\" style=\"text-align: center\"></div>\n      <div class=\"col-md-2\" style=\"text-align: center\">\n        <button\n          @click=\"generate()\"\n          type=\"submit\"\n          class=\"btn btn-success\"\n          style=\"margin-top: 10px; text-align: right\"\n        >\n          สร้างรหัสเริ่มต้นการใช้งาน\n        </button>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12 mt-3\">\n        <table class=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th scope=\"col\" class=\"table-secondary\">ลำดับที่</th>\n              <th scope=\"col\" class=\"table-secondary\">รหัสเริ่มต้น</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(l, i) in list\" :key=\"i + 1\">\n              <td scope=\"row\">{{ i + 1 }}</td>\n              <td scope=\"row\">{{ l.user_key }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    <!-- <input id=\"file\" type=\"file\" accept=\"image/*\" @change=\"onFileChange\" />\n    <img v-if=\"itemPreviewImage\" :src=\"itemPreviewImage\" /> -->\n  </div>\n</template>\n\n<script>\nimport UserService from \"../services/UserService\";\n\nexport default {\n  name: \"HelloWorld\",\n  data() {\n    return {\n      list: [],\n      itemPreviewImage: \"\",\n      id: \"\",\n      item: [],\n      img: \"\",\n      image: \"\",\n      excise_name: \"\",\n      excise_by: \"\",\n      sortid: 0,\n      date: \"\",\n      countall: 0,\n    };\n  },\n  props: {\n    msg: String,\n  },\n  computed: {},\n  mounted() {\n    this.loaddata();\n  },\n  methods: {\n    loaddata() {\n      UserService.getUsers().then((res) => {\n        this.list = res.data;\n      });\n    },\n    makeid(length) {\n      var result = \"\";\n      var characters =\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n      var charactersLength = characters.length;\n      for (var i = 0; i < length; i++) {\n        result += characters.charAt(\n          Math.floor(Math.random() * charactersLength)\n        );\n      }\n      return result;\n    },\n    generate(){\n      var data ={\n        user_key:this.makeid(5),\n        status:0,\n        created_by:1,\n        updated_by:1,\n      }\n      UserService.createUser(data).then((res)=>{\n        console.log(res.data);\n        this.loaddata()\n      })\n    }\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}