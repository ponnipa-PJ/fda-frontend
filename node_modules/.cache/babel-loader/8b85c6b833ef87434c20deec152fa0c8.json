{"remainingRequest":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/babel-loader/lib/index.js!/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/addproducttoken.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/src/components/addproducttoken.vue","mtime":1701146208973},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/babel.config.js","mtime":1677654957527},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1687492401267},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/babel-loader/lib/index.js","mtime":1687492401655},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1687492401267},{"path":"/Users/ponnipa/Documents/GitHub/fda-frontend/node_modules/vue-loader/lib/index.js","mtime":1687492401738}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6YA,0B,CACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAA,aADA;AAEAC;AACAC;AADA,GAFA;AAKAC,MALA,kBAKA;AACA;AACAC,2BADA;AAEAC,uBAFA;AAGAC,0BAHA;AAIAC,8BAJA;AAKAC,sBALA;AAMAC,kBANA;AAOAC,mBAPA;AAQAC,mBARA;AASAC,oBATA;AAUAC,cAVA;AAWAC,aAXA;AAYAC,cAZA;AAaAC,mBAbA;AAcAC,iBAdA;AAeAC,oBAfA;AAgBAC,kBAhBA;AAiBAC,mBAjBA;AAkBAC,uBAlBA;AAmBAC,cAnBA;AAoBAC,sBApBA;AAqBAC,mBArBA;AAsBAC,kBAtBA;AAuBAC,kBAvBA;AAwBAC,2CAxBA;AAyBAC,0CAzBA;AA0BAC,0CA1BA;AA2BAC,YA3BA;AA4BAC,iBA5BA;AA6BAC,0CA7BA;AA8BAC,cA9BA;AA+BAC,iBA/BA;AAgCAC,gBAhCA;AAiCAC,aAjCA;AAkCAC,aAlCA;AAmCAlC,cAnCA;AAoCAmC,sBApCA;AAqCAC,4BArCA;AAsCAC,aAtCA;AAuCAC,aAvCA;AAwCAC,iBAxCA;AAyCAC,kBAzCA;AA0CAC,gBA1CA;AA2CAC,eA3CA;AA4CAC,sBA5CA;AA6CAC,sBA7CA;AA8CAC;AA9CA;AAgDA,GAtDA;AAuDAC;AACAC,eADA,yBACA;AACA;AACA;AAHA,GAvDA;AA4DAC;AACAC,kBADA,4BACA;AAAA;;AACAC;AACA;AACA;AACA,OAHA;AAIA,KANA;AAOAC,oBAPA,8BAOA;AAAA;;AACAC;AACA;AACA;AACA,OAHA;AAIA,KAZA;AAaAC,cAbA,sBAaArD,IAbA,EAaA;AACAA,8BADA,CAEA;;AACA;;AACA;AACA;AACAsD;AACA,OAPA,CAQA;;;AACA,+BATA,CAUA;;AACAC,6EAXA,CAYA;;AACA;AACA,KA3BA;AA4BAC,kBA5BA,0BA4BAC,CA5BA,EA4BAC,CA5BA,EA4BA;AACA;AACA;;AACA;AACAC;AACA,OAFA,MAEA;AACAA;AACA,OAFA,MAEA;AACAA;AACA;;AACA;AACA,KAvCA;AAwCAC,SAxCA,mBAwCA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KArDA;AAsDAC,OAtDA,eAsDA7D,IAtDA,EAsDA;AACA;AACA;;AACA;AACAA;AAAA;AAAA;AACA8D;AAEAA;AACA,OALA,MAKA;AACAA;AACA;;AAEA;AACA,KAnEA;AAoEAC,QApEA,kBAoEA;AACA;AACA;AACAC;AACA,OAFA,MAEA;AACA;AACAnE,6BADA;AAEAgB;AAFA,UADA,CAKA;;AACAoD;AACA;AACA;AACAD;AACA,WAFA,MAEA;AACAE;AACA;AACA;AAEAC;AACAH,oCALA,CAMA;AACA,aAPA;AAQA;AACA,SAdA;AAeA;AACA,KA9FA;AA+FAI,iBA/FA,yBA+FApE,IA/FA,EA+FA;AACA;AACA;AACA;AACA;AACA,KApGA;AAqGAqE,cArGA,sBAqGAC,GArGA,EAqGA7B,MArGA,EAqGA;AAAA;;AACA;AACA;;AAFA,iCAIA8B,CAJA;AAKA;AACAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACAM;AACA,qBAJA,CAKA;AACA;;;AANA,0BAOAD,mBAPA;AAAA;AAAA;AAAA;;AAQAE,uBARA,6HAQAD,MARA,SASA;;AATA;AAAA,2BAWAE;AACA;AACA;AACAf;;AACA;AACA;AACAA;AACA;;AACAA;AACAA;AACAA,oCATA,CAUA;;AAA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ACA;;AACA;AACA0B;AADA;AAGAH,YACAI,IADA,CACAF,mDADA,EACAG,GADA,EAEA5B,IAFA,CAEA;AACA;AACA;AACA;AACA;AACA;AACA,OARA,EA1BA,CAmCA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,KA5WA;AA6WA6B,QA7WA,kBA6WA;AACA;AACAR;AACA;AACAA;AACA;AACAK,6CACA,gEADA,EAEA,EAFA;AAIAA,mCACA,gmBADA,EAEA,GAFA;AAKAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA,+CAxBA,CAwBA;;AACAA,mCACA,sHADA,EAEA,GAFA;AAIAL;AACA,KA3YA;AA4YAS,YA5YA,sBA4YA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,iBADA;;AAAA;AAEAJ,uBAFA,GAEA,EAFA;AAGAA,yDACA,gEADA,EAEA,EAFA;AAIAA,6CACA,gmBADA,EAEA,GAFA;AAKAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA,yDArBA,CAqBA;;AACAA,6CACA,sHADA,EAEA,GAFA;AAIA5E,oBA1BA,GA0BA,+BA1BA;AA2BAuE;AACAO,mBA5BA,GA4BA;AACAF;AADA,iBA5BA;AA+BAH,sBACAI,IADA,CACAF,6CADA,EACAG,GADA,EAEA5B,IAFA;AAAA,sFAEA;AAAA;AAAA;AAAA;AAAA;AACAqB;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFA;;AAAA;AAAA;AAAA;AAAA;;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoCA,KAhbA;AAibAU,mBAjbA,2BAibA/G,IAjbA,EAibA;AACAqG;AACA;AACA;;AACA;AACA;AACAW;AACA;AACA,OARA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;AAQAC,qEARA;AASAC,6DATA;AAUAC,2DAVA;AAWAC,iEAXA;AAYAtK,kEAZA;AAaAuK;AAbA;;AAeA;AACA9I,oDADA;AAEA+I,8DAFA;AAGAT,6DAHA;AAIAG,qEAJA;AAKAC,qEALA;AAMAnL,+DANA;AAOAsK,0EAPA;AAQAmB,6EARA;AASAC,sEATA;AAUAC,+EAVA;AAWAX,iEAXA;AAYA1J;AAZA;;AAcA;AACA;AACA,iFAjCA,CAkCA;AACA;AACA;AACA,yCArCA,CAXA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFA;;AAAA;AAAA;AAAA;AAAA,gCAnDA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFA;;AAAA;AAAA;AAAA;AAAA,qBA4GAuK,KA5GA,CA4GA;AACArF;AACA;AACA;AACA,iBAhHA,CAjBA;;AAAA;AAAA;AAAA;;AAAA;AAmIA;AACAxG,2BADA;AAEA8K,iCAFA;AAGArI,kCAHA;AAIAsI,4BAJA;AAKAC,8BALA;AAMAC,4BANA;AAOAC,gCAPA;AAQAC,gCARA;AASAC,4BATA;AAUAC,2BAVA;AAWAC,8BAXA;AAYAtK,6BAZA;AAaAuK;AAbA;;AAeA;;AACA;AACA9I,kCADA;AAEA+I,6BAFA;AAGAT,4BAHA;AAIAG,gCAJA;AAKAC,gCALA;AAMAnL,2BANA;AAOAsK,mCAPA;AAQAmB,+BARA;AASAC,+BATA;AAUAC,gCAVA;AAWAX,8BAXA;AAYA1J;AAZA,mBAnJA,CAkKA;;;AAlKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoKA,KAxvCA;AAyvCAwK,UAzvCA,kBAyvCAjF,OAzvCA,EAyvCA;AACA,kCADA,CAGA;;AACA;;AACA;AACA;AACAM;AACAA;AACAA,qDAJA,CAKA;;AACA;AACA;AACA1D;AACA;AACA;AAEA;;AACA+C;AACA;AACA;AA7wCA,GA5DA;AA20CAuF,SA30CA,qBA20CA;AAAA;;AACA;AACAvF;AACA;AACA;;AACA;AACAwF;AACA;AACA,qDAFA,CAGA;AACA,OAJA;AAKA,KAXA,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAt8CA","names":["name","components","ClipLoader","data","statusprocheck","statuslist","statusproduct","statusprocheckone","color","size","margin","radius","loading","list","url","file","status","urlPath","imagelists","tokenize","matchname","matchcategory","type","matchnamesum","statusname","statuscat","statusfda","colorname","colorfda","colorcat","id","keyword","colorkey","desc","arrList","alldata","back","next","product_token","title","key","fda","product","procheck","answer","typeId","prochecktext","producttypes","rulebasetypes","computed","currentUser","methods","getproducttype","ProductTypesService","getrulebasedtype","RulebasedTypesService","getsentent","arr","arrtxt","getstatuscheck","t","f","text","clear","cut","mapname","save","alert","KeywordService","DictService","document","getpercentage","savetorule","sen","d","iddata","sql","RuleBasedService","rule_based_id","dict_id","MapRuleBasedService","res","updatemaprule","then","savetorule_based","datas","advertiseId","statusfalse","statustrue","weight","advertise_id","maprule","keyword_id","user","map_dict","map_advertise","check","map_id","sendata","JSON","rule","map_rule_based_id","dict_name","no","console","checkkeyword","axios","get","LinkService","content","post","con","find","checkkey","findtypeproduct","findfda","finddescription","loaddict","getdetail","edit","findtype","split","FDATypesService","contentfull","des","sentence","sentence_keyword","sentencefull","type_rulebasedId","type_productId","r","sentencetoken","advertise","product_token_id","keyword_dict_id","sentent","AdvertiseService","getprotoken","replaceAll","search","getMax","prop","max","getMaxlength","getAllMaxArray","value","array","tokendata","l","map","maxvalue","i","bestdata","best","rule_based_name","rulebased","count_rulebased","sentence_rulebase","compare","k","filteredArray","percentage","getAllIndexes","val","indexes","checkfda","product_status","number_src","options","method","headers","Accept","body","fetch","detail","cncnm","typepro","lcnno","productha","produceng","licen","Addr","Newcode","token","mapfda","cat_status","fda_status","name_status","pro","catch","getfda","mounted","ProductsService"],"sourceRoot":"src/components","sources":["addproducttoken.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div>\n        <div class=\"form-group mt-5\">\n          <label for=\"exampleFormControlTextarea1\">ลำดับของเว็บไซต์</label>\n          <input\n          v-model=\"data.url\"\n                      type=\"text\"\n                      class=\"form-control form-control-sm\"\n                    />\n                    <label for=\"exampleFormControlTextarea1\" class=\"mt-3\">ประเภทผลิตภัณฑ์</label>\n                    <div class=\"form-check\" v-for=\"(p,i) in producttypes\" :key=\"i\">\n  <input class=\"form-check-input\" type=\"radio\" name=\"types\" :id=\"'types'+p.name\" :value=\"p.id\" v-model=\"data.type_productId\">\n  <label class=\"form-check-label\" :for=\"'types'+p.name\">\n    {{p.name}}\n  </label>\n</div>\n<!-- <div class=\"form-check\">\n  <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios2\" value=\"option2\">\n  <label class=\"form-check-label\" for=\"exampleRadios2\">\n    Second default radio\n  </label>\n</div> -->\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlTextarea1\">รายละเอียดสินค้า</label>\n          <textarea\n            v-model=\"data.content\"\n            class=\"form-control\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"7\"\n          ></textarea>\n        </div>\n        <!-- <label for=\"exampleFormControlTextarea1\" class=\"mt-3\">ประเภทผลิตภัณฑ์</label> -->\n                    <div class=\"form-check\" v-for=\"(r,i) in rulebasetypes\" :key=\"i\">\n  <input class=\"form-check-input\" type=\"radio\" name=\"rulebased\" :id=\"'rule'+r.name\" :value=\"r.id\" v-model=\"data.type_rulebasedId\">\n  <label class=\"form-check-label\" :for=\"'rule'+r.name\">\n    {{r.name}}\n  </label>\n</div>\n<div style=\"text-align:center\">\n        <button @click=\"search()\" type=\"submit\" class=\"mb-3 mt-3 btn btn-success\" v-if=\"!$route.query.id\">\n          เพิ่มข้อมูลสินค้า</button\n        >\n        <button @click=\"edit()\" type=\"submit\" class=\"mb-3 mt-3 btn btn-success\" v-else>\n          แก้ไขข้อมูลสินค้า</button\n        >&nbsp;\n        <button @click=\"clear()\" type=\"submit\" class=\"mb-3 mt-3 btn btn-danger\">\n          ล้างข้อมูล\n        </button>\n      </div>\n    </div>\n      <table class=\"table table-bordered\" v-if=\"statusprocheck\">\n        <thead>\n          <tr>\n            <th\n              scope=\"col\"\n              style=\"\n                text-align: center;\n                vertical-align: middle;\n                background-color: #ffb454;\n              \"\n            >\n              เงื่อนไขการตรวจสอบข้อที่ 1\n            </th>\n            <th\n              scope=\"col\"\n              style=\"\n                text-align: center;\n                vertical-align: middle;\n                background-color: #ffb454;\n              \"\n            >\n              ข้อมูลจากฐานข้อมูลอย.\n            </th>\n            <th\n              scope=\"col\"\n              style=\"\n                text-align: center;\n                vertical-align: middle;\n                background-color: #ffb454;\n              \"\n            >\n              ข้อมูลจากเว็บไซต์\n            </th>\n            <th\n              scope=\"col\"\n              style=\"\n                text-align: center;\n                vertical-align: middle;\n                background-color: #ffb454;\n              \"\n            >\n              ผลการตรวจสอบ\n            </th>\n            <th\n              scope=\"col\"\n              style=\"\n                text-align: center;\n                vertical-align: middle;\n                background-color: #ffb454;\n              \"\n            >\n              ข้อสรุป\n            </th>\n          </tr>\n        </thead>\n        <!-- {{procheck}} -->\n        <tbody>\n          <tr v-for=\"(p,o) in procheck\" :key=\"o\">\n            <td :style=\"colorfda\">เลขที่อนุญาต</td>\n            <td :style=\"colorfda\">{{ p.mapfda }}</td>\n            <td :style=\"colorfda\">{{ p.fda }}</td>\n            <td :style=\"colorfda\">{{ p.cncnm }}</td>\n            <td\n              v-if=\"\n                p.cat_status &&\n                p.name_status &&\n                p.fda_status == 1\n              \"\n              rowspan=\"3\"\n              style=\"\n                text-align: center;\n                vertical-align: middle;\n                background-color: #a3e9a4;\n              \"\n            >\n              <span>ผ่าน</span>\n            </td>\n            <td\n              v-else\n              rowspan=\"3\"\n              style=\"\n                text-align: center;\n                vertical-align: middle;\n                background-color: #f9bdbb;\n              \"\n            >\n              <span>ไม่ผ่าน</span>\n            </td>\n          </tr>\n          <tr v-for=\"(pp,oo) in procheck\" :key=\"oo+10\">\n            <td :style=\"colorcat\">ประเภทผลิตภัณฑ์</td>\n            <td :style=\"colorcat\">{{ pp.typepro }}</td>\n            <td :style=\"colorcat\">\n              <span v-if=\"pp.typepro\">{{ pp.type }}</span\n              ><span v-else>-</span>\n            </td>\n            <td :style=\"colorcat\">\n              <span v-if=\"pp.cat_status\">ผ่าน</span\n              ><span v-else>ไม่ผ่าน</span>\n            </td>\n          </tr>\n          <tr v-for=\"(ppp,ooo) in procheck\" :key=\"ooo+20\">\n            <td :style=\"colorname\">ชื่อผลิตภัณฑ์</td>\n            <td :style=\"colorname\">\n              {{ ppp.productha }}<br />{{ ppp.produceng }}\n            </td>\n            <td :style=\"colorname\"><span v-html=\"ppp.name\"></span></td>\n            <td :style=\"colorname\">\n              <span v-if=\"ppp.name_status\">ผ่าน</span\n              ><span v-else>ไม่ผ่าน</span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div style=\"text-align:center\" v-if=\"statusprocheckone && statuslist\"><span> เงื่อนไขการตรวจสอบข้อที่ 1 ไม่สามารถตรวจสอบได้ เนื่องจาก {{prochecktext}}</span></div>\n      <table class=\"table table-bordered mt-3 mb-5\" v-if=\"statuslist\">\n        <tbody>\n          <tr>\n            <th style=\"background-color: #ffb454; vertical-align: middle\">\n              เงื่อนไขการตรวจสอบข้อที่ 2\n            </th>\n            <th style=\"background-color: #ffb454; vertical-align: top\">\n              ข้อความโฆษณา\n            </th>\n            <th style=\"background-color: #ffb454; vertical-align: middle\">\n              ข้อความโฆษณาเกินจริง<br>\n              <div style=\"text-align: right;\">\n                    <button\n                      data-bs-toggle=\"modal\"\n                      data-bs-target=\"#AddScopusToken\"\n                      type=\"submit\"\n                      class=\"mb-3 btn btn-success\"\n                    >\n                      <i class=\"fa fa-plus\" aria-hidden=\"true\">\n                        เพิ่ม keyword</i\n                      >\n                    </button>\n                  </div>\n            </th>\n          </tr>\n          <tr>\n            <td :style=\"colorkey\">รายละเอียดสินค้า</td>\n            <td :style=\"colorkey\" style=\"width: 40%\">\n              <span v-html=\"list.sentence_keyword\"></span>\n            </td>\n            <!-- <th :style=\"colorkey\">ข้อความโฆษณา</th> -->\n            <!-- {{list}} -->\n            \n            <td :style=\"colorkey\" v-if=\"list.keyword != 1\">\n             \n              <tr v-for=\"(k, i) in list.keyword\" :key=\"i\">\n                <td>\n                  <span v-html=\"k.sentence_rulebase\"></span><br /><br />\n                  <span v-html=\"getsentent(k.rule_based_name)\"></span>\n                  <!-- <span v-for=\"(s, idx) in k.rule_based_name\" :key=\"idx\">{{\n                    s\n                  }}</span> -->\n                  <br /><br />\n                  <!-- <span>{{getstatuscheck(k.statustrue,k.statusfalse)}}</span> -->\n                  <span>ตรงกฎ</span>\n                  <span v-if=\"k.count_rulebased\"\n                    > {{ getpercentage(k) }}%</span\n                  ><br /><br />\n                  <!-- <div style=\"text-align: left\">\n                    <button\n                      data-bs-toggle=\"modal\"\n                      data-bs-target=\"#AddScopusToken\"\n                      type=\"submit\"\n                      class=\"mb-3 btn btn-success\"\n                    >\n                      <i class=\"fa fa-plus\" aria-hidden=\"true\">\n                        เพิ่ม keyword</i\n                      >\n                    </button>\n                  </div> -->\n                </td>\n                <td>\n                  <span>{{getstatuscheck(k.statustrue,k.statusfalse)}}</span\n                  >\n                  \n                  <!-- <span v-if=\"answer == 1\">เกินจริง</span\n                  ><span v-if=\"answer == 9\">ไม่เกินจริง</span\n                  ><span v-if=\"answer == 0\"></span> -->\n                </td>\n\n                <td>\n                  <button\n                    @click=\"savetorule_based(k, 1)\"\n                    type=\"submit\"\n                    class=\"mb-3 btn btn-success\"\n                  >\n                    <i class=\"fa fa-check\"></i></button\n                  >&nbsp;\n                  <button\n                    @click=\"savetorule_based(k, 9)\"\n                    type=\"submit\"\n                    class=\"mb-3 btn btn-danger\"\n                  >\n                    <i class=\"fa fa-times\"></i>\n                  </button>\n                </td>\n              </tr>\n            </td>\n            <td :style=\"colorkey\" v-else>\n              <!-- <div style=\"text-align: right;\">\n                    <button\n                      data-bs-toggle=\"modal\"\n                      data-bs-target=\"#AddScopusToken\"\n                      type=\"submit\"\n                      class=\"mb-3 btn btn-success\"\n                    >\n                      <i class=\"fa fa-plus\" aria-hidden=\"true\">\n                        เพิ่ม keyword</i\n                      >\n                    </button>\n                  </div> -->\n              <tr>\n                ไม่พบข้อความโฆษณาเกินจริง\n                <br /><br />\n                  <!-- <div style=\"text-align: left\">\n                    <button\n                      data-bs-toggle=\"modal\"\n                      data-bs-target=\"#AddScopusToken\"\n                      type=\"submit\"\n                      class=\"mb-3 btn btn-success\"\n                    >\n                      <i class=\"fa fa-plus\" aria-hidden=\"true\">\n                        เพิ่ม keyword</i\n                      >\n                    </button>\n                  </div> -->\n              </tr>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <table class=\"table mt-3\" v-if=\"statusproduct\">\n        <thead>\n          <tr>\n            <th scope=\"col\">สินค้า</th>\n            <th scope=\"col\">ข้อมูล</th>\n            <th scope=\"col\">FDA</th>\n            <th scope=\"col\">ตัดคำ</th>\n            <th scope=\"col\">ข้อมูลจากฐานข้อมูลอย.</th>\n            <!-- <th scope=\"col\"></th> -->\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(l, i) in product\" :key=\"i\">\n            <td :style=\"l.bg\">{{ l.name }}</td>\n            <td :style=\"l.bg\">{{ l.detail }}</td>\n            <!-- <td :style=\"l.bg\">\n              <div class=\"row\">\n          <div class=\"col-md-2\" v-for=\"(im ,i) in imagelists\" :key=\"i\">\n            <img :src=\"im\" width=\"100%\"/>\n          </div>\n        </div>\n            </td> -->\n            <td :style=\"l.bg\" style=\"width: 300px\">\n              <div>\n                เลขที่อนุญาต : {{ l.fda }}<br />\n                <!-- ชื่อผลิตภัณฑ์: <span v-html=\"matchname\"></span> -->\n                <!-- ชื่อผลิตภัณฑ์: {{l.productha}} -->\n              </div>\n            </td>\n            <td :style=\"l.bg\">{{ cut(l.token) }}</td>\n            <td\n              style=\"background-color: #bdedff\"\n              v-if=\"l.status == 1 || l.status == 3\"\n            >\n              <p class=\"card-text\">สถานะ : {{ l.cncnm || \"\" }}</p>\n              <p class=\"card-text\">\n                ประเภทผลิตภัณฑ์ :<span> {{ l.typepro }}</span>\n              </p>\n              <p class=\"card-text\">\n                ใบสำคัญ/เลขที่อนุญาต : <span> {{ l.lcnno }}</span>\n              </p>\n              <p class=\"card-text\">\n                ชื่อผลิตภัณฑ์ (TH) : <span> {{ l.productha }}</span>\n              </p>\n              <p class=\"card-text\">\n                ชื่อผลิตภัณฑ์ (EN) : <span> {{ l.produceng }}</span>\n              </p>\n              <p class=\"card-text\">ชื่อผู้รับอนุญาต : {{ l.licen }}</p>\n              <p class=\"card-text\">สถานที่ผลิต : {{ l.Addr }}</p>\n              <p class=\"card-text\">Newcode : {{ l.Newcode }}</p>\n            </td>\n            <td :style=\"l.bg\" v-else>ไม่พบข้อมูล</td>\n            <!-- <td :style=\"l.bg\">\n            <i class=\"fa fa-circle\" :style=\"l.icon\" aria-hidden=\"true\"></i>\n          </td> -->\n          </tr>\n        </tbody>\n      </table>\n      <clip-loader :loading=\"loading\" :color=\"color\" :size=\"size\"></clip-loader>\n      <!-- Modal -->\n      <div\n        class=\"modal fade\"\n        id=\"AddScopusToken\"\n        tabindex=\"-1\"\n        aria-labelledby=\"exampleModalLabel\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"exampleModalLabel\">{{ title }}</h5>\n            </div>\n            <div class=\"modal-body\">\n              <form>\n                <div class=\"card-body mt-3\">\n                  <div class=\"form-group mt-3\">\n                    <label>ข้อความ</label>\n                    <input\n                      v-model=\"key.name\"\n                      type=\"text\"\n                      min=\"1\"\n                      class=\"form-control form-control-sm\"\n                    />\n                  </div>\n                </div>\n              </form>\n            </div>\n            <div class=\"modal-footer mt-3\">\n              <button type=\"button\" class=\"btn btn-success\" @click=\"save()\">\n                บันทึก\n              </button>\n              <button\n                id=\"closedcategory\"\n                type=\"button\"\n                class=\"btn btn-secondary\"\n                data-bs-dismiss=\"modal\"\n              >\n                ปิด\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n// import ProductsService from '../services/ProductsService.js'\nimport DictService from \"../services/DictService\";\nimport RuleBasedService from \"../services/RuleBasedService\";\nimport MapRuleBasedService from \"../services/MapRuleBasedService\";\nimport LinkService from \"../services/LinkService\";\nimport AdvertiseService from \"../services/AdvertiseService\";\nimport KeywordService from \"../services/KeywordService\";\nimport ClipLoader from 'vue-spinner/src/ClipLoader.vue'\nimport FDATypesService from \"../services/FDATypesService\";\nimport ProductTypesService from \"../services/ProductTypesService\";\nimport RulebasedTypesService from \"../services/RulebasedTypesService\";\nimport ProductsService from '../services/ProductsService';\n\nexport default {\n  name: \"App\",\n  components: {\n    ClipLoader\n  },\n  data() {\n    return {\n      statusprocheck:false,\n      statuslist:false,\n      statusproduct:false,\n      statusprocheckone:false,\n      color: '#5bc0de',\n      size: '50px',\n      margin: '2px',\n      radius: '2px',\n      loading:false,\n      list: [],\n      url: \"\",\n      file: \"\",\n      status: false,\n      urlPath: \"\",\n      imagelists: \"\",\n      tokenize: \"\",\n      matchname: \"\",\n      matchcategory: \"\",\n      type: \"\",\n      matchnamesum: \"\",\n      statusname: 0,\n      statuscat: 0,\n      statusfda: 0,\n      colorname: \"background-color:#f9bdbb\",\n      colorfda: \"background-color:#f9bdbb\",\n      colorcat: \"background-color:#f9bdbb\",\n      id: \"\",\n      keyword: [],\n      colorkey: \"background-color:#f9bdbb\",\n      desc: \"\",\n      arrList: [],\n      alldata: 0,\n      back: 0,\n      next: 0,\n      data: {},\n      product_token: 0,\n      title: \"เพิ่ม keyword\",\n      key: {},\n      fda: \"\",\n      product: [],\n      procheck: [],\n      answer:'',\n      typeId:0,\n      prochecktext:'',\n      producttypes:[],\n      rulebasetypes:[]\n    };\n  },\n  computed: {\n    currentUser() {\n      return this.$store.state.auth.user;\n    },\n  },\n  methods: {\n    getproducttype(){\n      ProductTypesService.gettypes_product().then((res)=>{\n        // console.log(res.data);\nthis.producttypes = res.data\n      })\n    },\n    getrulebasedtype(){\n      RulebasedTypesService.gettypes_rulebased().then((res)=>{\n        // console.log(res.data);\nthis.rulebasetypes = res.data\n      })\n    },\n    getsentent(data){\n      data = JSON.parse(data)\n      // var text = ''\n      var arr =[]\n      for (let d = 0; d < data.length; d++) {\n        // text += data[d]\n        arr.push(data[d])\n      }\n      // console.log(arr);\n      var arrtxt = String(arr)\n      // console.log(arrtxt);\n      arrtxt = arrtxt.replaceAll(\",\",\"<span style='color:red;'> | </span>\")\n      // console.log(arrtxt);\nreturn arrtxt\n    },\n    getstatuscheck(t,f){\n      // console.log(t,f);\n      var text = ''\nif (t == f) {\n  text = 'เกินจริง'\n}else if (t > f) {\n  text = 'เกินจริง'\n}else if (f > t) {\n  text = 'ไม่เกินจริง'\n}\nreturn text\n    },\n    clear() {\n      \n      this.data = [];\n      this.product = [];\n      this.procheck = [];\n      this.loading = false;\n      this.status = false\n      this.product = [];\n      this.procheck = [];\n      this.statusprocheck = false\n      this.statusproduct = false\n      this.statuslist = false\n      this.product_token = 0;\n    },\n    cut(data) {\n      // console.log(data);\n      var mapname = ''\n      if (data != '-' && data != '') {\n        data = data.filter((letter) => letter !== \" \");\n      mapname = data.toString();\n\n      mapname = mapname.replaceAll(\",\", \" | \");\n      }else{\n        mapname = data\n      }\n      \n      return mapname;\n    },\n    save() {\n      //console.log(this.key);\n      if (this.key.name == null || this.key.name == \"\") {\n        alert(\"กรุณากรอกข้อความ\");\n      } else {\n        var prodata = {\n          name: this.key.name,\n          status: 1,\n        };\n        //console.log(prodata);\n        KeywordService.createkeyword(prodata).then((res) => {\n          //console.log(res.data);\n          if (res.data.err == 1062) {\n            alert(\"มีคำนี้ในระบบแล้ว\");\n          } else {\n            DictService.createdict(prodata).then(() => {\n              //console.log(res.data );\n              // RuleBasedService.createdcolumnrule_based(res.data.id).then(() => {\n\n              document.getElementById(\"closedcategory\").click();\n              alert(\"บันทึกสำเร็จ\");\n              // })\n            });\n          }\n        });\n      }\n    },\n    getpercentage(data) {\n      // var dict = JSON.parse(data.dict_id)\n      // var rule_based_id = JSON.parse(data.rule_based_id)\n      // var re = (100 * data.count_rulebased)/ (rule_based_id.length)\n      return data.count_rulebased;\n    },\n    savetorule(sen, answer) {\n      // console.log(answer);\n      var iddata = [];\n\n      for (let d = 0; d < sen.length; d++) {\n        // console.log(datasplit[d]);\n        DictService.getdicts(\"\", sen[d]).then(async (res) => {\n          if (res.data.length > 0) {\n            // console.log(res.data[0].id);\n            iddata.push(res.data[0].id);\n          }\n          // console.log(d+1 , sen.length);\n          // console.log(iddata);\n          if (d + 1 == sen.length) {\n            var sql = `SELECT r.* FROM map_rule_based m join rule_based r on m.rule_based_id = r.id WHERE m.status = 1 and dict_id = '[${iddata}]'`;\n            // console.log(sql);\n\n            await RuleBasedService.getbydict(sql).then((res) => {\n              if (res.data.length == 0) {\n                let text = \"\";\n                text += \"{\";\n                for (let i = 0; i < iddata.length; i++) {\n                  // console.log(iddata[i]);\n                  text += '\"dict' + iddata[i] + '\"' + \":\" + 1 + \",\";\n                }\n                text += '\"answer' + '\"' + \":\" + answer + \",\";\n                text = text.slice(0, -1);\n                text += \"}\";\n                // console.log(text);\n                let jsonData = JSON.parse(text);\n                // console.log(jsonData);\n                RuleBasedService.createrule_based(jsonData).then((res) => {\n                  var maprule = {\n                    rule_based_id: res.data.id,\n                    dict_id: iddata,\n                    status: 1,\n                  };\n                  MapRuleBasedService.createmap_rule_based(maprule).then(() => {\n                    // console.log(res.data);\n                    // var pro = {\n                    //   map_rule_based:res.data.id\n                    // }\n                    // ProductsService.map_rule_based(id,pro).then(() => {\n                    alert(\"บันทึกสำเร็จ\");\n\n                    this.getdata();\n                    //               setTimeout(function () {\n                    //   location.reload();\n                    // }, 500);\n                    // });\n                  });\n                });\n              } else {\n                // console.log(res.data);\n                var updatemaprule = {\n                  answer: answer,\n                };\n                RuleBasedService.updaterule_based(\n                  res.data[0].id,\n                  updatemaprule\n                ).then(() => {\n                  alert(\"บันทึกสำเร็จ\");\n\n                  this.getdata();\n                });\n              }\n            });\n          }\n        });\n      }\n    },\n    async savetorule_based(data, answer) {\n      this.answer = answer\n      // console.log(sen.length);\n      // console.log('answer',answer);\n      // console.log(data);\n      var datas = {\n        name :data.rule_based_id,\n        typeId:this.typeId,\n        advertiseId:data.id\n      }\n      \n      // if (!data.mapId) {\n        await MapRuleBasedService.checkintb(data.dict_id).then(async (check) => {\n          // console.log(check.data);\n          var statusfalse = 0\n          var statustrue = 0\n          var weight = 0\n          var advertise_id = []\n          if (check.data) {\n            advertise_id = JSON.parse(check.data.map_advertise)\n          statusfalse = check.data.statusfalse\n          statustrue = check.data.statustrue\n          datas.rulebasedId = check.data.id\n          }\n          if (answer == 1) {\n            statustrue = statustrue+ parseInt(1)\n          }\n          if (answer == 9) {\n            statusfalse = statusfalse + parseInt(1)\n          }\n          // console.log(advertise_id);\n          advertise_id.push(data.id)\n          // console.log(advertise_id);\n          weight = statusfalse+statustrue\n          var maprule = {\n        keyword_id: 1,\n        advertise_id: data.id,\n        status: 9,\n        answer: answer,\n        user: this.currentUser.id,\n        map_dict: JSON.parse(data.dict_id),\n        statusfalse:statusfalse,\n        statustrue:statustrue,\n        weight:weight,\n        map_advertise: advertise_id,\n      };\n          if (check.data) {\n            await MapRuleBasedService.updateanswer(check.data.id, maprule).then(\n          async () => {\n            // console.log(res.data);\n           \n     await KeywordService.updateweight(1,datas).then(async ()=>{\n            // console.log(res);\n            await this.getdetail();\n            alert(\"บันทึกสำเร็จ\");\n          })\n          }\n        );\n          } else {\n            MapRuleBasedService.createmap_rule_based(maprule).then(\n              async (res) => {\n                // console.log(res.data);\n                var map_id = res.data.id;\n                datas.rulebasedId = map_id\n                var sendata = JSON.parse(data.dict_id);\n                // console.log(sendata);\n                // console.log(dict_name);\n                for (let d = 0; d < sendata.length; d++) {\n                  // console.log(sendata[d]);\n                  if (sendata[d]) {\n                    await DictService.getdict(sendata[d]).then(async (sen) => {\n                    // console.log(sen.data);\n                    var rule = {\n                      map_rule_based_id: map_id,\n                      dict_id: sendata[d],\n                      dict_name: sen.data.name,\n                      no: d + 1,\n                    };\n                    // console.log(rule);\n                    await RuleBasedService.createrule_based(rule).then(async () => {\n                      if (d + 1 == sendata.length) {\n                        await KeywordService.updateweight(1,datas).then(async (res)=>{\n            console.log(res);\n            await this.getdetail();\n            alert(\"บันทึกสำเร็จ\");\n          })\n                      }\n                    });\n                  });\n                  }\n                }\n              }\n            );\n          }\n          \n          \n        });\n     \n        // } else {\n      //   MapRuleBasedService.deletemap_rule_based(data.mapId, maprule).then(\n      //     async () => {\n      //       // console.log(res.data);\n      //       this.getdetail();\n      //       alert(\"บันทึกสำเร็จ\");\n      //     }\n      //   );\n      // }\n    },\n    checkkeyword(name) {\n      // console.log(name);\n      //   axios.get('http://localhost:8081/api/keyword_dicts?name=1').then((res) => {\n      //     console.log(res.data);\n      // for (let r = 0; r < res.data.length; r++) {\n      // name = name.replaceAll(/([\\uE000-\\uF8FF]|\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDDFF])/g, '')\n      //       name = name.replaceAll(/(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|\\ud83c[\\ude32-\\ude3a]|\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])/g, '');\n      //       name = name.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"\");\n      //       name = name.replaceAll(\"_\", \"\");\n      //       name = name.replaceAll(\"!\", \"\");\n      //       name = name.replaceAll(\"*\", \"\");\n      // name = name.replaceAll(`_/l\\_`, \"\");// eslint-disable-line\n      // console.log('http://127.0.0.1:5000/checkkeyword?text=' + name);\n      var desc = this.finddescription(name);\n      // console.log('http://127.0.0.1:5000/worktokendesc?text='+desc);\n      axios\n        .get(LinkService.getpythonlink() + \"/worktokendesc?text=\" + desc)\n        .then((res) => {\n          // console.log(res.data);\n          this.desc = res.data;\n        });\n      // name = 'ข้อมูลจำเพาะของสินค้า หมวดหมู่ Shopee กลุ่มผลิตภัณฑ์เพื่อสุขภาพ อาหารเสริมเพื่อความงาม ผิว ยี่ห้อ Bluebird(บลูเบิร์ด) Storage Condition Normal ประเภทสารอาหาร สารต้านอนุมูลอิสระ, วิตามินซี ประเทศต้นกำเนิดสินค้า ไทย หน้าที่ของอาหารเสริมสำหรับความงาม ดูแลสิว, ป้องกันริ้วรอย ประเภทการห่อ ห่อรวมกัน เพศ ทั้งสองเพศ อายุการเก็บรักษา 12 เดือน ประเภทของผลิตภัณฑ์ยา แคปซูล หมายเลขใบอนุญาต/อย. 30-1-26764-5-0051 จำนวนสินค้า 17901 ส่งจาก จังหวัดนครราชสีมา รายละเอียดสินค้า วิตามินซี พลัส ตรา บลูเบิร์ด ตรา บลูเบิร์ด ขนาด 1000 มิลลิกรัม 60 แคปซูล เรทขายส่ง ช่วงราคาที่ 1 สั่งซื้อตั้งแต่ 5 กระปุกขึ้นไป ถึง 20 กระปุก ราคากระปุกละ 93 บาท ช่วงราคาที่ 2 สั่งซื้อตั้งแต่ 21 กระปุกขึ้นไป ถึง 50 กระปุก ราคากระปุกละ 90 บาท ช่วงราคาที่ 3 สั่งซื้อตั้งแต่ 51 กระปุกขึ้นไป ถึง 100 กระปุก ราคากระปุกละ 87 บาท ช่วงราคาที่ 4 สั่งซื้อตั้งแต่ 100 กระปุกขึ้นไป ..................... ราคากระปุกละ 85 บาท Vitamin C Plus Dietary Supplement Product Bluebird Brand ผลิตภัณฑ์เสริมอาหารวิตามินซี พลัส ตรา บลูเบิร์ด ส่วนประกอบทั้งหมดใน 1 แคปซูล ส่วนประกอบที่สำคัญ (Active Ingredient) VITAMIN C (100%) - 60 มิลลิกรัม CITRUS BIOFLAVONOID POWDER - 630 มิลลิกรัม BARBADOSCHERRY POWDER/ACEROLA CHERRY POWDER (ผงบาร์เบโดสเชอร์รี/ผงอะเซโรลาเชอร์รี) (MALPIGHIA GLABRA L.) ผล - 60 มิลลิกรัม ROSEHIP POWDER (ผงโรสฮิปส์) (ROSA CANINA L.) ผล - 60 มิลลิกรัม Rutin - 30 มิลลิกรัม INDIAN GOOSEBERRY POWDER (ผงมะขามป้อม) (PHYLLANTHUS EMBLICA L. ) ผล - 60 มิลลิกรัม ส่วนประกอบที่ไม่สำคัญ (Inactive Ingredient) EDIBLE GELATIN 428 - 98.5 มิลลิกรัม TITANIUM DIOXIDE 171 -1.95 มิลลิกรัม วิธีรับประทาน ครั้งละ 1-2 แคปซูล หลังอาหารเช้า เลขที่ อ.ย. 30-1-26764-5-0051 คำเตือน ควรเก็บให้พ้นแสงแดงและความชื้น เด็ก สตรีมีครรภ์ และสตรีให้นมบุตรไม่ควรรับประทาน ควรกินอาหารหลากหลายให้ครบ 5 หมู่ ในสัดส่วนที่เหมาะสมเป็นประจำ ไม่มีผลในการป้องกันหรือรักษาโรค สรรพคุณ ประโยชน์ของการกินวิตามินซี ️ทำให้หน้าไม่โทรม หน้าตาสดใส ️ช่วยฟื้นฟูผิวหน้า สิว ฝ้า กระ ริ้วรอย ดูจางลง ️ผิวพรรณนุ่มเรียบเนียบ ชุ่มชื่น ️หน้าตาดูเด็กและเด้งขึ้น ️ผิวหน้าขาวอมชมพู สินค้าตัดรอบทุกวันเวลา ตัดรอบเวลา 12.00 น ของทุกวัน แจ้งโอนเกินเวลา ส่งรอบวันถัดไปนะจ๊ะ ส่งพัสดุทุกวัน เว้นวันอาทิตย์ และวันหยุดนักขัตฤกษ์ ขอบพระคุณลูกค้าทุกท่าน ที่ไว้วางใจผลิตภัณฑ์ของเราเสมอมา_/l\\_'\n      // console.log('http://127.0.0.1:5000/checkkeyword?text=' + desc);\n      var con = {\n        content: desc,\n      };\n      axios\n        .post(LinkService.getpythonlink() + \"/checkkeyword?text=\", con)\n        .then((res) => {\n          // console.log(res.data);\n          if (res.data.length > 0) {\n            // this.keyword.push(res.data)\n            this.keyword = res.data;\n          }\n        });\n      //     }\n\n      // });\n      //       var listkeywords = []\n      //       var namesplit = name.split(\" \")\n      //       // console.log(namesplit);\n      //       axios.get('http://localhost:8081/api/keyword_dicts?name=1').then((res) => {\n      //         console.log(res.data);\n      //         var keylist = []\n      //         for (let r = 0; r < res.data.length; r++) {\n      //           res.data[r].name = res.data[r].name.replaceAll(\".\",\"\")\n      //           var kk = res.data[r].name.split(\" \")\n      //           for (let k = 0; k < kk.length; k++) {\n      //             keylist.push(kk[k])\n      //           }\n      //         }\n      //         for (let key = 0; key < keylist.length; key++) {\n      //           for (let n = 0; n < namesplit.length; n++) {\n      //             if (namesplit[n] == keylist[key] && keylist[key] != '' && isNaN(keylist[key])) {\n      //               listkeywords.push(keylist[key])\n      //             }\n\n      //           }\n      //         }\n      //         // console.log(keylist);\n      //         // console.log(listkeywords);\n\n      //       console.log(listkeywords.length);\n      //         if (listkeywords.length == 0) {\n\n      //           this.colorkey = \"background-color:#a3e9a4\"\n      //         }\n      //         var result = [];\n      //         listkeywords.forEach(function(item) {\n      //      if(result.indexOf(item) < 0) {\n      //          result.push(item);\n      //      }\n      // });\n      // console.log(result);\n      // listkeywords = result\n      //         for (let l = 0; l < listkeywords.length; l++) {\n      //           // console.log('http://127.0.0.1:5000/checkkeyword?name=' + name+'&&name_real=');\n      //           axios.get('http://127.0.0.1:5000/checkkeyword?name=' + name+'&&name_real=' + listkeywords[l]).then((res) => {\n      //             // console.log(res.data);\n      //         this.keyword.push(res.data)\n      //       });\n\n      //         }\n      //       });\n    },\n    find(){\nvar type = this.findtypeproduct(this.data.content)\nconsole.log(type);\nvar split = type.split(\"\\n\")\nconsole.log(split[3]);\n      var content = \"\";\n        content = this.data.content.replaceAll(\n          /([\\uE000-\\uF8FF]|\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDDFF])/g,\n          \"\"\n        );\n        content = content.replaceAll(\n          /(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|\\ud83c[\\ude32-\\ude3a]|\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])/g,\n          \" \"\n        );\n\n        content = content.replaceAll(/\\ud83d[\\ude00-\\ude4f]/g, \" \");\n        content = content.replaceAll(/(\\r\\n|\\n|\\r)/gm, \" \");\n        content = content.replaceAll(\"_\", \"\");\n        content = content.replaceAll(\"!\", \"\");\n        content = content.replaceAll(\"*\", \"\");\n        content = content.replaceAll(\"&\", \"\");\n        content = content.replaceAll(\"#\", \"\");\n        content = content.replaceAll(\"•\", \"\");\n        content = content.replaceAll(\"+\", \"\");\n        content = content.replaceAll(`_/l\\_`, \"\"); // eslint-disable-line\n        content = content.replaceAll(\n          /([\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF])/g,\n          \" \"\n        );\nconsole.log(this.finddescription(content));\n    },\n    async checkkey(){\n      await this.loaddict();\n      var content = \"\";\n        content = this.data.content.replaceAll(\n          /([\\uE000-\\uF8FF]|\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDDFF])/g,\n          \"\"\n        );\n        content = content.replaceAll(\n          /(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|\\ud83c[\\ude32-\\ude3a]|\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])/g,\n          \" \"\n        );\n\n        content = content.replaceAll(/\\ud83d[\\ude00-\\ude4f]/g, \" \");\n        content = content.replaceAll(/(\\r\\n|\\n|\\r)/gm, \" \");\n        content = content.replaceAll(\"_\", \"\");\n        content = content.replaceAll(\"!\", \"\");\n        content = content.replaceAll(\"*\", \"\");\n        content = content.replaceAll(\"&\", \"\");\n        content = content.replaceAll(\"#\", \"\");\n        content = content.replaceAll(\"•\", \"\");\n        content = content.replaceAll(\"+\", \"\");\n        content = content.replaceAll(`_/l\\_`, \"\"); // eslint-disable-line\n        content = content.replaceAll(\n          /([\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF])/g,\n          \" \"\n        );\n        var desc = this.finddescription(content)\nconsole.log(desc);\nvar con = {\n                      content: desc,\n                    };\n       axios\n                      .post(LinkService.getpythonlink() + \"/checkkeyword\", con)\n                      .then(async (res) => {\n                        console.log(res.data);\n                      });\n    },\n    findtypeproduct(data) {\n      console.log(data);\n      var text = [\"หมวดหมู่\"];\n      var findfda = data;\n      for (let t = 0; t < text.length; t++) {\n        if (findfda.indexOf(text[t]) != -1) {\n          findfda = findfda.substring(findfda.indexOf(text[t]));\n        }\n      }\n      // if (findfda == 'อาหาร') {\n      //   findfda = findfda+ findfda+'เสริม'\n      // }\n      console.log(findfda);\n      return findfda;\n    },\n    finddescription(data) {\n      // console.log(data);\n      var text = [\"รายละเอียดสินค้า\"];\n      var findfda = data;\n      for (let t = 0; t < text.length; t++) {\n        if (findfda.indexOf(text[t]) != -1) {\n          findfda = findfda.substring(findfda.indexOf(text[t]));\n        }\n      }\n      // if (findfda == 'อาหาร') {\n      //   findfda = findfda+ findfda+'เสริม'\n      // }\n      // console.log(findfda);\n      return findfda;\n    },\n    loaddict() {\n      axios.get(LinkService.getpythonlink() + \"/loaddict\").then(async () => {});\n    },\n    getdetail() {\n      // var url = this.data.url.split(\"-i.\");\n      // var url = this.data.url.split(\"-i.\");\n      // this.data.url = url[0];\n      // console.log(this.product_token);\n      var selectpro = {\n        // url: this.data.url,\n        id: this.product_token,\n      };\n      MapRuleBasedService.getproduct_token(selectpro).then(async (res) => {\n        // console.log(res.data);\n        // var best = this.getMax(res.data.keyword,'count_rulebased')\n        //console.log(best);\n        this.list = res.data;\n        this.statuslist = true\n        this.status = true;\n        this.loading = false\n        alert(\"บันทึกสำเร็จ\");\n        // var data = {\n        //   advertise_id: res.data.keyword[0].product_token_id,\n        // };\n        // MapRuleBasedService.updateweight(\n        //   res.data.keyword[0].map_rule_based_id,\n        //   data\n        // ).then(() => {});\n        // this.list.keyword = [best]\n        // this.status = true\n      });\n    },\n    \n    async edit() {\n      // var url = this.data.url.replaceAll(\".\",'');\n      // url = url.split(\"-i\");\n      // this.data.url = url[0];\n      // console.log(this.data.url);\n      this.product = [];\n      this.procheck = [];\n      this.loading = false;\n      this.status = false\n      this.statusprocheck = false\n      this.statusproduct = false\n      this.statuslist = false\n      var con = {};\n      await this.loaddict();\n      // if (this.data.url == null || this.data.url == \"\") {\n      //   alert(\"กรุณากรอก URL\");\n      // } else \n      if (this.data.content == null || this.data.content == \"\") {\n        alert(\"กรุณากรอกข้อความโฆษณา\");\n      }else if (this.data.url == null || this.data.url == \"\") {\n        alert(\"กรุณากรอกลำดับของเว็บไซต์\");\n      }else if (this.data.type_productId == null || this.data.type_productId == \"\") {\n        alert(\"กรุณาเลือกประเภทผลิตภัณฑ์\");\n      }else if (this.data.type_rulebasedId == null || this.data.type_rulebasedId == \"\") {\n        alert(\"กรุณาเลือกกฎของสินค้า\");\n      } else {\n         \n        this.loading = true\n// console.log(type);\nconsole.log(this.data.content);\nvar findtype = this.findtypeproduct(this.data.content)\nvar split = findtype.split(\"\\n\")\nvar type = split[3]\n// console.log(type);\nawait FDATypesService.getfdatypes(type).then(async (res)=>{\n  // console.log(res.data);\n  if (res.data.length > 0) {\n    this.typeId = res.data[0].id\n  }else{\n    var name = {\n      name : type\n    }\n    await FDATypesService.createfdatype(name).then((res)=>{\n      this.typeId = res.data.id\n    });\n  }\n})\n// console.log(this.typeId);\n        var content = \"\";\n        var contentfull = this.data.content\n        content = this.data.content.replaceAll(\n          /([\\uE000-\\uF8FF]|\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDDFF])/g,\n          \"\"\n        );\n        content = content.replaceAll(\n          /(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|\\ud83c[\\ude32-\\ude3a]|\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])/g,\n          \" \"\n        );\n\n        content = content.replaceAll(/\\ud83d[\\ude00-\\ude4f]/g, \" \");\n        content = content.replaceAll(/(\\r\\n|\\n|\\r)/gm, \" \");\n        content = content.replaceAll(\"_\", \"\");\n        content = content.replaceAll(\"!\", \"\");\n        content = content.replaceAll(\"*\", \"\");\n        content = content.replaceAll(\"&\", \"\");\n        content = content.replaceAll(\"#\", \"\");\n        content = content.replaceAll(\"•\", \"\");\n        content = content.replaceAll(\"+\", \"\");\n        content = content.replaceAll(`_/l\\_`, \"\"); // eslint-disable-line\n        content = content.replaceAll(\n          /([\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF])/g,\n          \" \"\n        );\n\n        // this.fda = await this.findfda(content);\n\nvar desc = this.finddescription(content)\n        this.fda = await this.getfda(content)[0]\n        console.log(this.fda);\n          con = {\n            content: desc,\n          };\n          await axios\n            .post(LinkService.getpythonlink() + \"/wordtokendesc\", con)\n            .then(async (res) => {\n              // console.log(res.data);\n              // var sentence = res.data.sentent.replaceAll(\"<spanstyle\", \"<span style\");\n              var des = {\n                url: this.data.url,\n                sentence: desc,\n                sentence_keyword: res.data.sentent,\n                keyword_id: res.data.keywordId,\n                status: 2,\n                sentencefull:contentfull,\n                type_rulebasedId:this.data.type_rulebasedId,\n                type_productId:this.data.type_productId\n              };\n              // console.log(des);\n              if (this.product_token == 0) {\n                await MapRuleBasedService.createproduct_token(des).then(\n                  async (producttoken) => {\n                    // console.log(producttoken);\n                    this.product_token = producttoken.data.id;\n                    this.checkfda(content, this.product_token);\n                    // console.log(producttoken);\n                    this.product_token = producttoken.data.id;\n                    con = {\n                      content: desc,\n                    };\n                    //console.log(con);\n                    await axios\n                      .post(LinkService.getpythonlink() + \"/checkkeyword\", con)\n                      .then(async (res) => {\n                        // console.log(res.data);\n                        if (res.data.length > 0) {\n                          for (let r = 0; r < res.data.length; r++) {\n                            var sentencetoken = res.data[r].sentent.replaceAll(\n                              '\"',\n                              \"\"\n                            ); // eslint-disable-line\n                            sentencetoken = sentencetoken.replaceAll(\n                              \"<spanstyle\",\n                              \"<span style\"\n                            );\n\n                            // sentencetoken = sentencetoken.replaceAll('\"color:red\\\"','\"color:red\"')\n                            var advertise = {\n                              product_token_id: this.product_token,\n                              keyword_dict_id: res.data[r].keyword_dict_id,\n                              dict_id: res.data[r].dict_id,\n                              dict_name: res.data[r].dict_name,\n                              sentent: sentencetoken,\n                              sen: res.data[r].sen,\n                            };\n                            // console.log(this.product_token);\n                            await AdvertiseService.createadvertise(advertise).then(\n                              async () => {\n                                if (r + 1 == res.data.length) {\n                                  var getprotoken = {\n                                    url: this.product_token,\n                                  };\n                                  await MapRuleBasedService.getproductkeyword(\n                                    getprotoken\n                                  ).then(async (pro) => {\n                                    // console.log(pro.data);\n                                   await this.tokendata(pro.data);\n                                  });\n                                }\n                              }\n                            );\n                          }\n                        } else {\n                          await this.getdetail();\n                        }\n                      });\n                  }\n                );\n              } else {\n                \n                await AdvertiseService.deleteadvertise(this.product_token).then(\n                  async () => {\n                    await MapRuleBasedService.updatproduct_token(\n                      this.product_token,\n                      des\n                    ).then(async () => {\n                      // await AdvertiseService.deleteadvertise(this.product_token).then(async ()=>{\n                      // console.log(del);\n                      this.checkfda(content, this.product_token);\n                      con = {\n                        content: desc,\n                      };\n                      //console.log(con);\n                      axios\n                        .post(\n                          LinkService.getpythonlink() + \"/checkkeyword\",\n                          con\n                        )\n                        .then(async (res) => {\n                          //console.log(res.data);\n                          if (res.data.length > 0) {\n                            for (let r = 0; r < res.data.length; r++) {\n                              var sentencetoken = res.data[\n                                r\n                              ].sentent.replaceAll('\"', \"\"); // eslint-disable-line\n                              sentencetoken = sentencetoken.replaceAll(\n                                \"<spanstyle\",\n                                \"<span style\"\n                              );\n\n                              // sentencetoken = sentencetoken.replaceAll('\"color:red\\\"','\"color:red\"')\n                              var advertise = {\n                                product_token_id: this.product_token,\n                                keyword_dict_id: res.data[r].keyword_dict_id,\n                                dict_id: res.data[r].dict_id,\n                                dict_name: res.data[r].dict_name,\n                                sentent: sentencetoken,\n                                sen: res.data[r].sen,\n                                status: 1,\n                              };\n                              // console.log(this.product_token);\n                              AdvertiseService.createadvertise(advertise).then(\n                                () => {\n                                  if (r + 1 == res.data.length) {\n                                    var getprotoken = {\n                                      url: this.product_token,\n                                    };\n                                    MapRuleBasedService.getproductkeyword(\n                                      getprotoken\n                                    ).then((pro) => {\n                                      // console.log(pro.data);\n                                      this.tokendata(pro.data);\n                                    });\n                                  }\n                                }\n                              );\n                            }\n                          }\n                        });\n                    });\n                  }\n                );\n                }\n            });\n        // });\n      }\n    },\n    async search() {\n      // var url = this.data.url.replaceAll(\".\",'');\n      // url = url.split(\"-i\");\n      // this.data.url = url[0];\n      // console.log(this.data.url);\n      this.product = [];\n      this.procheck = [];\n      this.loading = false;\n      this.status = false\n      this.statusprocheck = false\n      this.statusproduct = false\n      this.statuslist = false\n      this.product_token = 0;\n      var con = {};\n      await this.loaddict();\n      // if (this.data.url == null || this.data.url == \"\") {\n      //   alert(\"กรุณากรอก URL\");\n      // } else \n      if (this.data.content == null || this.data.content == \"\") {\n        alert(\"กรุณากรอกข้อความโฆษณา\");\n      }else if (this.data.url == null || this.data.url == \"\") {\n        alert(\"กรุณากรอกลำดับของเว็บไซต์\");\n      }else if (this.data.type_productId == null || this.data.type_productId == \"\") {\n        alert(\"กรุณาเลือกประเภทผลิตภัณฑ์\");\n      }else if (this.data.type_rulebasedId == null || this.data.type_rulebasedId == \"\") {\n        alert(\"กรุณาเลือกกฎของสินค้า\");\n      }  else {\n\n        this.loading = true\n//         var findtype = await this.findtypeproduct(this.data.content)\n// console.log(findtype);\n// var split = findtype.split(\"\\n\")\n// var type = split[3]\n// console.log(type);\n// await FDATypesService.getfdatypes(type).then(async (res)=>{\n//   // console.log(res.data);\n//   if (res.data.length > 0) {\n//     this.typeId = res.data[0].id\n//   }else{\n//     var name = {\n//       name : type\n//     }\n//     await FDATypesService.createfdatype(name).then((res)=>{\n//       this.typeId = res.data.id\n//     });\n//   }\n// })\n// console.log(this.typeId);\n        var content = \"\";\n        var contentfull = this.data.content\n        content = this.data.content.replaceAll(\n          /([\\uE000-\\uF8FF]|\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDDFF])/g,\n          \"\"\n        );\n        content = content.replaceAll(\n          /(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|\\ud83c[\\ude32-\\ude3a]|\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])/g,\n          \" \"\n        );\n\n        content = content.replaceAll(/\\ud83d[\\ude00-\\ude4f]/g, \" \");\n        content = content.replaceAll(/(\\r\\n|\\n|\\r)/gm, \" \");\n        content = content.replaceAll(\"_\", \"\");\n        content = content.replaceAll(\"!\", \"\");\n        content = content.replaceAll(\"*\", \"\");\n        content = content.replaceAll(\"&\", \"\");\n        content = content.replaceAll(\"#\", \"\");\n        content = content.replaceAll(\"•\", \"\");\n        content = content.replaceAll(\"+\", \"\");\n        content = content.replaceAll(`_/l\\_`, \"\"); // eslint-disable-line\n        content = content.replaceAll(\n          /([\\u2700-\\u27BF]|[\\uE000-\\uF8FF]|\\uD83C[\\uDC00-\\uDFFF]|\\uD83D[\\uDC00-\\uDFFF]|[\\u2011-\\u26FF]|\\uD83E[\\uDD10-\\uDDFF])/g,\n          \" \"\n        );\n\n        // this.fda = await this.findfda(content);\n\nvar desc = this.finddescription(content)\n        this.fda = await this.getfda(content)[0]\n        console.log(this.fda);\n          con = {\n            content: desc,\n          };\n          await axios\n            .post(LinkService.getpythonlink() + \"/wordtokendesc\", con)\n            .then(async (res) => {\n              // console.log(res.data);\n              // var sentence = res.data.sentent.replaceAll(\"<spanstyle\", \"<span style\");\n              var des = {\n                url: this.data.url,\n                sentence: desc,\n                sentence_keyword: res.data.sentent,\n                keyword_id: res.data.keywordId,\n                status: 2,\n                sentencefull:contentfull,\n                type_rulebasedId:this.data.type_rulebasedId,\n                type_productId:this.data.type_productId\n              };\n              // console.log(des);\n              if (this.product_token == 0) {\n                await MapRuleBasedService.createproduct_token(des).then(\n                  async (producttoken) => {\n                    // console.log(producttoken);\n                    this.product_token = producttoken.data.id;\n                    this.checkfda(content, this.product_token);\n                    // console.log(producttoken);\n                    this.product_token = producttoken.data.id;\n                    con = {\n                      content: desc,\n                    };\n                    //console.log(con);\n                    await axios\n                      .post(LinkService.getpythonlink() + \"/checkkeyword\", con)\n                      .then(async (res) => {\n                        // console.log(res.data);\n                        if (res.data.length > 0) {\n                          for (let r = 0; r < res.data.length; r++) {\n                            var sentencetoken = res.data[r].sentent.replaceAll(\n                              '\"',\n                              \"\"\n                            ); // eslint-disable-line\n                            sentencetoken = sentencetoken.replaceAll(\n                              \"<spanstyle\",\n                              \"<span style\"\n                            );\n\n                            // sentencetoken = sentencetoken.replaceAll('\"color:red\\\"','\"color:red\"')\n                            var advertise = {\n                              product_token_id: this.product_token,\n                              keyword_dict_id: res.data[r].keyword_dict_id,\n                              dict_id: res.data[r].dict_id,\n                              dict_name: res.data[r].dict_name,\n                              sentent: sentencetoken,\n                              sen: res.data[r].sen,\n                            };\n                            // console.log(this.product_token);\n                            await AdvertiseService.createadvertise(advertise).then(\n                              async () => {\n                                if (r + 1 == res.data.length) {\n                                  var getprotoken = {\n                                    url: this.product_token,\n                                  };\n                                  await MapRuleBasedService.getproductkeyword(\n                                    getprotoken\n                                  ).then(async (pro) => {\n                                    // console.log(pro.data);\n                                   await this.tokendata(pro.data);\n                                  });\n                                }\n                              }\n                            );\n                          }\n                        } else {\n                          await this.getdetail();\n                        }\n                      });\n                  }\n                );\n              } else {\n                await AdvertiseService.deleteadvertise(this.product_token).then(\n                  async () => {\n                    await MapRuleBasedService.updatproduct_token(\n                      this.product_token,\n                      des\n                    ).then(async () => {\n                      // await AdvertiseService.deleteadvertise(this.product_token).then(async ()=>{\n                      // console.log(del);\n                      this.checkfda(content, this.product_token);\n                      con = {\n                        content: desc,\n                      };\n                      //console.log(con);\n                      axios\n                        .post(\n                          LinkService.getpythonlink() + \"/checkkeyword\",\n                          con\n                        )\n                        .then(async (res) => {\n                          //console.log(res.data);\n                          if (res.data.length > 0) {\n                            for (let r = 0; r < res.data.length; r++) {\n                              var sentencetoken = res.data[\n                                r\n                              ].sentent.replaceAll('\"', \"\"); // eslint-disable-line\n                              sentencetoken = sentencetoken.replaceAll(\n                                \"<spanstyle\",\n                                \"<span style\"\n                              );\n\n                              // sentencetoken = sentencetoken.replaceAll('\"color:red\\\"','\"color:red\"')\n                              var advertise = {\n                                product_token_id: this.product_token,\n                                keyword_dict_id: res.data[r].keyword_dict_id,\n                                dict_id: res.data[r].dict_id,\n                                dict_name: res.data[r].dict_name,\n                                sentent: sentencetoken,\n                                sen: res.data[r].sen,\n                                status: 1,\n                              };\n                              // console.log(this.product_token);\n                              AdvertiseService.createadvertise(advertise).then(\n                                () => {\n                                  if (r + 1 == res.data.length) {\n                                    var getprotoken = {\n                                      url: this.product_token,\n                                    };\n                                    MapRuleBasedService.getproductkeyword(\n                                      getprotoken\n                                    ).then((pro) => {\n                                      // console.log(pro.data);\n                                      this.tokendata(pro.data);\n                                    });\n                                  }\n                                }\n                              );\n                            }\n                          }\n                        });\n                    });\n                  }\n                );\n              }\n            });\n        // });\n      }\n    },\n    getMax(arr, prop) {\n      var max;\n      for (var i = 0; i < arr.length; i++) {\n        if (max == null || parseInt(arr[i][prop]) > parseInt(max[prop]))\n          max = arr[i];\n      }\n      return max;\n    },\n    getMaxlength(arr, prop) {\n      var max;\n      for (var i = 0; i < arr.length; i++) {\n        if (max == null || parseInt(arr[i][prop]) > parseInt(max[prop]))\n          max = arr[i];\n      }\n      return max;\n    },\n    getAllMaxArray(arr, value) {\n      var array = [];\n      arr.map(function (num, idx) {\n        if (num.allcount == value) {\n          array.push(arr[idx]);\n        }\n      });\n      return array;\n    },\n    async tokendata(list) {\n      //console.log(list);\n      if (list.keyword.length > 0) {\n        for (let l = 0; l < list.keyword.length; l++) {\n          //console.log(list.keyword[l].keyword_dict_id);\n          if (list.keyword[l].keyword_dict_id) {\n            var map = {\n              id: list.keyword[l].id,\n              url: list.keyword[l].keyword_dict_id,\n              keyword_id: list.keyword[l].dict_id,\n            };\n            // console.log(map);\n            await MapRuleBasedService.getmapproduct(map).then(async (res) => {\n              // console.log(res.data);\n              var maxvalue = this.getMax(res.data, \"allcount\");\n              // console.log(maxvalue.allcount);\n              var i = this.getAllMaxArray(res.data, maxvalue.allcount);\n              // console.log(i);\n              var bestdata = this.getMax(i, \"length\");\n              // console.log(bestdata);\n              // getAllIndexes\n              // console.log(bestdata);\n              var best = {\n                id: list.keyword[l].id,\n                sentence: bestdata,\n              };\n              // console.log(best);\n              var rule_based_name = bestdata.name.toString();\n              rule_based_name = rule_based_name.replaceAll(\",\", \"\");\n              // console.log(rule_based_name);\n              await axios\n                .get(\n                  LinkService.getpythonlink() +\n                    \"/loaddict?word=\" +\n                    rule_based_name\n                )\n                .then(async () => {\n                  await MapRuleBasedService.getbestrulebased(best).then(\n                    async (res) => {\n                      // console.log(res.data);\n\n                      var rulebased = {\n                        count_rulebased: res.data.count,\n                        sentence_rulebase: res.data.sentence,\n                        rule_based_id: res.data.rule_based_id,\n                        rule_based_name: res.data.rule_based_name,\n                        map_rule_based_id: res.data.map_id,\n                      };\n                      // console.log(rulebased);\n                      // console.log(list.keyword[l].id);\n                      await MapRuleBasedService.updaterulebased(\n                        list.keyword[l].id,\n                        rulebased\n                      ).then(async () => {\n                        if (l + 1 == list.keyword.length) {\n                          await this.getdetail();\n                        }\n                      });\n                    }\n                  );\n                });\n              // list.keyword[l].rulebase = res.data;\n              // if (l + 1 == list.keyword.length) {\n              //   this.compare(list);\n              // }\n            });\n          }\n\n          // }\n        }\n      } else {\n        await this.getdetail();\n      }\n    },\n    compare(list) {\n      for (let k = 0; k < list.keyword.length; k++) {\n        // console.log(list.keyword[k]);\n        var dict_id = JSON.parse(list.keyword[k].dict_id);\n        // var rulebased = JSON.parse(list.keyword[k].rulebase)\n        // console.log(list.keyword[k].rulebased);\n        if (list.keyword[k].rulebase) {\n          let uniqueCharsrule = list.keyword[k].rulebase.filter((c, index) => {\n            return list.keyword[k].rulebase.indexOf(c) === index;\n          });\n          var filteredArray = dict_id.filter(function (n) {\n            return uniqueCharsrule.indexOf(n) !== -1;\n          });\n          // console.log(filteredArray);\n          // console.log('filteredArray',filteredArray);\n          // console.log('dict_id',dict_id.length);\n          // console.log(sumdictId.length);\n          var percentage =\n            (100 * parseInt(filteredArray.length)) / parseInt(dict_id.length);\n          // console.log(percentage);\n          list.keyword[k].percentage = percentage;\n        } else {\n          list.keyword[k].percentage = 0;\n        }\n        if (k + 1 == list.keyword.length) {\n          this.list = list;\n          // this.status = true;\n        }\n      }\n    },\n    getAllIndexes(arr, val) {\n      var indexes = [],\n        i = -1;\n      while ((i = arr.indexOf(val, i + 1)) != -1) {\n        indexes.push(i);\n      }\n      return indexes;\n    },\n    findfda(data) {\n      var text = [\"หมายเลขใบอนุญาต/อย.\",\"อย.\"];\n      // var end = ['']\n      var findfda = data;\n      for (let t = 0; t < text.length; t++) {\n        findfda = findfda.substring(findfda.indexOf(text[t]), data.length);\n        var endindex = this.getAllIndexes(findfda, \" \");\n        findfda = findfda.substring(findfda.indexOf(text[t]), endindex[1]);\n      }\n      // console.log(findfda);\n\n      for (let v = 0; v < text.length; v++) {\n      findfda = findfda.replaceAll(text[v], \"\");\n      }\n      findfda = findfda.replaceAll(/[^\\d.-]/g, '');\n      findfda = findfda.replaceAll(\"-\", \"\");\n      findfda = findfda.replaceAll(\"–\", \"\");\n      findfda = findfda.replaceAll(\" \", \"\");\n      // console.log(findfda);\n      // var regex = /\\d+/g;\n      // var matches = findfda.match(regex);  // creates array from matches\n      // console.log(matches[0]);\n      return findfda;\n    },\n    async checkfda(content, id) {\n      // console.log(this.fda);\n      if (this.fda) {\n        var fda = this.fda;\n        var product_status = 0;\n        const url = \"https://tawaiforhealth.org/api/oryor/check-product\";\n        const data = { number_src: fda };\n        // console.log(data);\n        const options = {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json;charset=UTF-8\",\n          },\n          body: JSON.stringify(data),\n        };\n\n        await fetch(url, options)\n          .then((response) => response.json())\n          .then(async (data) => {\n            // console.log(data);\n            if (data.message || data.length > 1) {\n              this.product.push({\n                name: \"-\",\n                detail: content,\n                fda: this.fda,\n                cncnm: \"-\",\n                typepro: \"-\",\n                lcnno: \"-\",\n                productha: \"-\",\n                produceng: \"-\",\n                licen: \"-\",\n                Addr: \"-\",\n                Newcode: \"-\",\n                status: \"-\",\n                token: \"-\",\n              });\n              this.procheck.push({\n                fda: this.fda,\n                mapfda: \"-\",\n                cncnm: \"-\",\n                productha: \"-\",\n                produceng: \"-\",\n                name: \"-\",\n                product_status: 0,\n                cat_status: 0,\n                fda_status: 0,\n                name_status: 0,\n                typepro: \"-\",\n                type: \"-\",\n              });\n              this.statusprocheck = true\n              // this.status = true\n            } else {\n              // console.log(data);\n              // console.log(data.cncnm.includes(\"คงอยู่\"))\n              if (data.cncnm.includes(\"ยกเลิก\") || data.cncnm.includes(\"เพิกถอน\")) {\n                product_status = 3;\n              } else {\n                product_status = 1;\n                this.colorfda = \"background-color:#a3e9a4\";\n              }\n              // console.log(this.colorfda);\n              var con = {\n                fda: fda,\n                productha: data.productha,\n                produceng: data.produceng,\n                typepro: data.typepro,\n                content: content,\n              };\n              await axios\n                .post(LinkService.getpythonlink() + \"/checkfda\", con)\n                .then(async (res) => {\n                  // console.log(res.data);\n                  var pro = {\n                    name: res.data.name,\n                    fda: fda,\n                    product_status: product_status,\n                    cat_status: res.data.mapcatstatus,\n                    fda_status: product_status,\n                    name_status: res.data.mapnamestatus,\n                  };\n                  // console.log(pro);\n                  await MapRuleBasedService.updatemap(id, pro).then(() => {\n                    // console.log(res.data);\n                    this.product.push({\n                      name: data.productha + \" \" + data.produceng,\n                      detail: content,\n                      fda: fda,\n                      cncnm: data.cncnm,\n                      typepro: data.typepro,\n                      lcnno: data.lcnno,\n                      productha: data.productha,\n                      produceng: data.produceng,\n                      licen: data.licen,\n                      Addr: data.Addr,\n                      Newcode: data.Newcode,\n                      status: product_status,\n                      token: res.data.token,\n                    });\n                    this.procheck.push({\n                      fda: fda,\n                      mapfda: data.lcnno,\n                      cncnm: data.cncnm,\n                      productha: data.productha,\n                      produceng: data.produceng,\n                      name: res.data.name,\n                      product_status: product_status,\n                      cat_status: res.data.mapcatstatus,\n                      fda_status: product_status,\n                      name_status: res.data.mapnamestatus,\n                      typepro: data.typepro,\n                      type: res.data.category,\n                    });\n                    this.statusprocheck = true\n                    this.colorcat = res.data.colorcat;\n                    this.colorname = res.data.colorname;\n                    // console.log(this.product);\n                    // console.log(this.procheck);\n                    // console.log(this.fda);\n                  });\n                });\n\n              // this.status = true\n            }\n          }).catch(err=>{\n            console.log(err);\n            this.statusprocheckone = true\n            this.prochecktext = 'Api tawaiforhealth ไม่สามารถทำงานได้'\n          });\n      } else {\n        this.product.push({\n          name: \"-\",\n          detail: content,\n          fda: this.fda,\n          cncnm: \"-\",\n          typepro: \"-\",\n          lcnno: \"-\",\n          productha: \"-\",\n          produceng: \"-\",\n          licen: \"-\",\n          Addr: \"-\",\n          Newcode: \"-\",\n          status: \"-\",\n          token: \"\",\n        });\n        this.statusproduct = true\n        this.procheck.push({\n          fda: this.fda,\n          mapfda: \"-\",\n          cncnm: \"-\",\n          productha: \"-\",\n          produceng: \"-\",\n          name: \"-\",\n          product_status: 0,\n          cat_status: 0,\n          fda_status: 0,\n          name_status: 0,\n          typepro: \"-\",\n          type: \"-\",\n        });\n\n        // this.status = true\n      }\n    },\n    getfda(content){\n        var tt = content.split(' ')\n\n    // console.log(tt);\n    var arr = []\n    for (let l = 0; l < tt.length; l++) {\n      var findfda = tt[l].replaceAll('-', '');\n      findfda = findfda.replaceAll(\"–\", \"\");\n      findfda = findfda.replaceAll(\".\", \"\");\n    findfda = findfda.replaceAll(/[^\\d.-]/g, '');\n    // console.log(findfda);\n    if (findfda) {\n      if (findfda.length == 13) {\n      arr.push(findfda)\n      }\n    }\n      \n    }\n    console.log(arr);\n    return arr;\n    }\n  },\n  mounted() {\n    this.product_token = this.$route.query.id\n    console.log(this.$route.query.id);\n    this.getproducttype()\n    this.getrulebasedtype()\n    if (this.$route.query.id) {\n      ProductsService.getproducttoken(this.$route.query.id).then((res)=>{\n        this.data = res.data\n        this.data.content = res.data.sentencefull\n        // console.log(res.data);\n      })\n    }\n    // var f = this.findfda('หมายเลขใบอนุญาต/อย.เลขจดแจ้ง 13-1-1-7562-2-0006')\n    // var text = [\"หมายเลขใบอนุญาต/อย.\",\"อย.\"];\n    // var sen = 'อย.14-1-02662-2-0021 อย. 13-1-1-7562-2-0006'\n    // var l = sen.split(' ')\n    // console.log(l);\n    // var f = this.findfda(sen)\n    // var text = [\"หมายเลขใบอนุญาต/อย.\",\"อย.\"];\n    //   // var end = ['']\n    //   var findfda = sen;\n    //   for (let t = 0; t < text.length; t++) {\n    //     console.log(findfda.indexOf(text[t]));\n        \n    //     console.log(this.getAllIndexes(l,text[t]));\n    //   }\n    // console.log(f);\n//     var best = {\n//     \"id\": 67,\n//     \"sentence\": {\n//         \"length\": 2,\n//         \"allcount\": 100,\n//         \"rule\": [\n//             8899,\n//             57\n//         ],\n//         \"name\": [\n//             \"ควบคุม\",\n//             \"น้ำหนัก\"\n//         ],\n//         \"map_id\": 75\n//     }\n// }\n//                   MapRuleBasedService.getbestrulebased(best).then(\n//                      (res) => {\n//                       console.log(res.data);\n//                     });\n    // var text = 'หมายเลขใบอนุญาต/อย. 13-1-13465-5-0052 จำนวนสินค้า 415 ส่งจาก'\n    // console.log(this.findfda(text));\n    // this.data.url =\n    //   \"https://shopee.co.th/%E2%99%A6%EF%B8%8F%E0%B9%82%E0%B8%89%E0%B8%A1%E0%B9%83%E0%B8%AB%E0%B8%A1%E0%B9%88-%E0%B8%82%E0%B8%AD%E0%B8%87%E0%B9%81%E0%B8%97%E0%B9%89%E2%99%A6%EF%B8%8F-%E0%B8%82%E0%B8%B2%E0%B8%A2%E0%B8%94%E0%B8%B5%E0%B8%A1%E0%B8%B2%E0%B8%81-%E0%B8%81%E0%B8%B2%E0%B9%81%E0%B8%9F-%E0%B8%A5%E0%B8%B4%E0%B9%82%E0%B8%8B%E0%B9%88-%E0%B8%9E%E0%B8%A5%E0%B8%B1%E0%B8%AA-%E2%80%8B-coffee-lishou-%E0%B8%81%E0%B8%B2%E0%B9%81%E0%B8%9F%E0%B8%84%E0%B8%A7%E0%B8%9A%E0%B8%84%E0%B8%B8%E0%B8%A1%E0%B8%99%E0%B9%89%E0%B8%B3%E0%B8%AB%E0%B8%99%E0%B8%B1%E0%B8%81-%E0%B8%81%E0%B8%B2%E0%B9%81%E0%B8%9F%E0%B8%84%E0%B8%B8%E0%B8%A1%E0%B8%AB%E0%B8%B4%E0%B8%A7-%E0%B8%81%E0%B8%B2%E0%B9%81%E0%B8%9F%E0%B8%A5%E0%B8%94%E0%B8%99%E0%B9%89%E0%B8%B3%E0%B8%AB%E0%B8%99%E0%B8%B1%E0%B8%81-%E0%B8%81%E0%B8%B2%E0%B9%81%E0%B8%9F%E0%B8%A5%E0%B8%94%E0%B8%84%E0%B8%A7%E0%B8%B2%E0%B8%A1%E0%B8%AD%E0%B9%89%E0%B8%A7%E0%B8%99\";\n    // this.data.content =\n    //   \"️ถ้าเป็นลูกค้าพิมแล้ว ดูแลจนน้ำหนักลดเลยค่ะ สั่งซื้อสินค้าแล้ว ทักแชทมาคุยกันได้เลยค่ะ\";\n    // // var url = this.data.url.split('-i.')\n    // var content = this.data.content.replaceAll(\n    //   /([\\uE000-\\uF8FF]|\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDDFF])/g,\n    //   \"\"\n    // );\n    // content = content.replaceAll(\n    //   /(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|\\ud83c[\\ude32-\\ude3a]|\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])/g,\n    //   \"\"\n    // );\n    // content = content.replaceAll(/(\\r\\n|\\n|\\r)/gm, \"\");\n    // content = content.replaceAll(\"_\", \"\");\n    // content = content.replaceAll(\"!\", \"\");\n    // content = content.replaceAll(\"*\", \"\");\n    // content = content.replaceAll(\"&\", \"\");\n    // content = content.replaceAll(\"#\", \"\");\n    // content = content.replaceAll(`_/l\\_`, \"\"); // eslint-disable-line\n    // // console.log(LinkService.getpythonlink()+'/wordtokendesc?text=' + content);\n    // // axios.get(LinkService.getpythonlink()+'/wordtokendesc?text='+content).then(async (res) => {\n    // //   console.log(res.data);\n    // // })\n    // console.log(LinkService.getpythonlink() + \"/checkkeyword?text=\" + content);\n    // var con = {\n    //   content: content,\n    // };\n    // axios\n    //   .post(LinkService.getpythonlink() + \"/checkkeyword?text=\" + content, con)\n    //   .then(async (res) => {\n    //     console.log(res.data);\n    //     //       for (let r = 0; r < res.data.length; r++) {\n    //     //         var advertise = {\n    //     //           product_token_id:1,\n    //     //           keyword_dict_id:res.data[r].keyword_dict_id,\n    //     //           dict_id:res.data[r].dict_id,\n    //     //           dict_name:res.data[r].dict_name,\n    //     //           sen:res.data[r].sen,\n    //     //           sentent:res.data[r].sentent,\n    //     //         }\n    //     //         AdvertiseService.createadvertise(advertise).then((res)=>{\n    //     //           console.log(res.data);\n    //     //         })\n    //     //       }\n    //   });\n    // //  console.log(url);\n    // //     var selectpro = {\n    // //       url:url[0]\n    // //      }\n    // //      MapRuleBasedService.getproduct_token(selectpro).then((res)=>{\n    // //       console.log(res.data);\n    // // var list = res.data\n    // // this.tokendata(list)\n    // // for (let l = 0; l < list.keyword.length; l++) {\n    // //   // console.log(this.list.keyword[l].map);\n    // //   // for (let m = 0; m < this.list.keyword[l].length; m++) {\n    // //     if (list.keyword[l].map) {\n    // //       var map = {\n    // //     url:JSON.stringify(list.keyword[l].map)\n    // //      }\n    // //     //  console.log(map);\n    // //      MapRuleBasedService.getmapproduct(map).then((res)=>{\n    // //       list.keyword[l].rulebase = res.data\n    // //       if (l+1 == list.keyword.length) {\n    // //         this.compare(list)\n    // //       }\n    // //      });\n    // //     }\n    // //   }\n    // // }\n    // // console.log(this.list);\n    // this.status = true;\n    // //  })\n  },\n};\n</script>\n\n<style>\nhtml,\nbody {\n  height: 100%;\n  margin: 0px;\n}\n</style>\n"]}]}